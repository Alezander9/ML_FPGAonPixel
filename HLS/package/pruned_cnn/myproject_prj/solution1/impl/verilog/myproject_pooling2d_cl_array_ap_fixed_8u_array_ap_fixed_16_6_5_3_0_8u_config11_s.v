// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer10_out_dout,
        layer10_out_num_data_valid,
        layer10_out_fifo_cap,
        layer10_out_empty_n,
        layer10_out_read,
        layer11_out_din,
        layer11_out_num_data_valid,
        layer11_out_fifo_cap,
        layer11_out_full_n,
        layer11_out_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] layer10_out_dout;
input  [5:0] layer10_out_num_data_valid;
input  [5:0] layer10_out_fifo_cap;
input   layer10_out_empty_n;
output   layer10_out_read;
output  [127:0] layer11_out_din;
input  [3:0] layer11_out_num_data_valid;
input  [3:0] layer11_out_fifo_cap;
input   layer11_out_full_n;
output   layer11_out_write;
output   start_out;
output   start_write;

reg ap_idle;
reg layer10_out_read;
reg layer11_out_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln55_reg_1606;
reg   [0:0] icmp_ln55_reg_1606_pp0_iter1_reg;
reg   [0:0] and_ln55_1_reg_1628;
reg    ap_predicate_op228_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_196_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] sY;
reg   [31:0] pY;
reg   [31:0] pX;
reg   [31:0] sX;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_13;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_12;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_11;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_10;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_9;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_8;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_7;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_6;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_5;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_4;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_q0;
reg    layer10_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer11_out_blk_n;
reg   [0:0] icmp_ln109_reg_1602;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln55_fu_212_p2;
wire   [0:0] icmp_ln55_2_fu_226_p2;
reg   [0:0] icmp_ln55_2_reg_1610;
wire   [0:0] icmp_ln55_3_fu_232_p2;
reg   [0:0] icmp_ln55_3_reg_1615;
wire   [0:0] icmp_ln76_fu_244_p2;
reg   [0:0] icmp_ln76_reg_1620;
wire   [0:0] icmp_ln80_fu_298_p2;
reg   [0:0] icmp_ln80_reg_1624;
wire   [0:0] and_ln55_1_fu_649_p2;
wire   [15:0] res_pack_fu_983_p3;
reg   [15:0] res_pack_reg_1632;
wire   [15:0] res_pack_4_fu_1063_p3;
reg   [15:0] res_pack_4_reg_1637;
wire   [15:0] res_pack_5_fu_1143_p3;
reg   [15:0] res_pack_5_reg_1642;
wire   [15:0] res_pack_6_fu_1223_p3;
reg   [15:0] res_pack_6_reg_1647;
wire   [15:0] select_ln65_14_fu_1303_p3;
reg   [15:0] select_ln65_14_reg_1652;
wire   [15:0] select_ln65_17_fu_1383_p3;
reg   [15:0] select_ln65_17_reg_1657;
wire   [15:0] select_ln65_20_fu_1463_p3;
reg   [15:0] select_ln65_20_reg_1662;
wire   [15:0] select_ln65_23_fu_1543_p3;
reg   [15:0] select_ln65_23_reg_1667;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_181_p4;
wire   [31:0] add_ln86_fu_1569_p2;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_177;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_177;
wire   [31:0] add_ln80_fu_292_p2;
wire   [31:0] add_ln76_fu_238_p2;
wire   [31:0] add_ln91_fu_264_p2;
wire   [15:0] trunc_ln115_fu_321_p1;
wire   [15:0] p_s_fu_345_p4;
wire   [15:0] p_7_fu_355_p4;
wire   [15:0] p_8_fu_365_p4;
wire   [15:0] p_9_fu_375_p4;
wire   [15:0] p_1_fu_385_p4;
wire   [15:0] trunc_ln115_6_fu_325_p4;
wire   [15:0] trunc_ln115_7_fu_335_p4;
reg   [4:0] indvar_flatten_fu_160;
wire   [4:0] add_ln109_fu_202_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] select_ln91_fu_256_p3;
wire   [0:0] and_ln55_fu_645_p2;
wire   [0:0] icmp_ln55_1_fu_639_p2;
wire   [35:0] pool_window_fu_655_p3;
wire   [35:0] pool_window_1_fu_663_p3;
wire   [0:0] icmp_ln65_fu_911_p2;
wire   [0:0] xor_ln65_fu_917_p2;
wire   [35:0] pool_window_2_fu_671_p3;
wire   [35:0] pool_window_3_fu_679_p3;
wire   [0:0] icmp_ln65_1_fu_931_p2;
wire   [0:0] xor_ln65_1_fu_937_p2;
wire   [35:0] select_ln65_fu_923_p3;
wire   [35:0] select_ln65_1_fu_943_p3;
wire   [0:0] icmp_ln65_2_fu_951_p2;
wire   [0:0] xor_ln65_2_fu_957_p2;
wire   [15:0] tmp_8_fu_963_p4;
wire   [15:0] tmp_9_fu_973_p4;
wire   [35:0] pool_window_4_fu_687_p3;
wire   [35:0] pool_window_5_fu_695_p3;
wire   [0:0] icmp_ln65_3_fu_991_p2;
wire   [0:0] xor_ln65_3_fu_997_p2;
wire   [35:0] pool_window_6_fu_703_p3;
wire   [35:0] pool_window_7_fu_711_p3;
wire   [0:0] icmp_ln65_4_fu_1011_p2;
wire   [0:0] xor_ln65_4_fu_1017_p2;
wire   [35:0] select_ln65_3_fu_1003_p3;
wire   [35:0] select_ln65_4_fu_1023_p3;
wire   [0:0] icmp_ln65_5_fu_1031_p2;
wire   [0:0] xor_ln65_5_fu_1037_p2;
wire   [15:0] tmp_s_fu_1043_p4;
wire   [15:0] tmp_1_fu_1053_p4;
wire   [35:0] pool_window_8_fu_719_p3;
wire   [35:0] pool_window_9_fu_727_p3;
wire   [0:0] icmp_ln65_6_fu_1071_p2;
wire   [0:0] xor_ln65_6_fu_1077_p2;
wire   [35:0] pool_window_31_fu_735_p3;
wire   [35:0] pool_window_10_fu_743_p3;
wire   [0:0] icmp_ln65_7_fu_1091_p2;
wire   [0:0] xor_ln65_7_fu_1097_p2;
wire   [35:0] select_ln65_6_fu_1083_p3;
wire   [35:0] select_ln65_7_fu_1103_p3;
wire   [0:0] icmp_ln65_8_fu_1111_p2;
wire   [0:0] xor_ln65_8_fu_1117_p2;
wire   [15:0] tmp_2_fu_1123_p4;
wire   [15:0] tmp_3_fu_1133_p4;
wire   [35:0] pool_window_11_fu_751_p3;
wire   [35:0] pool_window_12_fu_759_p3;
wire   [0:0] icmp_ln65_9_fu_1151_p2;
wire   [0:0] xor_ln65_9_fu_1157_p2;
wire   [35:0] pool_window_13_fu_767_p3;
wire   [35:0] pool_window_14_fu_775_p3;
wire   [0:0] icmp_ln65_10_fu_1171_p2;
wire   [0:0] xor_ln65_10_fu_1177_p2;
wire   [35:0] select_ln65_9_fu_1163_p3;
wire   [35:0] select_ln65_10_fu_1183_p3;
wire   [0:0] icmp_ln65_11_fu_1191_p2;
wire   [0:0] xor_ln65_11_fu_1197_p2;
wire   [15:0] tmp_4_fu_1203_p4;
wire   [15:0] tmp_5_fu_1213_p4;
wire   [35:0] pool_window_15_fu_783_p3;
wire   [35:0] pool_window_16_fu_791_p3;
wire   [0:0] icmp_ln65_12_fu_1231_p2;
wire   [0:0] xor_ln65_12_fu_1237_p2;
wire   [35:0] pool_window_17_fu_799_p3;
wire   [35:0] pool_window_18_fu_807_p3;
wire   [0:0] icmp_ln65_13_fu_1251_p2;
wire   [0:0] xor_ln65_13_fu_1257_p2;
wire   [35:0] select_ln65_12_fu_1243_p3;
wire   [35:0] select_ln65_13_fu_1263_p3;
wire   [0:0] icmp_ln65_14_fu_1271_p2;
wire   [0:0] xor_ln65_14_fu_1277_p2;
wire   [15:0] tmp_6_fu_1283_p4;
wire   [15:0] tmp_7_fu_1293_p4;
wire   [35:0] pool_window_19_fu_815_p3;
wire   [35:0] pool_window_20_fu_823_p3;
wire   [0:0] icmp_ln65_15_fu_1311_p2;
wire   [0:0] xor_ln65_15_fu_1317_p2;
wire   [35:0] pool_window_21_fu_831_p3;
wire   [35:0] pool_window_22_fu_839_p3;
wire   [0:0] icmp_ln65_16_fu_1331_p2;
wire   [0:0] xor_ln65_16_fu_1337_p2;
wire   [35:0] select_ln65_15_fu_1323_p3;
wire   [35:0] select_ln65_16_fu_1343_p3;
wire   [0:0] icmp_ln65_17_fu_1351_p2;
wire   [0:0] xor_ln65_17_fu_1357_p2;
wire   [15:0] tmp_10_fu_1363_p4;
wire   [15:0] tmp_11_fu_1373_p4;
wire   [35:0] pool_window_23_fu_847_p3;
wire   [35:0] pool_window_24_fu_855_p3;
wire   [0:0] icmp_ln65_18_fu_1391_p2;
wire   [0:0] xor_ln65_18_fu_1397_p2;
wire   [35:0] pool_window_25_fu_863_p3;
wire   [35:0] pool_window_26_fu_871_p3;
wire   [0:0] icmp_ln65_19_fu_1411_p2;
wire   [0:0] xor_ln65_19_fu_1417_p2;
wire   [35:0] select_ln65_18_fu_1403_p3;
wire   [35:0] select_ln65_19_fu_1423_p3;
wire   [0:0] icmp_ln65_20_fu_1431_p2;
wire   [0:0] xor_ln65_20_fu_1437_p2;
wire   [15:0] tmp_12_fu_1443_p4;
wire   [15:0] tmp_13_fu_1453_p4;
wire   [35:0] pool_window_27_fu_879_p3;
wire   [35:0] pool_window_28_fu_887_p3;
wire   [0:0] icmp_ln65_21_fu_1471_p2;
wire   [0:0] xor_ln65_21_fu_1477_p2;
wire   [35:0] pool_window_29_fu_895_p3;
wire   [35:0] pool_window_30_fu_903_p3;
wire   [0:0] icmp_ln65_22_fu_1491_p2;
wire   [0:0] xor_ln65_22_fu_1497_p2;
wire   [35:0] select_ln65_21_fu_1483_p3;
wire   [35:0] select_ln65_22_fu_1503_p3;
wire   [0:0] icmp_ln65_23_fu_1511_p2;
wire   [0:0] xor_ln65_23_fu_1517_p2;
wire   [15:0] tmp_14_fu_1523_p4;
wire   [15:0] tmp_15_fu_1533_p4;
wire   [0:0] icmp_ln86_fu_1555_p2;
wire   [31:0] select_ln86_fu_1561_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_264;
reg    ap_condition_262;
reg    ap_condition_353;
reg    ap_condition_288;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 sY = 32'd0;
#0 pY = 32'd0;
#0 pX = 32'd0;
#0 sX = 32'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 = 16'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_13 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_12 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_11 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_10 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_9 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_8 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_7 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_6 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_5 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_4 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap = 16'd0;
end

myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s_void_ppcA #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_we0),
    .d0(trunc_ln115_fu_321_p1),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_q0)
);

myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s_void_ppcA #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_q0)
);

myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s_void_ppcA #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_q0)
);

myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s_void_ppcA #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_q0)
);

myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s_void_ppcA #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_q0)
);

myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s_void_ppcA #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_q0)
);

myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s_void_ppcA #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_q0)
);

myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s_void_ppcA #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_q0)
);

myproject_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if ((1'b1 == ap_condition_264)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_177 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_177 <= ap_phi_reg_pp0_iter0_storemerge_reg_177;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if ((icmp_ln109_fu_196_p2 == 1'd0)) begin
            indvar_flatten_fu_160 <= add_ln109_fu_202_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_160 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_353)) begin
        if ((icmp_ln76_fu_244_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln76_fu_244_p2 == 1'd0)) begin
            pX <= add_ln76_fu_238_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_288)) begin
        if ((icmp_ln80_fu_298_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln80_fu_298_p2 == 1'd0)) begin
            pY <= add_ln80_fu_292_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_353)) begin
        if ((icmp_ln76_fu_244_p2 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln76_fu_244_p2 == 1'd0)) begin
            sX <= add_ln91_fu_264_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_1606 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln55_1_reg_1628 <= and_ln55_1_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln109_reg_1602 <= icmp_ln109_fu_196_p2;
        icmp_ln55_reg_1606_pp0_iter1_reg <= icmp_ln55_reg_1606;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_196_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln55_2_reg_1610 <= icmp_ln55_2_fu_226_p2;
        icmp_ln55_3_reg_1615 <= icmp_ln55_3_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_196_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln55_reg_1606 <= icmp_ln55_fu_212_p2;
        icmp_ln76_reg_1620 <= icmp_ln76_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_196_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln76_fu_244_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln80_reg_1624 <= icmp_ln80_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap <= {{layer10_out_dout[127:112]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1 <= {{layer10_out_dout[111:96]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_10 <= void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_q0;
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_11 <= void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_q0;
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_12 <= void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_q0;
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_13 <= void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_q0;
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2 <= {{layer10_out_dout[95:80]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3 <= {{layer10_out_dout[79:64]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_4 <= {{layer10_out_dout[63:48]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_5 <= {{layer10_out_dout[47:32]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_6 <= {{layer10_out_dout[31:16]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_7 <= trunc_ln115_fu_321_p1;
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_8 <= void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_q0;
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_9 <= void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel <= void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 <= void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln55_1_fu_649_p2) & (icmp_ln55_reg_1606 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_pack_4_reg_1637 <= res_pack_4_fu_1063_p3;
        res_pack_5_reg_1642 <= res_pack_5_fu_1143_p3;
        res_pack_6_reg_1647 <= res_pack_6_fu_1223_p3;
        res_pack_reg_1632 <= res_pack_fu_983_p3;
        select_ln65_14_reg_1652 <= select_ln65_14_fu_1303_p3;
        select_ln65_17_reg_1657 <= select_ln65_17_fu_1383_p3;
        select_ln65_20_reg_1662 <= select_ln65_20_fu_1463_p3;
        select_ln65_23_reg_1667 <= select_ln65_23_fu_1543_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln76_reg_1620 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sY <= ap_phi_mux_storemerge_phi_fu_181_p4;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_196_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln80_reg_1624 == 1'd0) & (icmp_ln76_reg_1620 == 1'd1) & (icmp_ln109_reg_1602 == 1'd0))) begin
        ap_phi_mux_storemerge_phi_fu_181_p4 = add_ln86_fu_1569_p2;
    end else begin
        ap_phi_mux_storemerge_phi_fu_181_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_177;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer10_out_blk_n = layer10_out_empty_n;
    end else begin
        layer10_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer10_out_read = 1'b1;
    end else begin
        layer10_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op228_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer11_out_blk_n = layer11_out_full_n;
    end else begin
        layer11_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op228_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer11_out_write = 1'b1;
    end else begin
        layer11_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_fu_202_p2 = (ap_sig_allocacmp_indvar_flatten_load + 5'd1);

assign add_ln76_fu_238_p2 = (pX + 32'd1);

assign add_ln80_fu_292_p2 = (pY + 32'd1);

assign add_ln86_fu_1569_p2 = (sY + select_ln86_fu_1561_p3);

assign add_ln91_fu_264_p2 = (sX + select_ln91_fu_256_p3);

assign and_ln55_1_fu_649_p2 = (icmp_ln55_1_fu_639_p2 & and_ln55_fu_645_p2);

assign and_ln55_fu_645_p2 = (icmp_ln55_3_reg_1615 & icmp_ln55_2_reg_1610);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_predicate_op228_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_predicate_op228_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_predicate_op228_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (layer10_out_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op228_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_262 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_264 = ((icmp_ln109_fu_196_p2 == 1'd0) & (icmp_ln80_fu_298_p2 == 1'd1) & (icmp_ln76_fu_244_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_288 = ((icmp_ln109_fu_196_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (icmp_ln76_fu_244_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_353 = ((icmp_ln109_fu_196_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_storemerge_reg_177 = 'bx;

always @ (*) begin
    ap_predicate_op228_write_state3 = ((1'd1 == and_ln55_1_reg_1628) & (icmp_ln55_reg_1606_pp0_iter1_reg == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln109_fu_196_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln55_1_fu_639_p2 = ((sY == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln55_2_fu_226_p2 = (($signed(pY) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_3_fu_232_p2 = (($signed(pX) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_212_p2 = ((sX == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln65_10_fu_1171_p2 = (($signed(pool_window_13_fu_767_p3) < $signed(pool_window_14_fu_775_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_11_fu_1191_p2 = (($signed(select_ln65_9_fu_1163_p3) < $signed(select_ln65_10_fu_1183_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_12_fu_1231_p2 = (($signed(pool_window_15_fu_783_p3) < $signed(pool_window_16_fu_791_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_13_fu_1251_p2 = (($signed(pool_window_17_fu_799_p3) < $signed(pool_window_18_fu_807_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_14_fu_1271_p2 = (($signed(select_ln65_12_fu_1243_p3) < $signed(select_ln65_13_fu_1263_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_15_fu_1311_p2 = (($signed(pool_window_19_fu_815_p3) < $signed(pool_window_20_fu_823_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_16_fu_1331_p2 = (($signed(pool_window_21_fu_831_p3) < $signed(pool_window_22_fu_839_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_17_fu_1351_p2 = (($signed(select_ln65_15_fu_1323_p3) < $signed(select_ln65_16_fu_1343_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_18_fu_1391_p2 = (($signed(pool_window_23_fu_847_p3) < $signed(pool_window_24_fu_855_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_19_fu_1411_p2 = (($signed(pool_window_25_fu_863_p3) < $signed(pool_window_26_fu_871_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_1_fu_931_p2 = (($signed(pool_window_2_fu_671_p3) < $signed(pool_window_3_fu_679_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_20_fu_1431_p2 = (($signed(select_ln65_18_fu_1403_p3) < $signed(select_ln65_19_fu_1423_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_21_fu_1471_p2 = (($signed(pool_window_27_fu_879_p3) < $signed(pool_window_28_fu_887_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_22_fu_1491_p2 = (($signed(pool_window_29_fu_895_p3) < $signed(pool_window_30_fu_903_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_23_fu_1511_p2 = (($signed(select_ln65_21_fu_1483_p3) < $signed(select_ln65_22_fu_1503_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_2_fu_951_p2 = (($signed(select_ln65_fu_923_p3) < $signed(select_ln65_1_fu_943_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_3_fu_991_p2 = (($signed(pool_window_4_fu_687_p3) < $signed(pool_window_5_fu_695_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_4_fu_1011_p2 = (($signed(pool_window_6_fu_703_p3) < $signed(pool_window_7_fu_711_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_5_fu_1031_p2 = (($signed(select_ln65_3_fu_1003_p3) < $signed(select_ln65_4_fu_1023_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_6_fu_1071_p2 = (($signed(pool_window_8_fu_719_p3) < $signed(pool_window_9_fu_727_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_7_fu_1091_p2 = (($signed(pool_window_31_fu_735_p3) < $signed(pool_window_10_fu_743_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_8_fu_1111_p2 = (($signed(select_ln65_6_fu_1083_p3) < $signed(select_ln65_7_fu_1103_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_9_fu_1151_p2 = (($signed(pool_window_11_fu_751_p3) < $signed(pool_window_12_fu_759_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_911_p2 = (($signed(pool_window_fu_655_p3) < $signed(pool_window_1_fu_663_p3)) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_244_p2 = ((add_ln76_fu_238_p2 == 32'd6) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_298_p2 = ((add_ln80_fu_292_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_1555_p2 = ((sY == 32'd1) ? 1'b1 : 1'b0);

assign layer11_out_din = {{{{{{{{select_ln65_23_reg_1667}, {select_ln65_20_reg_1662}}, {select_ln65_17_reg_1657}}, {select_ln65_14_reg_1652}}, {res_pack_6_reg_1647}}, {res_pack_5_reg_1642}}, {res_pack_4_reg_1637}}, {res_pack_reg_1632}};

assign p_1_fu_385_p4 = {{layer10_out_dout[95:80]}};

assign p_7_fu_355_p4 = {{layer10_out_dout[47:32]}};

assign p_8_fu_365_p4 = {{layer10_out_dout[63:48]}};

assign p_9_fu_375_p4 = {{layer10_out_dout[79:64]}};

assign p_s_fu_345_p4 = {{layer10_out_dout[31:16]}};

assign pool_window_10_fu_743_p3 = {{p_7_fu_355_p4}, {20'd0}};

assign pool_window_11_fu_751_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_12}, {20'd0}};

assign pool_window_12_fu_759_p3 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_q0}, {20'd0}};

assign pool_window_13_fu_767_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_4}, {20'd0}};

assign pool_window_14_fu_775_p3 = {{p_8_fu_365_p4}, {20'd0}};

assign pool_window_15_fu_783_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_11}, {20'd0}};

assign pool_window_16_fu_791_p3 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_q0}, {20'd0}};

assign pool_window_17_fu_799_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3}, {20'd0}};

assign pool_window_18_fu_807_p3 = {{p_9_fu_375_p4}, {20'd0}};

assign pool_window_19_fu_815_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_10}, {20'd0}};

assign pool_window_1_fu_663_p3 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_7_q0}, {20'd0}};

assign pool_window_20_fu_823_p3 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_q0}, {20'd0}};

assign pool_window_21_fu_831_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2}, {20'd0}};

assign pool_window_22_fu_839_p3 = {{p_1_fu_385_p4}, {20'd0}};

assign pool_window_23_fu_847_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_9}, {20'd0}};

assign pool_window_24_fu_855_p3 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_q0}, {20'd0}};

assign pool_window_25_fu_863_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1}, {20'd0}};

assign pool_window_26_fu_871_p3 = {{trunc_ln115_6_fu_325_p4}, {20'd0}};

assign pool_window_27_fu_879_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_8}, {20'd0}};

assign pool_window_28_fu_887_p3 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_q0}, {20'd0}};

assign pool_window_29_fu_895_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap}, {20'd0}};

assign pool_window_2_fu_671_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_7}, {20'd0}};

assign pool_window_30_fu_903_p3 = {{trunc_ln115_7_fu_335_p4}, {20'd0}};

assign pool_window_31_fu_735_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_5}, {20'd0}};

assign pool_window_3_fu_679_p3 = {{trunc_ln115_fu_321_p1}, {20'd0}};

assign pool_window_4_fu_687_p3 = {{void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel}, {20'd0}};

assign pool_window_5_fu_695_p3 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_q0}, {20'd0}};

assign pool_window_6_fu_703_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_6}, {20'd0}};

assign pool_window_7_fu_711_p3 = {{p_s_fu_345_p4}, {20'd0}};

assign pool_window_8_fu_719_p3 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_13}, {20'd0}};

assign pool_window_9_fu_727_p3 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_q0}, {20'd0}};

assign pool_window_fu_655_p3 = {{void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1}, {20'd0}};

assign res_pack_4_fu_1063_p3 = ((xor_ln65_5_fu_1037_p2[0:0] == 1'b1) ? tmp_s_fu_1043_p4 : tmp_1_fu_1053_p4);

assign res_pack_5_fu_1143_p3 = ((xor_ln65_8_fu_1117_p2[0:0] == 1'b1) ? tmp_2_fu_1123_p4 : tmp_3_fu_1133_p4);

assign res_pack_6_fu_1223_p3 = ((xor_ln65_11_fu_1197_p2[0:0] == 1'b1) ? tmp_4_fu_1203_p4 : tmp_5_fu_1213_p4);

assign res_pack_fu_983_p3 = ((xor_ln65_2_fu_957_p2[0:0] == 1'b1) ? tmp_8_fu_963_p4 : tmp_9_fu_973_p4);

assign select_ln65_10_fu_1183_p3 = ((xor_ln65_10_fu_1177_p2[0:0] == 1'b1) ? pool_window_13_fu_767_p3 : pool_window_14_fu_775_p3);

assign select_ln65_12_fu_1243_p3 = ((xor_ln65_12_fu_1237_p2[0:0] == 1'b1) ? pool_window_15_fu_783_p3 : pool_window_16_fu_791_p3);

assign select_ln65_13_fu_1263_p3 = ((xor_ln65_13_fu_1257_p2[0:0] == 1'b1) ? pool_window_17_fu_799_p3 : pool_window_18_fu_807_p3);

assign select_ln65_14_fu_1303_p3 = ((xor_ln65_14_fu_1277_p2[0:0] == 1'b1) ? tmp_6_fu_1283_p4 : tmp_7_fu_1293_p4);

assign select_ln65_15_fu_1323_p3 = ((xor_ln65_15_fu_1317_p2[0:0] == 1'b1) ? pool_window_19_fu_815_p3 : pool_window_20_fu_823_p3);

assign select_ln65_16_fu_1343_p3 = ((xor_ln65_16_fu_1337_p2[0:0] == 1'b1) ? pool_window_21_fu_831_p3 : pool_window_22_fu_839_p3);

assign select_ln65_17_fu_1383_p3 = ((xor_ln65_17_fu_1357_p2[0:0] == 1'b1) ? tmp_10_fu_1363_p4 : tmp_11_fu_1373_p4);

assign select_ln65_18_fu_1403_p3 = ((xor_ln65_18_fu_1397_p2[0:0] == 1'b1) ? pool_window_23_fu_847_p3 : pool_window_24_fu_855_p3);

assign select_ln65_19_fu_1423_p3 = ((xor_ln65_19_fu_1417_p2[0:0] == 1'b1) ? pool_window_25_fu_863_p3 : pool_window_26_fu_871_p3);

assign select_ln65_1_fu_943_p3 = ((xor_ln65_1_fu_937_p2[0:0] == 1'b1) ? pool_window_2_fu_671_p3 : pool_window_3_fu_679_p3);

assign select_ln65_20_fu_1463_p3 = ((xor_ln65_20_fu_1437_p2[0:0] == 1'b1) ? tmp_12_fu_1443_p4 : tmp_13_fu_1453_p4);

assign select_ln65_21_fu_1483_p3 = ((xor_ln65_21_fu_1477_p2[0:0] == 1'b1) ? pool_window_27_fu_879_p3 : pool_window_28_fu_887_p3);

assign select_ln65_22_fu_1503_p3 = ((xor_ln65_22_fu_1497_p2[0:0] == 1'b1) ? pool_window_29_fu_895_p3 : pool_window_30_fu_903_p3);

assign select_ln65_23_fu_1543_p3 = ((xor_ln65_23_fu_1517_p2[0:0] == 1'b1) ? tmp_14_fu_1523_p4 : tmp_15_fu_1533_p4);

assign select_ln65_3_fu_1003_p3 = ((xor_ln65_3_fu_997_p2[0:0] == 1'b1) ? pool_window_4_fu_687_p3 : pool_window_5_fu_695_p3);

assign select_ln65_4_fu_1023_p3 = ((xor_ln65_4_fu_1017_p2[0:0] == 1'b1) ? pool_window_6_fu_703_p3 : pool_window_7_fu_711_p3);

assign select_ln65_6_fu_1083_p3 = ((xor_ln65_6_fu_1077_p2[0:0] == 1'b1) ? pool_window_8_fu_719_p3 : pool_window_9_fu_727_p3);

assign select_ln65_7_fu_1103_p3 = ((xor_ln65_7_fu_1097_p2[0:0] == 1'b1) ? pool_window_31_fu_735_p3 : pool_window_10_fu_743_p3);

assign select_ln65_9_fu_1163_p3 = ((xor_ln65_9_fu_1157_p2[0:0] == 1'b1) ? pool_window_11_fu_751_p3 : pool_window_12_fu_759_p3);

assign select_ln65_fu_923_p3 = ((xor_ln65_fu_917_p2[0:0] == 1'b1) ? pool_window_fu_655_p3 : pool_window_1_fu_663_p3);

assign select_ln86_fu_1561_p3 = ((icmp_ln86_fu_1555_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign select_ln91_fu_256_p3 = ((icmp_ln55_fu_212_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign start_out = real_start;

assign tmp_10_fu_1363_p4 = {{select_ln65_15_fu_1323_p3[35:20]}};

assign tmp_11_fu_1373_p4 = {{select_ln65_16_fu_1343_p3[35:20]}};

assign tmp_12_fu_1443_p4 = {{select_ln65_18_fu_1403_p3[35:20]}};

assign tmp_13_fu_1453_p4 = {{select_ln65_19_fu_1423_p3[35:20]}};

assign tmp_14_fu_1523_p4 = {{select_ln65_21_fu_1483_p3[35:20]}};

assign tmp_15_fu_1533_p4 = {{select_ln65_22_fu_1503_p3[35:20]}};

assign tmp_1_fu_1053_p4 = {{select_ln65_4_fu_1023_p3[35:20]}};

assign tmp_2_fu_1123_p4 = {{select_ln65_6_fu_1083_p3[35:20]}};

assign tmp_3_fu_1133_p4 = {{select_ln65_7_fu_1103_p3[35:20]}};

assign tmp_4_fu_1203_p4 = {{select_ln65_9_fu_1163_p3[35:20]}};

assign tmp_5_fu_1213_p4 = {{select_ln65_10_fu_1183_p3[35:20]}};

assign tmp_6_fu_1283_p4 = {{select_ln65_12_fu_1243_p3[35:20]}};

assign tmp_7_fu_1293_p4 = {{select_ln65_13_fu_1263_p3[35:20]}};

assign tmp_8_fu_963_p4 = {{select_ln65_fu_923_p3[35:20]}};

assign tmp_9_fu_973_p4 = {{select_ln65_1_fu_943_p3[35:20]}};

assign tmp_s_fu_1043_p4 = {{select_ln65_3_fu_1003_p3[35:20]}};

assign trunc_ln115_6_fu_325_p4 = {{layer10_out_dout[111:96]}};

assign trunc_ln115_7_fu_335_p4 = {{layer10_out_dout[127:112]}};

assign trunc_ln115_fu_321_p1 = layer10_out_dout[15:0];

assign void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_1_d0 = {{layer10_out_dout[111:96]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_2_d0 = {{layer10_out_dout[95:80]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_3_d0 = {{layer10_out_dout[79:64]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_4_d0 = {{layer10_out_dout[63:48]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_5_d0 = {{layer10_out_dout[47:32]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_6_d0 = {{layer10_out_dout[31:16]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_8u_0_line_buffer_d0 = {{layer10_out_dout[127:112]}};

assign xor_ln65_10_fu_1177_p2 = (icmp_ln65_10_fu_1171_p2 ^ 1'd1);

assign xor_ln65_11_fu_1197_p2 = (icmp_ln65_11_fu_1191_p2 ^ 1'd1);

assign xor_ln65_12_fu_1237_p2 = (icmp_ln65_12_fu_1231_p2 ^ 1'd1);

assign xor_ln65_13_fu_1257_p2 = (icmp_ln65_13_fu_1251_p2 ^ 1'd1);

assign xor_ln65_14_fu_1277_p2 = (icmp_ln65_14_fu_1271_p2 ^ 1'd1);

assign xor_ln65_15_fu_1317_p2 = (icmp_ln65_15_fu_1311_p2 ^ 1'd1);

assign xor_ln65_16_fu_1337_p2 = (icmp_ln65_16_fu_1331_p2 ^ 1'd1);

assign xor_ln65_17_fu_1357_p2 = (icmp_ln65_17_fu_1351_p2 ^ 1'd1);

assign xor_ln65_18_fu_1397_p2 = (icmp_ln65_18_fu_1391_p2 ^ 1'd1);

assign xor_ln65_19_fu_1417_p2 = (icmp_ln65_19_fu_1411_p2 ^ 1'd1);

assign xor_ln65_1_fu_937_p2 = (icmp_ln65_1_fu_931_p2 ^ 1'd1);

assign xor_ln65_20_fu_1437_p2 = (icmp_ln65_20_fu_1431_p2 ^ 1'd1);

assign xor_ln65_21_fu_1477_p2 = (icmp_ln65_21_fu_1471_p2 ^ 1'd1);

assign xor_ln65_22_fu_1497_p2 = (icmp_ln65_22_fu_1491_p2 ^ 1'd1);

assign xor_ln65_23_fu_1517_p2 = (icmp_ln65_23_fu_1511_p2 ^ 1'd1);

assign xor_ln65_2_fu_957_p2 = (icmp_ln65_2_fu_951_p2 ^ 1'd1);

assign xor_ln65_3_fu_997_p2 = (icmp_ln65_3_fu_991_p2 ^ 1'd1);

assign xor_ln65_4_fu_1017_p2 = (icmp_ln65_4_fu_1011_p2 ^ 1'd1);

assign xor_ln65_5_fu_1037_p2 = (icmp_ln65_5_fu_1031_p2 ^ 1'd1);

assign xor_ln65_6_fu_1077_p2 = (icmp_ln65_6_fu_1071_p2 ^ 1'd1);

assign xor_ln65_7_fu_1097_p2 = (icmp_ln65_7_fu_1091_p2 ^ 1'd1);

assign xor_ln65_8_fu_1117_p2 = (icmp_ln65_8_fu_1111_p2 ^ 1'd1);

assign xor_ln65_9_fu_1157_p2 = (icmp_ln65_9_fu_1151_p2 ^ 1'd1);

assign xor_ln65_fu_917_p2 = (icmp_ln65_fu_911_p2 ^ 1'd1);

endmodule //myproject_pooling2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config11_s
