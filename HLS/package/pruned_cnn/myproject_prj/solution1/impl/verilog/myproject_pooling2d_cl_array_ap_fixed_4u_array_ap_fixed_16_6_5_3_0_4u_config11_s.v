// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer10_out_dout,
        layer10_out_num_data_valid,
        layer10_out_fifo_cap,
        layer10_out_empty_n,
        layer10_out_read,
        layer11_out_din,
        layer11_out_num_data_valid,
        layer11_out_fifo_cap,
        layer11_out_full_n,
        layer11_out_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] layer10_out_dout;
input  [5:0] layer10_out_num_data_valid;
input  [5:0] layer10_out_fifo_cap;
input   layer10_out_empty_n;
output   layer10_out_read;
output  [63:0] layer11_out_din;
input  [3:0] layer11_out_num_data_valid;
input  [3:0] layer11_out_fifo_cap;
input   layer11_out_full_n;
output   layer11_out_write;
output   start_out;
output   start_write;

reg ap_idle;
reg layer10_out_read;
reg layer11_out_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln55_reg_912;
reg   [0:0] icmp_ln55_reg_912_pp0_iter1_reg;
reg   [0:0] and_ln55_1_reg_934;
reg    ap_predicate_op136_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_154_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] sY;
reg   [31:0] pY;
reg   [31:0] pX;
reg   [31:0] sX;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
reg    layer10_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer11_out_blk_n;
reg   [0:0] icmp_ln109_reg_908;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln55_fu_170_p2;
wire   [0:0] icmp_ln55_2_fu_184_p2;
reg   [0:0] icmp_ln55_2_reg_916;
wire   [0:0] icmp_ln55_3_fu_190_p2;
reg   [0:0] icmp_ln55_3_reg_921;
wire   [0:0] icmp_ln76_fu_202_p2;
reg   [0:0] icmp_ln76_reg_926;
wire   [0:0] icmp_ln80_fu_256_p2;
reg   [0:0] icmp_ln80_reg_930;
wire   [0:0] and_ln55_1_fu_447_p2;
wire   [13:0] select_ln65_2_fu_665_p3;
reg   [13:0] select_ln65_2_reg_938;
wire   [13:0] select_ln65_5_fu_725_p3;
reg   [13:0] select_ln65_5_reg_943;
wire   [13:0] select_ln65_8_fu_785_p3;
reg   [13:0] select_ln65_8_reg_948;
wire   [13:0] select_ln65_11_fu_845_p3;
reg   [13:0] select_ln65_11_reg_953;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_139_p4;
wire   [31:0] add_ln86_fu_871_p2;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_135;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_135;
wire   [31:0] add_ln80_fu_250_p2;
wire   [31:0] add_ln76_fu_196_p2;
wire   [31:0] add_ln91_fu_222_p2;
wire   [15:0] trunc_ln115_fu_279_p1;
reg   [4:0] indvar_flatten_fu_118;
wire   [4:0] add_ln109_fu_160_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] select_ln91_fu_214_p3;
wire   [0:0] and_ln55_fu_443_p2;
wire   [0:0] icmp_ln55_1_fu_437_p2;
wire   [13:0] trunc_ln1_fu_453_p4;
wire   [13:0] trunc_ln63_1_fu_463_p4;
wire   [0:0] icmp_ln65_fu_613_p2;
wire   [0:0] xor_ln65_fu_619_p2;
wire   [13:0] trunc_ln63_2_fu_473_p4;
wire   [13:0] trunc_ln63_3_fu_483_p4;
wire   [0:0] icmp_ln65_1_fu_633_p2;
wire   [0:0] xor_ln65_1_fu_639_p2;
wire   [13:0] select_ln65_fu_625_p3;
wire   [13:0] select_ln65_1_fu_645_p3;
wire   [0:0] icmp_ln65_2_fu_653_p2;
wire   [0:0] xor_ln65_2_fu_659_p2;
wire   [13:0] trunc_ln63_4_fu_493_p4;
wire   [13:0] trunc_ln63_5_fu_503_p4;
wire   [0:0] icmp_ln65_3_fu_673_p2;
wire   [0:0] xor_ln65_3_fu_679_p2;
wire   [13:0] trunc_ln63_6_fu_513_p4;
wire   [13:0] trunc_ln63_7_fu_523_p4;
wire   [0:0] icmp_ln65_4_fu_693_p2;
wire   [0:0] xor_ln65_4_fu_699_p2;
wire   [13:0] select_ln65_3_fu_685_p3;
wire   [13:0] select_ln65_4_fu_705_p3;
wire   [0:0] icmp_ln65_5_fu_713_p2;
wire   [0:0] xor_ln65_5_fu_719_p2;
wire   [13:0] trunc_ln63_8_fu_533_p4;
wire   [13:0] trunc_ln63_9_fu_543_p4;
wire   [0:0] icmp_ln65_6_fu_733_p2;
wire   [0:0] xor_ln65_6_fu_739_p2;
wire   [13:0] trunc_ln63_s_fu_553_p4;
wire   [13:0] trunc_ln63_10_fu_563_p4;
wire   [0:0] icmp_ln65_7_fu_753_p2;
wire   [0:0] xor_ln65_7_fu_759_p2;
wire   [13:0] select_ln65_6_fu_745_p3;
wire   [13:0] select_ln65_7_fu_765_p3;
wire   [0:0] icmp_ln65_8_fu_773_p2;
wire   [0:0] xor_ln65_8_fu_779_p2;
wire   [13:0] trunc_ln63_11_fu_573_p4;
wire   [13:0] trunc_ln63_12_fu_583_p4;
wire   [0:0] icmp_ln65_9_fu_793_p2;
wire   [0:0] xor_ln65_9_fu_799_p2;
wire   [13:0] trunc_ln63_13_fu_593_p4;
wire   [13:0] trunc_ln63_14_fu_603_p4;
wire   [0:0] icmp_ln65_10_fu_813_p2;
wire   [0:0] xor_ln65_10_fu_819_p2;
wire   [13:0] select_ln65_9_fu_805_p3;
wire   [13:0] select_ln65_10_fu_825_p3;
wire   [0:0] icmp_ln65_11_fu_833_p2;
wire   [0:0] xor_ln65_11_fu_839_p2;
wire   [0:0] icmp_ln86_fu_857_p2;
wire   [31:0] select_ln86_fu_863_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_216;
reg    ap_condition_214;
reg    ap_condition_281;
reg    ap_condition_240;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 sY = 32'd0;
#0 pY = 32'd0;
#0 pX = 32'd0;
#0 sX = 32'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2 = 16'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 = 16'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel = 16'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap = 16'd0;
end

myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0),
    .d0(trunc_ln115_fu_279_p1),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0)
);

myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0)
);

myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0)
);

myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd5),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0)
);

myproject_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_214)) begin
        if ((1'b1 == ap_condition_216)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_135 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_135 <= ap_phi_reg_pp0_iter0_storemerge_reg_135;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_214)) begin
        if ((icmp_ln109_fu_154_p2 == 1'd0)) begin
            indvar_flatten_fu_118 <= add_ln109_fu_160_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_118 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_281)) begin
        if ((icmp_ln76_fu_202_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln76_fu_202_p2 == 1'd0)) begin
            pX <= add_ln76_fu_196_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_240)) begin
        if ((icmp_ln80_fu_256_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln80_fu_256_p2 == 1'd0)) begin
            pY <= add_ln80_fu_250_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_281)) begin
        if ((icmp_ln76_fu_202_p2 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln76_fu_202_p2 == 1'd0)) begin
            sX <= add_ln91_fu_222_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_912 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln55_1_reg_934 <= and_ln55_1_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln109_reg_908 <= icmp_ln109_fu_154_p2;
        icmp_ln55_reg_912_pp0_iter1_reg <= icmp_ln55_reg_912;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_154_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln55_fu_170_p2 == 1'd1))) begin
        icmp_ln55_2_reg_916 <= icmp_ln55_2_fu_184_p2;
        icmp_ln55_3_reg_921 <= icmp_ln55_3_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_154_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln55_reg_912 <= icmp_ln55_fu_170_p2;
        icmp_ln76_reg_926 <= icmp_ln76_fu_202_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_154_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_fu_202_p2 == 1'd1))) begin
        icmp_ln80_reg_930 <= icmp_ln80_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap <= {{layer10_out_dout[63:48]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1 <= {{layer10_out_dout[47:32]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2 <= {{layer10_out_dout[31:16]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3 <= trunc_ln115_fu_279_p1;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_reg_926 == 1'd1))) begin
        sY <= ap_phi_mux_storemerge_phi_fu_139_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln55_1_fu_447_p2) & (icmp_ln55_reg_912 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln65_11_reg_953 <= select_ln65_11_fu_845_p3;
        select_ln65_2_reg_938 <= select_ln65_2_fu_665_p3;
        select_ln65_5_reg_943 <= select_ln65_5_fu_725_p3;
        select_ln65_8_reg_948 <= select_ln65_8_fu_785_p3;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_154_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln80_reg_930 == 1'd0) & (icmp_ln76_reg_926 == 1'd1) & (icmp_ln109_reg_908 == 1'd0))) begin
        ap_phi_mux_storemerge_phi_fu_139_p4 = add_ln86_fu_871_p2;
    end else begin
        ap_phi_mux_storemerge_phi_fu_139_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_135;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer10_out_blk_n = layer10_out_empty_n;
    end else begin
        layer10_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer10_out_read = 1'b1;
    end else begin
        layer10_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op136_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer11_out_blk_n = layer11_out_full_n;
    end else begin
        layer11_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op136_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer11_out_write = 1'b1;
    end else begin
        layer11_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_fu_160_p2 = (ap_sig_allocacmp_indvar_flatten_load + 5'd1);

assign add_ln76_fu_196_p2 = (pX + 32'd1);

assign add_ln80_fu_250_p2 = (pY + 32'd1);

assign add_ln86_fu_871_p2 = (sY + select_ln86_fu_863_p3);

assign add_ln91_fu_222_p2 = (sX + select_ln91_fu_214_p3);

assign and_ln55_1_fu_447_p2 = (icmp_ln55_1_fu_437_p2 & and_ln55_fu_443_p2);

assign and_ln55_fu_443_p2 = (icmp_ln55_3_reg_921 & icmp_ln55_2_reg_916);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_predicate_op136_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_predicate_op136_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_predicate_op136_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (layer10_out_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op136_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_214 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_216 = ((icmp_ln109_fu_154_p2 == 1'd0) & (icmp_ln80_fu_256_p2 == 1'd1) & (icmp_ln76_fu_202_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_240 = ((icmp_ln109_fu_154_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_fu_202_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_281 = ((icmp_ln109_fu_154_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_storemerge_reg_135 = 'bx;

always @ (*) begin
    ap_predicate_op136_write_state3 = ((1'd1 == and_ln55_1_reg_934) & (icmp_ln55_reg_912_pp0_iter1_reg == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln109_fu_154_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln55_1_fu_437_p2 = ((sY == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln55_2_fu_184_p2 = (($signed(pY) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_3_fu_190_p2 = (($signed(pX) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_170_p2 = ((sX == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln65_10_fu_813_p2 = (($signed(trunc_ln63_13_fu_593_p4) < $signed(trunc_ln63_14_fu_603_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_11_fu_833_p2 = (($signed(select_ln65_9_fu_805_p3) < $signed(select_ln65_10_fu_825_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_1_fu_633_p2 = (($signed(trunc_ln63_2_fu_473_p4) < $signed(trunc_ln63_3_fu_483_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_2_fu_653_p2 = (($signed(select_ln65_fu_625_p3) < $signed(select_ln65_1_fu_645_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_3_fu_673_p2 = (($signed(trunc_ln63_4_fu_493_p4) < $signed(trunc_ln63_5_fu_503_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_4_fu_693_p2 = (($signed(trunc_ln63_6_fu_513_p4) < $signed(trunc_ln63_7_fu_523_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_5_fu_713_p2 = (($signed(select_ln65_3_fu_685_p3) < $signed(select_ln65_4_fu_705_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_6_fu_733_p2 = (($signed(trunc_ln63_8_fu_533_p4) < $signed(trunc_ln63_9_fu_543_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_7_fu_753_p2 = (($signed(trunc_ln63_s_fu_553_p4) < $signed(trunc_ln63_10_fu_563_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_8_fu_773_p2 = (($signed(select_ln65_6_fu_745_p3) < $signed(select_ln65_7_fu_765_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_9_fu_793_p2 = (($signed(trunc_ln63_11_fu_573_p4) < $signed(trunc_ln63_12_fu_583_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_613_p2 = (($signed(trunc_ln1_fu_453_p4) < $signed(trunc_ln63_1_fu_463_p4)) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_202_p2 = ((add_ln76_fu_196_p2 == 32'd6) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_256_p2 = ((add_ln80_fu_250_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_857_p2 = ((sY == 32'd1) ? 1'b1 : 1'b0);

assign layer11_out_din = {{{{{{{{select_ln65_11_reg_953}, {2'd0}}, {select_ln65_8_reg_948}}, {2'd0}}, {select_ln65_5_reg_943}}, {2'd0}}, {select_ln65_2_reg_938}}, {2'd0}};

assign select_ln65_10_fu_825_p3 = ((xor_ln65_10_fu_819_p2[0:0] == 1'b1) ? trunc_ln63_13_fu_593_p4 : trunc_ln63_14_fu_603_p4);

assign select_ln65_11_fu_845_p3 = ((xor_ln65_11_fu_839_p2[0:0] == 1'b1) ? select_ln65_9_fu_805_p3 : select_ln65_10_fu_825_p3);

assign select_ln65_1_fu_645_p3 = ((xor_ln65_1_fu_639_p2[0:0] == 1'b1) ? trunc_ln63_2_fu_473_p4 : trunc_ln63_3_fu_483_p4);

assign select_ln65_2_fu_665_p3 = ((xor_ln65_2_fu_659_p2[0:0] == 1'b1) ? select_ln65_fu_625_p3 : select_ln65_1_fu_645_p3);

assign select_ln65_3_fu_685_p3 = ((xor_ln65_3_fu_679_p2[0:0] == 1'b1) ? trunc_ln63_4_fu_493_p4 : trunc_ln63_5_fu_503_p4);

assign select_ln65_4_fu_705_p3 = ((xor_ln65_4_fu_699_p2[0:0] == 1'b1) ? trunc_ln63_6_fu_513_p4 : trunc_ln63_7_fu_523_p4);

assign select_ln65_5_fu_725_p3 = ((xor_ln65_5_fu_719_p2[0:0] == 1'b1) ? select_ln65_3_fu_685_p3 : select_ln65_4_fu_705_p3);

assign select_ln65_6_fu_745_p3 = ((xor_ln65_6_fu_739_p2[0:0] == 1'b1) ? trunc_ln63_8_fu_533_p4 : trunc_ln63_9_fu_543_p4);

assign select_ln65_7_fu_765_p3 = ((xor_ln65_7_fu_759_p2[0:0] == 1'b1) ? trunc_ln63_s_fu_553_p4 : trunc_ln63_10_fu_563_p4);

assign select_ln65_8_fu_785_p3 = ((xor_ln65_8_fu_779_p2[0:0] == 1'b1) ? select_ln65_6_fu_745_p3 : select_ln65_7_fu_765_p3);

assign select_ln65_9_fu_805_p3 = ((xor_ln65_9_fu_799_p2[0:0] == 1'b1) ? trunc_ln63_11_fu_573_p4 : trunc_ln63_12_fu_583_p4);

assign select_ln65_fu_625_p3 = ((xor_ln65_fu_619_p2[0:0] == 1'b1) ? trunc_ln1_fu_453_p4 : trunc_ln63_1_fu_463_p4);

assign select_ln86_fu_863_p3 = ((icmp_ln86_fu_857_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign select_ln91_fu_214_p3 = ((icmp_ln55_fu_170_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign start_out = real_start;

assign trunc_ln115_fu_279_p1 = layer10_out_dout[15:0];

assign trunc_ln1_fu_453_p4 = {{void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2[15:2]}};

assign trunc_ln63_10_fu_563_p4 = {{layer10_out_dout[47:34]}};

assign trunc_ln63_11_fu_573_p4 = {{void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3[15:2]}};

assign trunc_ln63_12_fu_583_p4 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0[15:2]}};

assign trunc_ln63_13_fu_593_p4 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap[15:2]}};

assign trunc_ln63_14_fu_603_p4 = {{layer10_out_dout[63:50]}};

assign trunc_ln63_1_fu_463_p4 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0[15:2]}};

assign trunc_ln63_2_fu_473_p4 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3[15:2]}};

assign trunc_ln63_3_fu_483_p4 = {{layer10_out_dout[15:2]}};

assign trunc_ln63_4_fu_493_p4 = {{void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1[15:2]}};

assign trunc_ln63_5_fu_503_p4 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0[15:2]}};

assign trunc_ln63_6_fu_513_p4 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2[15:2]}};

assign trunc_ln63_7_fu_523_p4 = {{layer10_out_dout[31:18]}};

assign trunc_ln63_8_fu_533_p4 = {{void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel[15:2]}};

assign trunc_ln63_9_fu_543_p4 = {{void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0[15:2]}};

assign trunc_ln63_s_fu_553_p4 = {{p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1[15:2]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0 = {{layer10_out_dout[47:32]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0 = {{layer10_out_dout[31:16]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0 = {{layer10_out_dout[63:48]}};

assign xor_ln65_10_fu_819_p2 = (icmp_ln65_10_fu_813_p2 ^ 1'd1);

assign xor_ln65_11_fu_839_p2 = (icmp_ln65_11_fu_833_p2 ^ 1'd1);

assign xor_ln65_1_fu_639_p2 = (icmp_ln65_1_fu_633_p2 ^ 1'd1);

assign xor_ln65_2_fu_659_p2 = (icmp_ln65_2_fu_653_p2 ^ 1'd1);

assign xor_ln65_3_fu_679_p2 = (icmp_ln65_3_fu_673_p2 ^ 1'd1);

assign xor_ln65_4_fu_699_p2 = (icmp_ln65_4_fu_693_p2 ^ 1'd1);

assign xor_ln65_5_fu_719_p2 = (icmp_ln65_5_fu_713_p2 ^ 1'd1);

assign xor_ln65_6_fu_739_p2 = (icmp_ln65_6_fu_733_p2 ^ 1'd1);

assign xor_ln65_7_fu_759_p2 = (icmp_ln65_7_fu_753_p2 ^ 1'd1);

assign xor_ln65_8_fu_779_p2 = (icmp_ln65_8_fu_773_p2 ^ 1'd1);

assign xor_ln65_9_fu_799_p2 = (icmp_ln65_9_fu_793_p2 ^ 1'd1);

assign xor_ln65_fu_619_p2 = (icmp_ln65_fu_613_p2 ^ 1'd1);

endmodule //myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s
