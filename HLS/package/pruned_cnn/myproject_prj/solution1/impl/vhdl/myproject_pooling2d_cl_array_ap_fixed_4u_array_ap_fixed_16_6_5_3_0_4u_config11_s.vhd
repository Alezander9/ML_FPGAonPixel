-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer10_out_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    layer10_out_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    layer10_out_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    layer10_out_empty_n : IN STD_LOGIC;
    layer10_out_read : OUT STD_LOGIC;
    layer11_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    layer11_out_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    layer11_out_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    layer11_out_full_n : IN STD_LOGIC;
    layer11_out_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC );
end;


architecture behav of myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln55_reg_912 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_912_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln55_1_reg_934 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op136_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln109_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal sY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer10_out_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer11_out_blk_n : STD_LOGIC;
    signal icmp_ln109_reg_908 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln55_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_2_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_2_reg_916 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_3_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_3_reg_921 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_926 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_930 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln55_1_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_2_fu_665_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_2_reg_938 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_5_fu_725_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_5_reg_943 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_8_fu_785_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_8_reg_948 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_11_fu_845_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_11_reg_953 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_139_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln86_fu_871_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_135 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_135 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln80_fu_250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln76_fu_196_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln91_fu_222_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln115_fu_279_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten_fu_118 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln109_fu_160_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal select_ln91_fu_214_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln55_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_1_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_fu_453_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln63_1_fu_463_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln63_2_fu_473_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln63_3_fu_483_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_1_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_1_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_625_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_1_fu_645_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_2_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_2_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln63_4_fu_493_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln63_5_fu_503_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_3_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_3_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln63_6_fu_513_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln63_7_fu_523_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_4_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_4_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_685_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_4_fu_705_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_5_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_5_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln63_8_fu_533_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln63_9_fu_543_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_6_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_6_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln63_s_fu_553_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln63_10_fu_563_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_7_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_7_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_6_fu_745_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_7_fu_765_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_8_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_8_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln63_11_fu_573_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln63_12_fu_583_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_9_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_9_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln63_13_fu_593_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln63_14_fu_603_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_10_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_10_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_9_fu_805_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln65_10_fu_825_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_11_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_11_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_fu_863_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_216 : BOOLEAN;
    signal ap_condition_214 : BOOLEAN;
    signal ap_condition_281 : BOOLEAN;
    signal ap_condition_240 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_U : component myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0,
        we0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0,
        d0 => trunc_ln115_fu_279_p1,
        q0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_U : component myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0,
        we0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0,
        d0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0,
        q0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_U : component myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0,
        we0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0,
        d0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0,
        q0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_U : component myproject_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pmb6
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0,
        we0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0,
        d0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0,
        q0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0);

    flow_control_loop_pipe_U : component myproject_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => real_start,
        ap_ready => internal_ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_reg_135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_214)) then
                if ((ap_const_boolean_1 = ap_condition_216)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_135 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_135 <= ap_phi_reg_pp0_iter0_storemerge_reg_135;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_214)) then
                if ((icmp_ln109_fu_154_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_118 <= add_ln109_fu_160_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_118 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    pX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_281)) then
                if ((icmp_ln76_fu_202_p2 = ap_const_lv1_1)) then 
                    pX <= ap_const_lv32_0;
                elsif ((icmp_ln76_fu_202_p2 = ap_const_lv1_0)) then 
                    pX <= add_ln76_fu_196_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_240)) then
                if ((icmp_ln80_fu_256_p2 = ap_const_lv1_1)) then 
                    pY <= ap_const_lv32_0;
                elsif ((icmp_ln80_fu_256_p2 = ap_const_lv1_0)) then 
                    pY <= add_ln80_fu_250_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_281)) then
                if ((icmp_ln76_fu_202_p2 = ap_const_lv1_1)) then 
                    sX <= ap_const_lv32_0;
                elsif ((icmp_ln76_fu_202_p2 = ap_const_lv1_0)) then 
                    sX <= add_ln91_fu_222_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln55_reg_912 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln55_1_reg_934 <= and_ln55_1_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln109_reg_908 <= icmp_ln109_fu_154_p2;
                icmp_ln55_reg_912_pp0_iter1_reg <= icmp_ln55_reg_912;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_154_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln55_fu_170_p2 = ap_const_lv1_1))) then
                icmp_ln55_2_reg_916 <= icmp_ln55_2_fu_184_p2;
                icmp_ln55_3_reg_921 <= icmp_ln55_3_fu_190_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_154_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln55_reg_912 <= icmp_ln55_fu_170_p2;
                icmp_ln76_reg_926 <= icmp_ln76_fu_202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_154_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln76_fu_202_p2 = ap_const_lv1_1))) then
                icmp_ln80_reg_930 <= icmp_ln80_fu_256_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap <= layer10_out_dout(63 downto 48);
                p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1 <= layer10_out_dout(47 downto 32);
                p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2 <= layer10_out_dout(31 downto 16);
                p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3 <= trunc_ln115_fu_279_p1;
                void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
                void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
                void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
                void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln76_reg_926 = ap_const_lv1_1))) then
                sY <= ap_phi_mux_storemerge_phi_fu_139_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln55_1_fu_447_p2) and (icmp_ln55_reg_912 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln65_11_reg_953 <= select_ln65_11_fu_845_p3;
                select_ln65_2_reg_938 <= select_ln65_2_fu_665_p3;
                select_ln65_5_reg_943 <= select_ln65_5_fu_725_p3;
                select_ln65_8_reg_948 <= select_ln65_8_fu_785_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln109_fu_160_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv5_1));
    add_ln76_fu_196_p2 <= std_logic_vector(unsigned(pX) + unsigned(ap_const_lv32_1));
    add_ln80_fu_250_p2 <= std_logic_vector(unsigned(pY) + unsigned(ap_const_lv32_1));
    add_ln86_fu_871_p2 <= std_logic_vector(unsigned(sY) + unsigned(select_ln86_fu_863_p3));
    add_ln91_fu_222_p2 <= std_logic_vector(unsigned(sX) + unsigned(select_ln91_fu_214_p3));
    and_ln55_1_fu_447_p2 <= (icmp_ln55_1_fu_437_p2 and and_ln55_fu_443_p2);
    and_ln55_fu_443_p2 <= (icmp_ln55_3_reg_921 and icmp_ln55_2_reg_916);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, layer10_out_empty_n, layer11_out_full_n, ap_predicate_op136_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op136_write_state3 = ap_const_boolean_1) and (layer11_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((layer10_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, layer10_out_empty_n, layer11_out_full_n, ap_predicate_op136_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op136_write_state3 = ap_const_boolean_1) and (layer11_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((layer10_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, layer10_out_empty_n, layer11_out_full_n, ap_predicate_op136_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op136_write_state3 = ap_const_boolean_1) and (layer11_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((layer10_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(layer10_out_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (layer10_out_empty_n = ap_const_logic_0);
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(layer11_out_full_n, ap_predicate_op136_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op136_write_state3 = ap_const_boolean_1) and (layer11_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_214_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_214 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_216_assign_proc : process(icmp_ln109_fu_154_p2, icmp_ln76_fu_202_p2, icmp_ln80_fu_256_p2)
    begin
                ap_condition_216 <= ((icmp_ln109_fu_154_p2 = ap_const_lv1_0) and (icmp_ln80_fu_256_p2 = ap_const_lv1_1) and (icmp_ln76_fu_202_p2 = ap_const_lv1_1));
    end process;


    ap_condition_240_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_fu_154_p2, ap_block_pp0_stage0_11001, icmp_ln76_fu_202_p2, ap_start_int)
    begin
                ap_condition_240 <= ((icmp_ln109_fu_154_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln76_fu_202_p2 = ap_const_lv1_1));
    end process;


    ap_condition_281_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_fu_154_p2, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_281 <= ((icmp_ln109_fu_154_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln109_fu_154_p2, ap_start_int)
    begin
        if (((icmp_ln109_fu_154_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_storemerge_phi_fu_139_p4_assign_proc : process(icmp_ln109_reg_908, icmp_ln76_reg_926, icmp_ln80_reg_930, add_ln86_fu_871_p2, ap_phi_reg_pp0_iter1_storemerge_reg_135)
    begin
        if (((icmp_ln80_reg_930 = ap_const_lv1_0) and (icmp_ln76_reg_926 = ap_const_lv1_1) and (icmp_ln109_reg_908 = ap_const_lv1_0))) then 
            ap_phi_mux_storemerge_phi_fu_139_p4 <= add_ln86_fu_871_p2;
        else 
            ap_phi_mux_storemerge_phi_fu_139_p4 <= ap_phi_reg_pp0_iter1_storemerge_reg_135;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_135 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op136_write_state3_assign_proc : process(icmp_ln55_reg_912_pp0_iter1_reg, and_ln55_1_reg_934)
    begin
                ap_predicate_op136_write_state3 <= ((ap_const_lv1_1 = and_ln55_1_reg_934) and (icmp_ln55_reg_912_pp0_iter1_reg = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_fu_118, ap_loop_init, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_118;
        end if; 
    end process;

    icmp_ln109_fu_154_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv5_18) else "0";
    icmp_ln55_1_fu_437_p2 <= "1" when (sY = ap_const_lv32_1) else "0";
    icmp_ln55_2_fu_184_p2 <= "1" when (signed(pY) > signed(ap_const_lv32_0)) else "0";
    icmp_ln55_3_fu_190_p2 <= "1" when (signed(pX) > signed(ap_const_lv32_0)) else "0";
    icmp_ln55_fu_170_p2 <= "1" when (sX = ap_const_lv32_1) else "0";
    icmp_ln65_10_fu_813_p2 <= "1" when (signed(trunc_ln63_13_fu_593_p4) < signed(trunc_ln63_14_fu_603_p4)) else "0";
    icmp_ln65_11_fu_833_p2 <= "1" when (signed(select_ln65_9_fu_805_p3) < signed(select_ln65_10_fu_825_p3)) else "0";
    icmp_ln65_1_fu_633_p2 <= "1" when (signed(trunc_ln63_2_fu_473_p4) < signed(trunc_ln63_3_fu_483_p4)) else "0";
    icmp_ln65_2_fu_653_p2 <= "1" when (signed(select_ln65_fu_625_p3) < signed(select_ln65_1_fu_645_p3)) else "0";
    icmp_ln65_3_fu_673_p2 <= "1" when (signed(trunc_ln63_4_fu_493_p4) < signed(trunc_ln63_5_fu_503_p4)) else "0";
    icmp_ln65_4_fu_693_p2 <= "1" when (signed(trunc_ln63_6_fu_513_p4) < signed(trunc_ln63_7_fu_523_p4)) else "0";
    icmp_ln65_5_fu_713_p2 <= "1" when (signed(select_ln65_3_fu_685_p3) < signed(select_ln65_4_fu_705_p3)) else "0";
    icmp_ln65_6_fu_733_p2 <= "1" when (signed(trunc_ln63_8_fu_533_p4) < signed(trunc_ln63_9_fu_543_p4)) else "0";
    icmp_ln65_7_fu_753_p2 <= "1" when (signed(trunc_ln63_s_fu_553_p4) < signed(trunc_ln63_10_fu_563_p4)) else "0";
    icmp_ln65_8_fu_773_p2 <= "1" when (signed(select_ln65_6_fu_745_p3) < signed(select_ln65_7_fu_765_p3)) else "0";
    icmp_ln65_9_fu_793_p2 <= "1" when (signed(trunc_ln63_11_fu_573_p4) < signed(trunc_ln63_12_fu_583_p4)) else "0";
    icmp_ln65_fu_613_p2 <= "1" when (signed(trunc_ln1_fu_453_p4) < signed(trunc_ln63_1_fu_463_p4)) else "0";
    icmp_ln76_fu_202_p2 <= "1" when (add_ln76_fu_196_p2 = ap_const_lv32_6) else "0";
    icmp_ln80_fu_256_p2 <= "1" when (add_ln80_fu_250_p2 = ap_const_lv32_4) else "0";
    icmp_ln86_fu_857_p2 <= "1" when (sY = ap_const_lv32_1) else "0";

    layer10_out_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, layer10_out_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer10_out_blk_n <= layer10_out_empty_n;
        else 
            layer10_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer10_out_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer10_out_read <= ap_const_logic_1;
        else 
            layer10_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer11_out_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, layer11_out_full_n, ap_predicate_op136_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op136_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer11_out_blk_n <= layer11_out_full_n;
        else 
            layer11_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer11_out_din <= (((((((select_ln65_11_reg_953 & ap_const_lv2_0) & select_ln65_8_reg_948) & ap_const_lv2_0) & select_ln65_5_reg_943) & ap_const_lv2_0) & select_ln65_2_reg_938) & ap_const_lv2_0);

    layer11_out_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op136_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op136_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer11_out_write <= ap_const_logic_1;
        else 
            layer11_out_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln65_10_fu_825_p3 <= 
        trunc_ln63_13_fu_593_p4 when (xor_ln65_10_fu_819_p2(0) = '1') else 
        trunc_ln63_14_fu_603_p4;
    select_ln65_11_fu_845_p3 <= 
        select_ln65_9_fu_805_p3 when (xor_ln65_11_fu_839_p2(0) = '1') else 
        select_ln65_10_fu_825_p3;
    select_ln65_1_fu_645_p3 <= 
        trunc_ln63_2_fu_473_p4 when (xor_ln65_1_fu_639_p2(0) = '1') else 
        trunc_ln63_3_fu_483_p4;
    select_ln65_2_fu_665_p3 <= 
        select_ln65_fu_625_p3 when (xor_ln65_2_fu_659_p2(0) = '1') else 
        select_ln65_1_fu_645_p3;
    select_ln65_3_fu_685_p3 <= 
        trunc_ln63_4_fu_493_p4 when (xor_ln65_3_fu_679_p2(0) = '1') else 
        trunc_ln63_5_fu_503_p4;
    select_ln65_4_fu_705_p3 <= 
        trunc_ln63_6_fu_513_p4 when (xor_ln65_4_fu_699_p2(0) = '1') else 
        trunc_ln63_7_fu_523_p4;
    select_ln65_5_fu_725_p3 <= 
        select_ln65_3_fu_685_p3 when (xor_ln65_5_fu_719_p2(0) = '1') else 
        select_ln65_4_fu_705_p3;
    select_ln65_6_fu_745_p3 <= 
        trunc_ln63_8_fu_533_p4 when (xor_ln65_6_fu_739_p2(0) = '1') else 
        trunc_ln63_9_fu_543_p4;
    select_ln65_7_fu_765_p3 <= 
        trunc_ln63_s_fu_553_p4 when (xor_ln65_7_fu_759_p2(0) = '1') else 
        trunc_ln63_10_fu_563_p4;
    select_ln65_8_fu_785_p3 <= 
        select_ln65_6_fu_745_p3 when (xor_ln65_8_fu_779_p2(0) = '1') else 
        select_ln65_7_fu_765_p3;
    select_ln65_9_fu_805_p3 <= 
        trunc_ln63_11_fu_573_p4 when (xor_ln65_9_fu_799_p2(0) = '1') else 
        trunc_ln63_12_fu_583_p4;
    select_ln65_fu_625_p3 <= 
        trunc_ln1_fu_453_p4 when (xor_ln65_fu_619_p2(0) = '1') else 
        trunc_ln63_1_fu_463_p4;
    select_ln86_fu_863_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln86_fu_857_p2(0) = '1') else 
        ap_const_lv32_1;
    select_ln91_fu_214_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln55_fu_170_p2(0) = '1') else 
        ap_const_lv32_1;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln115_fu_279_p1 <= layer10_out_dout(16 - 1 downto 0);
    trunc_ln1_fu_453_p4 <= void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2(15 downto 2);
    trunc_ln63_10_fu_563_p4 <= layer10_out_dout(47 downto 34);
    trunc_ln63_11_fu_573_p4 <= void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3(15 downto 2);
    trunc_ln63_12_fu_583_p4 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0(15 downto 2);
    trunc_ln63_13_fu_593_p4 <= p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap(15 downto 2);
    trunc_ln63_14_fu_603_p4 <= layer10_out_dout(63 downto 50);
    trunc_ln63_1_fu_463_p4 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0(15 downto 2);
    trunc_ln63_2_fu_473_p4 <= p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_3(15 downto 2);
    trunc_ln63_3_fu_483_p4 <= layer10_out_dout(15 downto 2);
    trunc_ln63_4_fu_493_p4 <= void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1(15 downto 2);
    trunc_ln63_5_fu_503_p4 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0(15 downto 2);
    trunc_ln63_6_fu_513_p4 <= p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_2(15 downto 2);
    trunc_ln63_7_fu_523_p4 <= layer10_out_dout(31 downto 18);
    trunc_ln63_8_fu_533_p4 <= void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel(15 downto 2);
    trunc_ln63_9_fu_543_p4 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0(15 downto 2);
    trunc_ln63_s_fu_553_p4 <= p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_1(15 downto 2);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0 <= layer10_out_dout(47 downto 32);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0 <= layer10_out_dout(31 downto 16);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0 <= layer10_out_dout(63 downto 48);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln65_10_fu_819_p2 <= (icmp_ln65_10_fu_813_p2 xor ap_const_lv1_1);
    xor_ln65_11_fu_839_p2 <= (icmp_ln65_11_fu_833_p2 xor ap_const_lv1_1);
    xor_ln65_1_fu_639_p2 <= (icmp_ln65_1_fu_633_p2 xor ap_const_lv1_1);
    xor_ln65_2_fu_659_p2 <= (icmp_ln65_2_fu_653_p2 xor ap_const_lv1_1);
    xor_ln65_3_fu_679_p2 <= (icmp_ln65_3_fu_673_p2 xor ap_const_lv1_1);
    xor_ln65_4_fu_699_p2 <= (icmp_ln65_4_fu_693_p2 xor ap_const_lv1_1);
    xor_ln65_5_fu_719_p2 <= (icmp_ln65_5_fu_713_p2 xor ap_const_lv1_1);
    xor_ln65_6_fu_739_p2 <= (icmp_ln65_6_fu_733_p2 xor ap_const_lv1_1);
    xor_ln65_7_fu_759_p2 <= (icmp_ln65_7_fu_753_p2 xor ap_const_lv1_1);
    xor_ln65_8_fu_779_p2 <= (icmp_ln65_8_fu_773_p2 xor ap_const_lv1_1);
    xor_ln65_9_fu_799_p2 <= (icmp_ln65_9_fu_793_p2 xor ap_const_lv1_1);
    xor_ln65_fu_619_p2 <= (icmp_ln65_fu_613_p2 xor ap_const_lv1_1);
end behav;
