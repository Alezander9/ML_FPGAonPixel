-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity myproject_dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s_outidx_rcU is 
    generic(
             DataWidth     : integer := 3; 
             AddressWidth     : integer := 8; 
             AddressRange    : integer := 252
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of myproject_dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s_outidx_rcU is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "000", 1 => "000", 2 => "000", 3 => "000", 
    4 => "000", 5 => "000", 6 => "000", 7 => "000", 
    8 => "000", 9 => "000", 10 => "000", 11 => "000", 
    12 => "000", 13 => "000", 14 => "000", 15 => "000", 
    16 => "000", 17 => "000", 18 => "000", 19 => "000", 
    20 => "000", 21 => "000", 22 => "000", 23 => "000", 
    24 => "000", 25 => "000", 26 => "000", 27 => "000", 
    28 => "000", 29 => "000", 30 => "000", 31 => "000", 
    32 => "000", 33 => "000", 34 => "000", 35 => "000", 
    36 => "001", 37 => "001", 38 => "001", 39 => "001", 
    40 => "001", 41 => "001", 42 => "001", 43 => "001", 
    44 => "001", 45 => "001", 46 => "001", 47 => "001", 
    48 => "001", 49 => "001", 50 => "001", 51 => "001", 
    52 => "001", 53 => "001", 54 => "001", 55 => "001", 
    56 => "001", 57 => "001", 58 => "001", 59 => "001", 
    60 => "001", 61 => "001", 62 => "001", 63 => "001", 
    64 => "001", 65 => "001", 66 => "001", 67 => "001", 
    68 => "001", 69 => "001", 70 => "001", 71 => "001", 
    72 => "010", 73 => "010", 74 => "010", 75 => "010", 
    76 => "010", 77 => "010", 78 => "010", 79 => "010", 
    80 => "010", 81 => "010", 82 => "010", 83 => "010", 
    84 => "010", 85 => "010", 86 => "010", 87 => "010", 
    88 => "010", 89 => "010", 90 => "010", 91 => "010", 
    92 => "010", 93 => "010", 94 => "010", 95 => "010", 
    96 => "010", 97 => "010", 98 => "010", 99 => "010", 
    100 => "010", 101 => "010", 102 => "010", 103 => "010", 
    104 => "010", 105 => "010", 106 => "010", 107 => "010", 
    108 => "011", 109 => "011", 110 => "011", 111 => "011", 
    112 => "011", 113 => "011", 114 => "011", 115 => "011", 
    116 => "011", 117 => "011", 118 => "011", 119 => "011", 
    120 => "011", 121 => "011", 122 => "011", 123 => "011", 
    124 => "011", 125 => "011", 126 => "011", 127 => "011", 
    128 => "011", 129 => "011", 130 => "011", 131 => "011", 
    132 => "011", 133 => "011", 134 => "011", 135 => "011", 
    136 => "011", 137 => "011", 138 => "011", 139 => "011", 
    140 => "011", 141 => "011", 142 => "011", 143 => "011", 
    144 => "100", 145 => "100", 146 => "100", 147 => "100", 
    148 => "100", 149 => "100", 150 => "100", 151 => "100", 
    152 => "100", 153 => "100", 154 => "100", 155 => "100", 
    156 => "100", 157 => "100", 158 => "100", 159 => "100", 
    160 => "100", 161 => "100", 162 => "100", 163 => "100", 
    164 => "100", 165 => "100", 166 => "100", 167 => "100", 
    168 => "100", 169 => "100", 170 => "100", 171 => "100", 
    172 => "100", 173 => "100", 174 => "100", 175 => "100", 
    176 => "100", 177 => "100", 178 => "100", 179 => "100", 
    180 => "101", 181 => "101", 182 => "101", 183 => "101", 
    184 => "101", 185 => "101", 186 => "101", 187 => "101", 
    188 => "101", 189 => "101", 190 => "101", 191 => "101", 
    192 => "101", 193 => "101", 194 => "101", 195 => "101", 
    196 => "101", 197 => "101", 198 => "101", 199 => "101", 
    200 => "101", 201 => "101", 202 => "101", 203 => "101", 
    204 => "101", 205 => "101", 206 => "101", 207 => "101", 
    208 => "101", 209 => "101", 210 => "101", 211 => "101", 
    212 => "101", 213 => "101", 214 => "101", 215 => "101", 
    216 => "110", 217 => "110", 218 => "110", 219 => "110", 
    220 => "110", 221 => "110", 222 => "110", 223 => "110", 
    224 => "110", 225 => "110", 226 => "110", 227 => "110", 
    228 => "110", 229 => "110", 230 => "110", 231 => "110", 
    232 => "110", 233 => "110", 234 => "110", 235 => "110", 
    236 => "110", 237 => "110", 238 => "110", 239 => "110", 
    240 => "110", 241 => "110", 242 => "110", 243 => "110", 
    244 => "110", 245 => "110", 246 => "110", 247 => "110", 
    248 => "110", 249 => "110", 250 => "110", 251 => "110");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

