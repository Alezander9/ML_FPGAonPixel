// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer4_out_dout,
        layer4_out_num_data_valid,
        layer4_out_fifo_cap,
        layer4_out_empty_n,
        layer4_out_read,
        layer5_out_din,
        layer5_out_num_data_valid,
        layer5_out_fifo_cap,
        layer5_out_full_n,
        layer5_out_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [39:0] layer4_out_dout;
input  [7:0] layer4_out_num_data_valid;
input  [7:0] layer4_out_fifo_cap;
input   layer4_out_empty_n;
output   layer4_out_read;
output  [63:0] layer5_out_din;
input  [5:0] layer5_out_num_data_valid;
input  [5:0] layer5_out_fifo_cap;
input   layer5_out_full_n;
output   layer5_out_write;
output   start_out;
output   start_write;

reg ap_idle;
reg layer4_out_read;
reg layer5_out_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln55_reg_745;
reg   [0:0] and_ln55_2_reg_749;
reg    ap_predicate_op120_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_139_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] sY_1;
reg   [31:0] pY_1;
reg   [31:0] pX_1;
reg   [31:0] sX_1;
reg   [9:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6;
reg   [9:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5;
reg   [9:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4;
reg   [9:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3;
reg   [9:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14;
reg   [9:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13;
reg   [9:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12;
reg   [9:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0;
wire   [9:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0;
wire   [9:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0;
wire   [9:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0;
wire   [9:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0;
wire   [9:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0;
wire   [9:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0;
wire   [9:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
reg    layer4_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer5_out_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln55_fu_155_p2;
wire   [0:0] and_ln55_2_fu_197_p2;
wire   [0:0] icmp_ln76_fu_209_p2;
wire   [0:0] icmp_ln80_fu_263_p2;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_124_p4;
wire   [31:0] add_ln86_fu_293_p2;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_121;
wire   [31:0] add_ln80_fu_257_p2;
wire   [31:0] add_ln76_fu_203_p2;
wire   [31:0] add_ln91_fu_229_p2;
wire   [9:0] trunc_ln115_fu_317_p1;
wire   [9:0] trunc_ln115_s_fu_341_p4;
wire   [9:0] trunc_ln115_8_fu_321_p4;
wire   [9:0] trunc_ln115_9_fu_331_p4;
reg   [6:0] indvar_flatten_fu_104;
wire   [6:0] add_ln109_fu_145_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln55_5_fu_179_p2;
wire   [0:0] icmp_ln55_6_fu_185_p2;
wire   [0:0] and_ln55_fu_191_p2;
wire   [0:0] icmp_ln55_4_fu_169_p2;
wire   [31:0] select_ln91_fu_221_p3;
wire   [0:0] icmp_ln86_fu_279_p2;
wire   [31:0] select_ln86_fu_285_p3;
wire   [0:0] icmp_ln65_fu_471_p2;
wire   [0:0] xor_ln65_fu_477_p2;
wire   [0:0] icmp_ln65_21_fu_491_p2;
wire   [0:0] xor_ln65_21_fu_497_p2;
wire   [9:0] select_ln65_fu_483_p3;
wire   [9:0] select_ln65_21_fu_503_p3;
wire   [0:0] icmp_ln65_22_fu_511_p2;
wire   [0:0] xor_ln65_22_fu_517_p2;
wire   [0:0] icmp_ln65_23_fu_531_p2;
wire   [0:0] xor_ln65_23_fu_537_p2;
wire   [0:0] icmp_ln65_24_fu_551_p2;
wire   [0:0] xor_ln65_24_fu_557_p2;
wire   [9:0] select_ln65_23_fu_543_p3;
wire   [9:0] select_ln65_24_fu_563_p3;
wire   [0:0] icmp_ln65_25_fu_571_p2;
wire   [0:0] xor_ln65_25_fu_577_p2;
wire   [0:0] icmp_ln65_26_fu_591_p2;
wire   [0:0] xor_ln65_26_fu_597_p2;
wire   [0:0] icmp_ln65_27_fu_611_p2;
wire   [0:0] xor_ln65_27_fu_617_p2;
wire   [9:0] select_ln65_26_fu_603_p3;
wire   [9:0] select_ln65_27_fu_623_p3;
wire   [0:0] icmp_ln65_28_fu_631_p2;
wire   [0:0] xor_ln65_28_fu_637_p2;
wire   [0:0] icmp_ln65_29_fu_651_p2;
wire   [0:0] xor_ln65_29_fu_657_p2;
wire   [0:0] icmp_ln65_30_fu_671_p2;
wire   [0:0] xor_ln65_30_fu_677_p2;
wire   [9:0] select_ln65_29_fu_663_p3;
wire   [9:0] select_ln65_30_fu_683_p3;
wire   [0:0] icmp_ln65_31_fu_691_p2;
wire   [0:0] xor_ln65_31_fu_697_p2;
wire   [9:0] select_ln65_31_fu_703_p3;
wire   [9:0] select_ln65_28_fu_643_p3;
wire   [9:0] select_ln65_25_fu_583_p3;
wire   [9:0] select_ln65_22_fu_523_p3;
wire   [57:0] tmp_8_fu_711_p8;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_172;
reg    ap_condition_239;
reg    ap_condition_180;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 sY_1 = 32'd0;
#0 pY_1 = 32'd0;
#0 pX_1 = 32'd0;
#0 sX_1 = 32'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6 = 10'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5 = 10'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4 = 10'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 = 10'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14 = 10'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13 = 10'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12 = 10'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11 = 10'd0;
end

myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi #(
    .DataWidth( 10 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(4'd12),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0),
    .d0(trunc_ln115_fu_317_p1),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0)
);

myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi #(
    .DataWidth( 10 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(4'd12),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0)
);

myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi #(
    .DataWidth( 10 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(4'd12),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0)
);

myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi #(
    .DataWidth( 10 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(4'd12),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0)
);

myproject_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_172)) begin
        if ((icmp_ln109_fu_139_p2 == 1'd0)) begin
            indvar_flatten_fu_104 <= add_ln109_fu_145_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_104 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_239)) begin
        if ((icmp_ln76_fu_209_p2 == 1'd1)) begin
            pX_1 <= 32'd0;
        end else if ((icmp_ln76_fu_209_p2 == 1'd0)) begin
            pX_1 <= add_ln76_fu_203_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_180)) begin
        if ((icmp_ln80_fu_263_p2 == 1'd1)) begin
            pY_1 <= 32'd0;
        end else if ((icmp_ln80_fu_263_p2 == 1'd0)) begin
            pY_1 <= add_ln80_fu_257_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_239)) begin
        if ((icmp_ln76_fu_209_p2 == 1'd1)) begin
            sX_1 <= 32'd0;
        end else if ((icmp_ln76_fu_209_p2 == 1'd0)) begin
            sX_1 <= add_ln91_fu_229_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln55_fu_155_p2 == 1'd1))) begin
        and_ln55_2_reg_749 <= and_ln55_2_fu_197_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln55_reg_745 <= icmp_ln55_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11 <= {{layer4_out_dout[39:30]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12 <= {{layer4_out_dout[29:20]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13 <= {{layer4_out_dout[19:10]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14 <= trunc_ln115_fu_317_p1;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_fu_209_p2 == 1'd1))) begin
        sY_1 <= ap_phi_mux_storemerge_phi_fu_124_p4;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_139_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_139_p2 == 1'd0) & (icmp_ln76_fu_209_p2 == 1'd1))) begin
        if ((icmp_ln80_fu_263_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_phi_fu_124_p4 = 32'd0;
        end else if ((icmp_ln80_fu_263_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_phi_fu_124_p4 = add_ln86_fu_293_p2;
        end else begin
            ap_phi_mux_storemerge_phi_fu_124_p4 = ap_phi_reg_pp0_iter0_storemerge_reg_121;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_124_p4 = ap_phi_reg_pp0_iter0_storemerge_reg_121;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer4_out_blk_n = layer4_out_empty_n;
    end else begin
        layer4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer4_out_read = 1'b1;
    end else begin
        layer4_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op120_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer5_out_blk_n = layer5_out_full_n;
    end else begin
        layer5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op120_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer5_out_write = 1'b1;
    end else begin
        layer5_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_fu_145_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln76_fu_203_p2 = (pX_1 + 32'd1);

assign add_ln80_fu_257_p2 = (pY_1 + 32'd1);

assign add_ln86_fu_293_p2 = (sY_1 + select_ln86_fu_285_p3);

assign add_ln91_fu_229_p2 = (sX_1 + select_ln91_fu_221_p3);

assign and_ln55_2_fu_197_p2 = (icmp_ln55_4_fu_169_p2 & and_ln55_fu_191_p2);

assign and_ln55_fu_191_p2 = (icmp_ln55_6_fu_185_p2 & icmp_ln55_5_fu_179_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((layer4_out_empty_n == 1'b0) | ((ap_predicate_op120_write_state2 == 1'b1) & (layer5_out_full_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((layer4_out_empty_n == 1'b0) | ((ap_predicate_op120_write_state2 == 1'b1) & (layer5_out_full_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((layer4_out_empty_n == 1'b0) | ((ap_predicate_op120_write_state2 == 1'b1) & (layer5_out_full_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((layer4_out_empty_n == 1'b0) | ((ap_predicate_op120_write_state2 == 1'b1) & (layer5_out_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_172 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_180 = ((icmp_ln109_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_fu_209_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_239 = ((icmp_ln109_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_storemerge_reg_121 = 'bx;

always @ (*) begin
    ap_predicate_op120_write_state2 = ((1'd1 == and_ln55_2_reg_749) & (icmp_ln55_reg_745 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln109_fu_139_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd104) ? 1'b1 : 1'b0);

assign icmp_ln55_4_fu_169_p2 = ((sY_1 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln55_5_fu_179_p2 = (($signed(pY_1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_6_fu_185_p2 = (($signed(pX_1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_155_p2 = ((sX_1 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln65_21_fu_491_p2 = ((p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14 < trunc_ln115_fu_317_p1) ? 1'b1 : 1'b0);

assign icmp_ln65_22_fu_511_p2 = ((select_ln65_fu_483_p3 < select_ln65_21_fu_503_p3) ? 1'b1 : 1'b0);

assign icmp_ln65_23_fu_531_p2 = ((void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5 < void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0) ? 1'b1 : 1'b0);

assign icmp_ln65_24_fu_551_p2 = ((p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13 < trunc_ln115_s_fu_341_p4) ? 1'b1 : 1'b0);

assign icmp_ln65_25_fu_571_p2 = ((select_ln65_23_fu_543_p3 < select_ln65_24_fu_563_p3) ? 1'b1 : 1'b0);

assign icmp_ln65_26_fu_591_p2 = ((void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4 < void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0) ? 1'b1 : 1'b0);

assign icmp_ln65_27_fu_611_p2 = ((p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12 < trunc_ln115_8_fu_321_p4) ? 1'b1 : 1'b0);

assign icmp_ln65_28_fu_631_p2 = ((select_ln65_26_fu_603_p3 < select_ln65_27_fu_623_p3) ? 1'b1 : 1'b0);

assign icmp_ln65_29_fu_651_p2 = ((void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 < void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0) ? 1'b1 : 1'b0);

assign icmp_ln65_30_fu_671_p2 = ((p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11 < trunc_ln115_9_fu_331_p4) ? 1'b1 : 1'b0);

assign icmp_ln65_31_fu_691_p2 = ((select_ln65_29_fu_663_p3 < select_ln65_30_fu_683_p3) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_471_p2 = ((void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6 < void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_209_p2 = ((add_ln76_fu_203_p2 == 32'd13) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_263_p2 = ((add_ln80_fu_257_p2 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_279_p2 = ((sY_1 == 32'd1) ? 1'b1 : 1'b0);

assign layer5_out_din = tmp_8_fu_711_p8;

assign select_ln65_21_fu_503_p3 = ((xor_ln65_21_fu_497_p2[0:0] == 1'b1) ? p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14 : trunc_ln115_fu_317_p1);

assign select_ln65_22_fu_523_p3 = ((xor_ln65_22_fu_517_p2[0:0] == 1'b1) ? select_ln65_fu_483_p3 : select_ln65_21_fu_503_p3);

assign select_ln65_23_fu_543_p3 = ((xor_ln65_23_fu_537_p2[0:0] == 1'b1) ? void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5 : void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0);

assign select_ln65_24_fu_563_p3 = ((xor_ln65_24_fu_557_p2[0:0] == 1'b1) ? p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13 : trunc_ln115_s_fu_341_p4);

assign select_ln65_25_fu_583_p3 = ((xor_ln65_25_fu_577_p2[0:0] == 1'b1) ? select_ln65_23_fu_543_p3 : select_ln65_24_fu_563_p3);

assign select_ln65_26_fu_603_p3 = ((xor_ln65_26_fu_597_p2[0:0] == 1'b1) ? void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4 : void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0);

assign select_ln65_27_fu_623_p3 = ((xor_ln65_27_fu_617_p2[0:0] == 1'b1) ? p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12 : trunc_ln115_8_fu_321_p4);

assign select_ln65_28_fu_643_p3 = ((xor_ln65_28_fu_637_p2[0:0] == 1'b1) ? select_ln65_26_fu_603_p3 : select_ln65_27_fu_623_p3);

assign select_ln65_29_fu_663_p3 = ((xor_ln65_29_fu_657_p2[0:0] == 1'b1) ? void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 : void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0);

assign select_ln65_30_fu_683_p3 = ((xor_ln65_30_fu_677_p2[0:0] == 1'b1) ? p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11 : trunc_ln115_9_fu_331_p4);

assign select_ln65_31_fu_703_p3 = ((xor_ln65_31_fu_697_p2[0:0] == 1'b1) ? select_ln65_29_fu_663_p3 : select_ln65_30_fu_683_p3);

assign select_ln65_fu_483_p3 = ((xor_ln65_fu_477_p2[0:0] == 1'b1) ? void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6 : void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0);

assign select_ln86_fu_285_p3 = ((icmp_ln86_fu_279_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign select_ln91_fu_221_p3 = ((icmp_ln55_fu_155_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign start_out = real_start;

assign tmp_8_fu_711_p8 = {{{{{{{select_ln65_31_fu_703_p3}, {6'd0}}, {select_ln65_28_fu_643_p3}}, {6'd0}}, {select_ln65_25_fu_583_p3}}, {6'd0}}, {select_ln65_22_fu_523_p3}};

assign trunc_ln115_8_fu_321_p4 = {{layer4_out_dout[29:20]}};

assign trunc_ln115_9_fu_331_p4 = {{layer4_out_dout[39:30]}};

assign trunc_ln115_fu_317_p1 = layer4_out_dout[9:0];

assign trunc_ln115_s_fu_341_p4 = {{layer4_out_dout[19:10]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0 = {{layer4_out_dout[29:20]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0 = {{layer4_out_dout[19:10]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0 = {{layer4_out_dout[39:30]}};

assign xor_ln65_21_fu_497_p2 = (icmp_ln65_21_fu_491_p2 ^ 1'd1);

assign xor_ln65_22_fu_517_p2 = (icmp_ln65_22_fu_511_p2 ^ 1'd1);

assign xor_ln65_23_fu_537_p2 = (icmp_ln65_23_fu_531_p2 ^ 1'd1);

assign xor_ln65_24_fu_557_p2 = (icmp_ln65_24_fu_551_p2 ^ 1'd1);

assign xor_ln65_25_fu_577_p2 = (icmp_ln65_25_fu_571_p2 ^ 1'd1);

assign xor_ln65_26_fu_597_p2 = (icmp_ln65_26_fu_591_p2 ^ 1'd1);

assign xor_ln65_27_fu_617_p2 = (icmp_ln65_27_fu_611_p2 ^ 1'd1);

assign xor_ln65_28_fu_637_p2 = (icmp_ln65_28_fu_631_p2 ^ 1'd1);

assign xor_ln65_29_fu_657_p2 = (icmp_ln65_29_fu_651_p2 ^ 1'd1);

assign xor_ln65_30_fu_677_p2 = (icmp_ln65_30_fu_671_p2 ^ 1'd1);

assign xor_ln65_31_fu_697_p2 = (icmp_ln65_31_fu_691_p2 ^ 1'd1);

assign xor_ln65_fu_477_p2 = (icmp_ln65_fu_471_p2 ^ 1'd1);

endmodule //myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s
