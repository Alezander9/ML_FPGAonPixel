// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_array_ap_ufixed_13u_array_ap_fixed_16_6_5_3_0_1u_config16_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer15_out_dout,
        layer15_out_num_data_valid,
        layer15_out_fifo_cap,
        layer15_out_empty_n,
        layer15_out_read,
        layer16_out_din,
        layer16_out_num_data_valid,
        layer16_out_fifo_cap,
        layer16_out_full_n,
        layer16_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [129:0] layer15_out_dout;
input  [1:0] layer15_out_num_data_valid;
input  [1:0] layer15_out_fifo_cap;
input   layer15_out_empty_n;
output   layer15_out_read;
output  [15:0] layer16_out_din;
input  [1:0] layer16_out_num_data_valid;
input  [1:0] layer16_out_fifo_cap;
input   layer16_out_full_n;
output   layer16_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer15_out_read;
reg layer16_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer15_out_blk_n;
reg    layer16_out_blk_n;
reg    ap_block_state1;
wire   [9:0] data_fu_123_p4;
wire   [9:0] mul_i_i_1_i_i_fu_217_p0;
wire   [9:0] mul_i_i_1_i_i_fu_217_p1;
wire   [18:0] mul_i_i_1_i_i_fu_217_p2;
wire   [11:0] tmp_fu_223_p4;
wire   [9:0] data_1_fu_133_p4;
wire   [9:0] mul_i_i_2_i_i_fu_241_p0;
wire  signed [9:0] mul_i_i_2_i_i_fu_241_p1;
wire   [19:0] mul_i_i_2_i_i_fu_241_p2;
wire   [12:0] p_cast1_fu_247_p4;
wire   [9:0] data_2_fu_143_p4;
wire   [9:0] mul_i_i_3_i_i_fu_265_p0;
wire  signed [9:0] mul_i_i_3_i_i_fu_265_p1;
wire   [19:0] mul_i_i_3_i_i_fu_265_p2;
wire   [12:0] p_cast2_fu_271_p4;
wire   [9:0] trunc_ln43_3_fu_153_p4;
wire   [18:0] p_shl2_fu_285_p3;
wire   [19:0] p_shl2_cast_fu_293_p1;
wire   [19:0] mul_i_i_4_i_i_fu_297_p2;
wire   [12:0] p_cast3_fu_303_p4;
wire   [9:0] data_3_fu_163_p4;
wire   [9:0] mul_i_i_6_i_i_fu_321_p0;
wire   [8:0] mul_i_i_6_i_i_fu_321_p1;
wire   [17:0] mul_i_i_6_i_i_fu_321_p2;
wire   [10:0] tmp_1_fu_327_p4;
wire   [9:0] data_4_fu_173_p4;
wire   [9:0] mul_i_i_7_i_i_fu_345_p0;
wire   [9:0] mul_i_i_7_i_i_fu_345_p1;
wire   [18:0] mul_i_i_7_i_i_fu_345_p2;
wire   [11:0] tmp_2_fu_351_p4;
wire   [9:0] trunc_ln43_6_fu_183_p4;
wire   [16:0] p_shl_fu_365_p3;
wire   [17:0] p_shl_cast_fu_373_p1;
wire   [17:0] p_neg_fu_377_p2;
wire   [13:0] p_shl1_fu_387_p3;
wire  signed [18:0] p_neg_cast_fu_383_p1;
wire   [18:0] p_shl1_cast_fu_395_p1;
wire   [18:0] mul_i_i_8_i_i_fu_399_p2;
wire   [11:0] p_cast_fu_405_p4;
wire   [9:0] data_5_fu_193_p4;
wire   [9:0] mul_i_i_9_i_i_fu_423_p0;
wire   [9:0] mul_i_i_9_i_i_fu_423_p1;
wire   [18:0] mul_i_i_9_i_i_fu_423_p2;
wire   [11:0] tmp_3_fu_429_p4;
wire   [9:0] data_6_fu_203_p4;
wire   [9:0] mul_i_i_10_i_i_fu_447_p0;
wire  signed [9:0] mul_i_i_10_i_i_fu_447_p1;
wire   [19:0] mul_i_i_10_i_i_fu_447_p2;
wire   [12:0] p_cast4_fu_453_p4;
wire   [9:0] data_9_cast_fu_467_p4;
wire   [9:0] mul_i_i_12_i_i_fu_481_p0;
wire   [7:0] mul_i_i_12_i_i_fu_481_p1;
wire   [16:0] mul_i_i_12_i_i_fu_481_p2;
wire   [9:0] tmp_4_fu_487_p4;
wire   [12:0] conv5_i_i_i_1_i_i_cast_cast_fu_233_p1;
wire   [12:0] add_ln53_fu_501_p2;
wire  signed [13:0] sext_ln53_fu_507_p1;
wire  signed [13:0] p_cast15_cast_fu_257_p1;
wire   [13:0] add_ln53_994_fu_511_p2;
wire  signed [13:0] p_cast16_cast29_fu_281_p1;
wire  signed [13:0] p_cast17_cast30_fu_313_p1;
wire   [13:0] add_ln53_995_fu_521_p2;
wire  signed [14:0] sext_ln53_596_fu_527_p1;
wire  signed [14:0] sext_ln53_595_fu_517_p1;
wire   [14:0] add_ln53_996_fu_531_p2;
wire   [12:0] conv5_i_i_i_9_i_i_cast_cast_fu_439_p1;
wire   [12:0] zext_ln53_1_fu_497_p1;
wire   [12:0] add_ln53_997_fu_541_p2;
wire   [12:0] conv5_i_i_i_7_i_i_cast_cast_fu_361_p1;
wire   [12:0] add_ln53_998_fu_547_p2;
wire   [15:0] conv5_i_i_i_6_i_i_cast_cast_fu_337_p1;
wire  signed [15:0] sext_ln53_597_fu_537_p1;
wire  signed [13:0] p_cast23_cast_fu_463_p1;
wire  signed [13:0] p_cast_cast_fu_415_p1;
wire   [13:0] add_ln53_1000_fu_563_p2;
wire  signed [15:0] sext_ln53_598_fu_569_p1;
wire   [15:0] add_ln53_999_fu_557_p2;
wire   [15:0] add_ln53_1001_fu_573_p2;
wire   [15:0] zext_ln53_fu_553_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire   [19:0] mul_i_i_10_i_i_fu_447_p00;
wire   [16:0] mul_i_i_12_i_i_fu_481_p00;
wire   [18:0] mul_i_i_1_i_i_fu_217_p00;
wire   [19:0] mul_i_i_2_i_i_fu_241_p00;
wire   [19:0] mul_i_i_3_i_i_fu_265_p00;
wire   [17:0] mul_i_i_6_i_i_fu_321_p00;
wire   [18:0] mul_i_i_7_i_i_fu_345_p00;
wire   [18:0] mul_i_i_9_i_i_fu_423_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

myproject_mul_10ns_10ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_10ns_10ns_19_1_1_U1175(
    .din0(mul_i_i_1_i_i_fu_217_p0),
    .din1(mul_i_i_1_i_i_fu_217_p1),
    .dout(mul_i_i_1_i_i_fu_217_p2)
);

myproject_mul_10ns_10s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10s_20_1_1_U1176(
    .din0(mul_i_i_2_i_i_fu_241_p0),
    .din1(mul_i_i_2_i_i_fu_241_p1),
    .dout(mul_i_i_2_i_i_fu_241_p2)
);

myproject_mul_10ns_10s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10s_20_1_1_U1177(
    .din0(mul_i_i_3_i_i_fu_265_p0),
    .din1(mul_i_i_3_i_i_fu_265_p1),
    .dout(mul_i_i_3_i_i_fu_265_p2)
);

myproject_mul_10ns_9ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_10ns_9ns_18_1_1_U1178(
    .din0(mul_i_i_6_i_i_fu_321_p0),
    .din1(mul_i_i_6_i_i_fu_321_p1),
    .dout(mul_i_i_6_i_i_fu_321_p2)
);

myproject_mul_10ns_10ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_10ns_10ns_19_1_1_U1179(
    .din0(mul_i_i_7_i_i_fu_345_p0),
    .din1(mul_i_i_7_i_i_fu_345_p1),
    .dout(mul_i_i_7_i_i_fu_345_p2)
);

myproject_mul_10ns_10ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_10ns_10ns_19_1_1_U1180(
    .din0(mul_i_i_9_i_i_fu_423_p0),
    .din1(mul_i_i_9_i_i_fu_423_p1),
    .dout(mul_i_i_9_i_i_fu_423_p2)
);

myproject_mul_10ns_10s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10s_20_1_1_U1181(
    .din0(mul_i_i_10_i_i_fu_447_p0),
    .din1(mul_i_i_10_i_i_fu_447_p1),
    .dout(mul_i_i_10_i_i_fu_447_p2)
);

myproject_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U1182(
    .din0(mul_i_i_12_i_i_fu_481_p0),
    .din1(mul_i_i_12_i_i_fu_481_p1),
    .dout(mul_i_i_12_i_i_fu_481_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((real_start == 1'b0) | (layer16_out_full_n == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer16_out_full_n == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer16_out_full_n == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer16_out_full_n == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_blk_n = layer15_out_empty_n;
    end else begin
        layer15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer16_out_full_n == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_read = 1'b1;
    end else begin
        layer15_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer16_out_blk_n = layer16_out_full_n;
    end else begin
        layer16_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer16_out_full_n == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer16_out_write = 1'b1;
    end else begin
        layer16_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln53_1000_fu_563_p2 = ($signed(p_cast23_cast_fu_463_p1) + $signed(p_cast_cast_fu_415_p1));

assign add_ln53_1001_fu_573_p2 = ($signed(sext_ln53_598_fu_569_p1) + $signed(add_ln53_999_fu_557_p2));

assign add_ln53_994_fu_511_p2 = ($signed(sext_ln53_fu_507_p1) + $signed(p_cast15_cast_fu_257_p1));

assign add_ln53_995_fu_521_p2 = ($signed(p_cast16_cast29_fu_281_p1) + $signed(p_cast17_cast30_fu_313_p1));

assign add_ln53_996_fu_531_p2 = ($signed(sext_ln53_596_fu_527_p1) + $signed(sext_ln53_595_fu_517_p1));

assign add_ln53_997_fu_541_p2 = (conv5_i_i_i_9_i_i_cast_cast_fu_439_p1 + zext_ln53_1_fu_497_p1);

assign add_ln53_998_fu_547_p2 = (add_ln53_997_fu_541_p2 + conv5_i_i_i_7_i_i_cast_cast_fu_361_p1);

assign add_ln53_999_fu_557_p2 = ($signed(conv5_i_i_i_6_i_i_cast_cast_fu_337_p1) + $signed(sext_ln53_597_fu_537_p1));

assign add_ln53_fu_501_p2 = ($signed(conv5_i_i_i_1_i_i_cast_cast_fu_233_p1) + $signed(13'd8176));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer16_out_full_n == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign conv5_i_i_i_1_i_i_cast_cast_fu_233_p1 = tmp_fu_223_p4;

assign conv5_i_i_i_6_i_i_cast_cast_fu_337_p1 = tmp_1_fu_327_p4;

assign conv5_i_i_i_7_i_i_cast_cast_fu_361_p1 = tmp_2_fu_351_p4;

assign conv5_i_i_i_9_i_i_cast_cast_fu_439_p1 = tmp_3_fu_429_p4;

assign data_1_fu_133_p4 = {{layer15_out_dout[29:20]}};

assign data_2_fu_143_p4 = {{layer15_out_dout[39:30]}};

assign data_3_fu_163_p4 = {{layer15_out_dout[69:60]}};

assign data_4_fu_173_p4 = {{layer15_out_dout[79:70]}};

assign data_5_fu_193_p4 = {{layer15_out_dout[99:90]}};

assign data_6_fu_203_p4 = {{layer15_out_dout[109:100]}};

assign data_9_cast_fu_467_p4 = {{layer15_out_dout[129:120]}};

assign data_fu_123_p4 = {{layer15_out_dout[19:10]}};

assign layer16_out_din = (add_ln53_1001_fu_573_p2 + zext_ln53_fu_553_p1);

assign mul_i_i_10_i_i_fu_447_p0 = mul_i_i_10_i_i_fu_447_p00;

assign mul_i_i_10_i_i_fu_447_p00 = data_6_fu_203_p4;

assign mul_i_i_10_i_i_fu_447_p1 = 20'd1048081;

assign mul_i_i_12_i_i_fu_481_p0 = mul_i_i_12_i_i_fu_481_p00;

assign mul_i_i_12_i_i_fu_481_p00 = data_9_cast_fu_467_p4;

assign mul_i_i_12_i_i_fu_481_p1 = 17'd111;

assign mul_i_i_1_i_i_fu_217_p0 = mul_i_i_1_i_i_fu_217_p00;

assign mul_i_i_1_i_i_fu_217_p00 = data_fu_123_p4;

assign mul_i_i_1_i_i_fu_217_p1 = 19'd371;

assign mul_i_i_2_i_i_fu_241_p0 = mul_i_i_2_i_i_fu_241_p00;

assign mul_i_i_2_i_i_fu_241_p00 = data_1_fu_133_p4;

assign mul_i_i_2_i_i_fu_241_p1 = 20'd1048077;

assign mul_i_i_3_i_i_fu_265_p0 = mul_i_i_3_i_i_fu_265_p00;

assign mul_i_i_3_i_i_fu_265_p00 = data_2_fu_143_p4;

assign mul_i_i_3_i_i_fu_265_p1 = 20'd1048247;

assign mul_i_i_4_i_i_fu_297_p2 = (20'd0 - p_shl2_cast_fu_293_p1);

assign mul_i_i_6_i_i_fu_321_p0 = mul_i_i_6_i_i_fu_321_p00;

assign mul_i_i_6_i_i_fu_321_p00 = data_3_fu_163_p4;

assign mul_i_i_6_i_i_fu_321_p1 = 18'd242;

assign mul_i_i_7_i_i_fu_345_p0 = mul_i_i_7_i_i_fu_345_p00;

assign mul_i_i_7_i_i_fu_345_p00 = data_4_fu_173_p4;

assign mul_i_i_7_i_i_fu_345_p1 = 19'd369;

assign mul_i_i_8_i_i_fu_399_p2 = ($signed(p_neg_cast_fu_383_p1) - $signed(p_shl1_cast_fu_395_p1));

assign mul_i_i_9_i_i_fu_423_p0 = mul_i_i_9_i_i_fu_423_p00;

assign mul_i_i_9_i_i_fu_423_p00 = data_5_fu_193_p4;

assign mul_i_i_9_i_i_fu_423_p1 = 19'd402;

assign p_cast15_cast_fu_257_p1 = $signed(p_cast1_fu_247_p4);

assign p_cast16_cast29_fu_281_p1 = $signed(p_cast2_fu_271_p4);

assign p_cast17_cast30_fu_313_p1 = $signed(p_cast3_fu_303_p4);

assign p_cast1_fu_247_p4 = {{mul_i_i_2_i_i_fu_241_p2[19:7]}};

assign p_cast23_cast_fu_463_p1 = $signed(p_cast4_fu_453_p4);

assign p_cast2_fu_271_p4 = {{mul_i_i_3_i_i_fu_265_p2[19:7]}};

assign p_cast3_fu_303_p4 = {{mul_i_i_4_i_i_fu_297_p2[19:7]}};

assign p_cast4_fu_453_p4 = {{mul_i_i_10_i_i_fu_447_p2[19:7]}};

assign p_cast_cast_fu_415_p1 = $signed(p_cast_fu_405_p4);

assign p_cast_fu_405_p4 = {{mul_i_i_8_i_i_fu_399_p2[18:7]}};

assign p_neg_cast_fu_383_p1 = $signed(p_neg_fu_377_p2);

assign p_neg_fu_377_p2 = (18'd0 - p_shl_cast_fu_373_p1);

assign p_shl1_cast_fu_395_p1 = p_shl1_fu_387_p3;

assign p_shl1_fu_387_p3 = {{trunc_ln43_6_fu_183_p4}, {4'd0}};

assign p_shl2_cast_fu_293_p1 = p_shl2_fu_285_p3;

assign p_shl2_fu_285_p3 = {{trunc_ln43_3_fu_153_p4}, {9'd0}};

assign p_shl_cast_fu_373_p1 = p_shl_fu_365_p3;

assign p_shl_fu_365_p3 = {{trunc_ln43_6_fu_183_p4}, {7'd0}};

assign sext_ln53_595_fu_517_p1 = $signed(add_ln53_994_fu_511_p2);

assign sext_ln53_596_fu_527_p1 = $signed(add_ln53_995_fu_521_p2);

assign sext_ln53_597_fu_537_p1 = $signed(add_ln53_996_fu_531_p2);

assign sext_ln53_598_fu_569_p1 = $signed(add_ln53_1000_fu_563_p2);

assign sext_ln53_fu_507_p1 = $signed(add_ln53_fu_501_p2);

assign start_out = real_start;

assign tmp_1_fu_327_p4 = {{mul_i_i_6_i_i_fu_321_p2[17:7]}};

assign tmp_2_fu_351_p4 = {{mul_i_i_7_i_i_fu_345_p2[18:7]}};

assign tmp_3_fu_429_p4 = {{mul_i_i_9_i_i_fu_423_p2[18:7]}};

assign tmp_4_fu_487_p4 = {{mul_i_i_12_i_i_fu_481_p2[16:7]}};

assign tmp_fu_223_p4 = {{mul_i_i_1_i_i_fu_217_p2[18:7]}};

assign trunc_ln43_3_fu_153_p4 = {{layer15_out_dout[49:40]}};

assign trunc_ln43_6_fu_183_p4 = {{layer15_out_dout[89:80]}};

assign zext_ln53_1_fu_497_p1 = tmp_4_fu_487_p4;

assign zext_ln53_fu_553_p1 = add_ln53_998_fu_547_p2;

endmodule //myproject_dense_array_ap_ufixed_13u_array_ap_fixed_16_6_5_3_0_1u_config16_s
