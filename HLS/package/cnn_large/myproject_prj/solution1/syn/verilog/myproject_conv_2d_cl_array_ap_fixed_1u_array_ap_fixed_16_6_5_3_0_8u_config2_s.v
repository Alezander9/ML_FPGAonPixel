// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_8u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer19_out_dout,
        layer19_out_num_data_valid,
        layer19_out_fifo_cap,
        layer19_out_empty_n,
        layer19_out_read,
        start_out,
        start_write,
        layer2_out_din,
        layer2_out_num_data_valid,
        layer2_out_fifo_cap,
        layer2_out_full_n,
        layer2_out_write
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] layer19_out_dout;
input  [8:0] layer19_out_num_data_valid;
input  [8:0] layer19_out_fifo_cap;
input   layer19_out_empty_n;
output   layer19_out_read;
output   start_out;
output   start_write;
output  [127:0] layer2_out_din;
input  [7:0] layer2_out_num_data_valid;
input  [7:0] layer2_out_fifo_cap;
input   layer2_out_full_n;
output   layer2_out_write;

reg ap_idle;
reg layer19_out_read;
reg start_write;
reg layer2_out_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_blk_n;
reg   [0:0] icmp_ln51_reg_150;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln51_fu_126_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_subdone;
reg    layer19_out_blk_n;
wire    ap_block_pp0_stage1;
reg    layer2_out_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_done;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_idle;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_ready;
wire   [127:0] grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_din;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_write;
reg    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_ce;
reg    ap_block_state2_pp0_stage1_iter0_ignore_call5;
reg    ap_block_pp0_stage1_11001_ignoreCallOp18;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call5;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call5;
reg    ap_block_pp0_stage0_11001_ignoreCallOp23;
reg    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start_reg;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] indvar_flatten_fu_70;
wire   [7:0] add_ln51_fu_132_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_149;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start_reg = 1'b0;
end

myproject_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start),
    .ap_done(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_done),
    .ap_idle(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_idle),
    .ap_ready(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_ready),
    .in_elem_0_0_0_0_0_val(layer19_out_dout),
    .layer2_out_din(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_din),
    .layer2_out_num_data_valid(8'd0),
    .layer2_out_fifo_cap(8'd0),
    .layer2_out_full_n(layer2_out_full_n),
    .layer2_out_write(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_write),
    .layer2_out_blk_n(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_blk_n),
    .ap_ce(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_ce)
);

myproject_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln51_fu_126_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start_reg <= 1'b1;
        end else if ((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_ready == 1'b1)) begin
            grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_149)) begin
        if ((icmp_ln51_fu_126_p2 == 1'd0)) begin
            indvar_flatten_fu_70 <= add_ln51_fu_132_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_70 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln51_reg_150 <= icmp_ln51_fu_126_p2;
    end
end

always @ (*) begin
    if (((icmp_ln51_fu_126_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_70;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp23) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp18) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_ce = 1'b1;
    end else begin
        grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln51_reg_150 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer19_out_blk_n = layer19_out_empty_n;
    end else begin
        layer19_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln51_reg_150 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer19_out_read = 1'b1;
    end else begin
        layer19_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln51_reg_150 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_out_blk_n = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_blk_n;
    end else begin
        layer2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln51_reg_150 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_out_write = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_write;
    end else begin
        layer2_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln51_fu_132_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln51_reg_150 == 1'd0) & (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_blk_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp23 = ((ap_done_reg == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln51_reg_150 == 1'd0) & (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_blk_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_done_reg == 1'b1) | ((layer19_out_empty_n == 1'b0) & (icmp_ln51_reg_150 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp18 = ((ap_done_reg == 1'b1) | ((layer19_out_empty_n == 1'b0) & (icmp_ln51_reg_150 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_done_reg == 1'b1) | ((layer19_out_empty_n == 1'b0) & (icmp_ln51_reg_150 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call5 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((layer19_out_empty_n == 1'b0) & (icmp_ln51_reg_150 == 1'd0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0_ignore_call5 = ((layer19_out_empty_n == 1'b0) & (icmp_ln51_reg_150 == 1'd0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln51_reg_150 == 1'd0) & (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_blk_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1_ignore_call5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_149 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_ap_start_reg;

assign icmp_ln51_fu_126_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd150) ? 1'b1 : 1'b0);

assign layer2_out_din = grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config2_s_fu_80_layer2_out_din;

assign start_out = real_start;

endmodule //myproject_conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_8u_config2_s
