// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_array_ap_fixed_13u_array_ap_ufixed_10_0_4_0_0_13u_relu_config15_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer13_out_dout,
        layer13_out_num_data_valid,
        layer13_out_fifo_cap,
        layer13_out_empty_n,
        layer13_out_read,
        layer15_out_din,
        layer15_out_num_data_valid,
        layer15_out_fifo_cap,
        layer15_out_full_n,
        layer15_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [207:0] layer13_out_dout;
input  [1:0] layer13_out_num_data_valid;
input  [1:0] layer13_out_fifo_cap;
input   layer13_out_empty_n;
output   layer13_out_read;
output  [129:0] layer15_out_din;
input  [1:0] layer15_out_num_data_valid;
input  [1:0] layer15_out_fifo_cap;
input   layer15_out_full_n;
output   layer15_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer13_out_read;
reg layer15_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer13_out_blk_n;
reg    layer15_out_blk_n;
reg    ap_block_state1;
wire   [15:0] in_data_fu_147_p1;
wire   [5:0] tmp_24_fu_281_p4;
wire   [0:0] icmp_ln52_fu_291_p2;
wire   [9:0] trunc_ln52_fu_277_p1;
wire   [0:0] icmp_ln51_fu_271_p2;
wire   [9:0] select_ln52_fu_297_p3;
wire   [15:0] in_data_7_fu_171_p4;
wire   [5:0] tmp_25_fu_329_p4;
wire   [0:0] icmp_ln52_20_fu_339_p2;
wire   [9:0] trunc_ln52_s_fu_319_p4;
wire   [0:0] icmp_ln51_20_fu_313_p2;
wire   [9:0] select_ln52_12_fu_345_p3;
wire   [15:0] in_data_8_fu_181_p4;
wire   [5:0] tmp_26_fu_377_p4;
wire   [0:0] icmp_ln52_21_fu_387_p2;
wire   [9:0] trunc_ln52_12_fu_367_p4;
wire   [0:0] icmp_ln51_21_fu_361_p2;
wire   [9:0] select_ln52_13_fu_393_p3;
wire   [15:0] in_data_9_fu_191_p4;
wire   [5:0] tmp_27_fu_425_p4;
wire   [0:0] icmp_ln52_22_fu_435_p2;
wire   [9:0] trunc_ln52_13_fu_415_p4;
wire   [0:0] icmp_ln51_22_fu_409_p2;
wire   [9:0] select_ln52_14_fu_441_p3;
wire   [15:0] tmp_fu_201_p4;
wire   [5:0] tmp_28_fu_473_p4;
wire   [0:0] icmp_ln52_23_fu_483_p2;
wire   [9:0] trunc_ln52_14_fu_463_p4;
wire   [0:0] icmp_ln51_23_fu_457_p2;
wire   [9:0] select_ln52_15_fu_489_p3;
wire   [15:0] tmp_s_fu_211_p4;
wire   [5:0] tmp_29_fu_521_p4;
wire   [0:0] icmp_ln52_24_fu_531_p2;
wire   [9:0] trunc_ln52_15_fu_511_p4;
wire   [0:0] icmp_ln51_24_fu_505_p2;
wire   [9:0] select_ln52_16_fu_537_p3;
wire   [15:0] tmp_19_fu_221_p4;
wire   [5:0] tmp_30_fu_569_p4;
wire   [0:0] icmp_ln52_25_fu_579_p2;
wire   [9:0] trunc_ln52_16_fu_559_p4;
wire   [0:0] icmp_ln51_25_fu_553_p2;
wire   [9:0] select_ln52_17_fu_585_p3;
wire   [15:0] tmp_20_fu_231_p4;
wire   [5:0] tmp_31_fu_617_p4;
wire   [0:0] icmp_ln52_26_fu_627_p2;
wire   [9:0] trunc_ln52_17_fu_607_p4;
wire   [0:0] icmp_ln51_26_fu_601_p2;
wire   [9:0] select_ln52_18_fu_633_p3;
wire   [15:0] tmp_21_fu_241_p4;
wire   [5:0] tmp_32_fu_665_p4;
wire   [0:0] icmp_ln52_27_fu_675_p2;
wire   [9:0] trunc_ln52_18_fu_655_p4;
wire   [0:0] icmp_ln51_27_fu_649_p2;
wire   [9:0] select_ln52_19_fu_681_p3;
wire   [15:0] tmp_22_fu_251_p4;
wire   [5:0] tmp_33_fu_713_p4;
wire   [0:0] icmp_ln52_28_fu_723_p2;
wire   [9:0] trunc_ln52_19_fu_703_p4;
wire   [0:0] icmp_ln51_28_fu_697_p2;
wire   [9:0] select_ln52_20_fu_729_p3;
wire   [15:0] tmp_23_fu_261_p4;
wire   [5:0] tmp_34_fu_761_p4;
wire   [0:0] icmp_ln52_29_fu_771_p2;
wire   [9:0] trunc_ln52_20_fu_751_p4;
wire   [0:0] icmp_ln51_29_fu_745_p2;
wire   [9:0] select_ln52_21_fu_777_p3;
wire   [15:0] trunc_ln44_s_fu_151_p4;
wire   [5:0] tmp_35_fu_809_p4;
wire   [0:0] icmp_ln52_30_fu_819_p2;
wire   [9:0] trunc_ln52_21_fu_799_p4;
wire   [0:0] icmp_ln51_30_fu_793_p2;
wire   [9:0] select_ln52_22_fu_825_p3;
wire   [15:0] trunc_ln44_2_fu_161_p4;
wire   [5:0] tmp_36_fu_857_p4;
wire   [0:0] icmp_ln52_31_fu_867_p2;
wire   [9:0] trunc_ln52_22_fu_847_p4;
wire   [0:0] icmp_ln51_31_fu_841_p2;
wire   [9:0] select_ln52_23_fu_873_p3;
wire   [9:0] select_ln51_23_fu_881_p3;
wire   [9:0] select_ln51_22_fu_833_p3;
wire   [9:0] select_ln51_21_fu_785_p3;
wire   [9:0] select_ln51_20_fu_737_p3;
wire   [9:0] select_ln51_19_fu_689_p3;
wire   [9:0] select_ln51_18_fu_641_p3;
wire   [9:0] select_ln51_17_fu_593_p3;
wire   [9:0] select_ln51_16_fu_545_p3;
wire   [9:0] select_ln51_15_fu_497_p3;
wire   [9:0] select_ln51_14_fu_449_p3;
wire   [9:0] select_ln51_13_fu_401_p3;
wire   [9:0] select_ln51_12_fu_353_p3;
wire   [9:0] select_ln51_fu_305_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((real_start == 1'b0) | (layer15_out_full_n == 1'b0) | (layer13_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer15_out_full_n == 1'b0) | (layer13_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer15_out_full_n == 1'b0) | (layer13_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer15_out_full_n == 1'b0) | (layer13_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer13_out_blk_n = layer13_out_empty_n;
    end else begin
        layer13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer15_out_full_n == 1'b0) | (layer13_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer13_out_read = 1'b1;
    end else begin
        layer13_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_blk_n = layer15_out_full_n;
    end else begin
        layer15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer15_out_full_n == 1'b0) | (layer13_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_write = 1'b1;
    end else begin
        layer15_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer15_out_full_n == 1'b0) | (layer13_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln51_20_fu_313_p2 = (($signed(in_data_7_fu_171_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_21_fu_361_p2 = (($signed(in_data_8_fu_181_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_22_fu_409_p2 = (($signed(in_data_9_fu_191_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_23_fu_457_p2 = (($signed(tmp_fu_201_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_24_fu_505_p2 = (($signed(tmp_s_fu_211_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_25_fu_553_p2 = (($signed(tmp_19_fu_221_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_26_fu_601_p2 = (($signed(tmp_20_fu_231_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_27_fu_649_p2 = (($signed(tmp_21_fu_241_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_28_fu_697_p2 = (($signed(tmp_22_fu_251_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_29_fu_745_p2 = (($signed(tmp_23_fu_261_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_30_fu_793_p2 = (($signed(trunc_ln44_s_fu_151_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_31_fu_841_p2 = (($signed(trunc_ln44_2_fu_161_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_271_p2 = (($signed(in_data_fu_147_p1) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_20_fu_339_p2 = ((tmp_25_fu_329_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_21_fu_387_p2 = ((tmp_26_fu_377_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_22_fu_435_p2 = ((tmp_27_fu_425_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_23_fu_483_p2 = ((tmp_28_fu_473_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_24_fu_531_p2 = ((tmp_29_fu_521_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_25_fu_579_p2 = ((tmp_30_fu_569_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_26_fu_627_p2 = ((tmp_31_fu_617_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_27_fu_675_p2 = ((tmp_32_fu_665_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_28_fu_723_p2 = ((tmp_33_fu_713_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_29_fu_771_p2 = ((tmp_34_fu_761_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_30_fu_819_p2 = ((tmp_35_fu_809_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_31_fu_867_p2 = ((tmp_36_fu_857_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_291_p2 = ((tmp_24_fu_281_p4 != 6'd0) ? 1'b1 : 1'b0);

assign in_data_7_fu_171_p4 = {{layer13_out_dout[31:16]}};

assign in_data_8_fu_181_p4 = {{layer13_out_dout[47:32]}};

assign in_data_9_fu_191_p4 = {{layer13_out_dout[63:48]}};

assign in_data_fu_147_p1 = layer13_out_dout[15:0];

assign layer15_out_din = {{{{{{{{{{{{{select_ln51_23_fu_881_p3}, {select_ln51_22_fu_833_p3}}, {select_ln51_21_fu_785_p3}}, {select_ln51_20_fu_737_p3}}, {select_ln51_19_fu_689_p3}}, {select_ln51_18_fu_641_p3}}, {select_ln51_17_fu_593_p3}}, {select_ln51_16_fu_545_p3}}, {select_ln51_15_fu_497_p3}}, {select_ln51_14_fu_449_p3}}, {select_ln51_13_fu_401_p3}}, {select_ln51_12_fu_353_p3}}, {select_ln51_fu_305_p3}};

assign select_ln51_12_fu_353_p3 = ((icmp_ln51_20_fu_313_p2[0:0] == 1'b1) ? select_ln52_12_fu_345_p3 : 10'd0);

assign select_ln51_13_fu_401_p3 = ((icmp_ln51_21_fu_361_p2[0:0] == 1'b1) ? select_ln52_13_fu_393_p3 : 10'd0);

assign select_ln51_14_fu_449_p3 = ((icmp_ln51_22_fu_409_p2[0:0] == 1'b1) ? select_ln52_14_fu_441_p3 : 10'd0);

assign select_ln51_15_fu_497_p3 = ((icmp_ln51_23_fu_457_p2[0:0] == 1'b1) ? select_ln52_15_fu_489_p3 : 10'd0);

assign select_ln51_16_fu_545_p3 = ((icmp_ln51_24_fu_505_p2[0:0] == 1'b1) ? select_ln52_16_fu_537_p3 : 10'd0);

assign select_ln51_17_fu_593_p3 = ((icmp_ln51_25_fu_553_p2[0:0] == 1'b1) ? select_ln52_17_fu_585_p3 : 10'd0);

assign select_ln51_18_fu_641_p3 = ((icmp_ln51_26_fu_601_p2[0:0] == 1'b1) ? select_ln52_18_fu_633_p3 : 10'd0);

assign select_ln51_19_fu_689_p3 = ((icmp_ln51_27_fu_649_p2[0:0] == 1'b1) ? select_ln52_19_fu_681_p3 : 10'd0);

assign select_ln51_20_fu_737_p3 = ((icmp_ln51_28_fu_697_p2[0:0] == 1'b1) ? select_ln52_20_fu_729_p3 : 10'd0);

assign select_ln51_21_fu_785_p3 = ((icmp_ln51_29_fu_745_p2[0:0] == 1'b1) ? select_ln52_21_fu_777_p3 : 10'd0);

assign select_ln51_22_fu_833_p3 = ((icmp_ln51_30_fu_793_p2[0:0] == 1'b1) ? select_ln52_22_fu_825_p3 : 10'd0);

assign select_ln51_23_fu_881_p3 = ((icmp_ln51_31_fu_841_p2[0:0] == 1'b1) ? select_ln52_23_fu_873_p3 : 10'd0);

assign select_ln51_fu_305_p3 = ((icmp_ln51_fu_271_p2[0:0] == 1'b1) ? select_ln52_fu_297_p3 : 10'd0);

assign select_ln52_12_fu_345_p3 = ((icmp_ln52_20_fu_339_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_s_fu_319_p4);

assign select_ln52_13_fu_393_p3 = ((icmp_ln52_21_fu_387_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_12_fu_367_p4);

assign select_ln52_14_fu_441_p3 = ((icmp_ln52_22_fu_435_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_13_fu_415_p4);

assign select_ln52_15_fu_489_p3 = ((icmp_ln52_23_fu_483_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_14_fu_463_p4);

assign select_ln52_16_fu_537_p3 = ((icmp_ln52_24_fu_531_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_15_fu_511_p4);

assign select_ln52_17_fu_585_p3 = ((icmp_ln52_25_fu_579_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_16_fu_559_p4);

assign select_ln52_18_fu_633_p3 = ((icmp_ln52_26_fu_627_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_17_fu_607_p4);

assign select_ln52_19_fu_681_p3 = ((icmp_ln52_27_fu_675_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_18_fu_655_p4);

assign select_ln52_20_fu_729_p3 = ((icmp_ln52_28_fu_723_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_19_fu_703_p4);

assign select_ln52_21_fu_777_p3 = ((icmp_ln52_29_fu_771_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_20_fu_751_p4);

assign select_ln52_22_fu_825_p3 = ((icmp_ln52_30_fu_819_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_21_fu_799_p4);

assign select_ln52_23_fu_873_p3 = ((icmp_ln52_31_fu_867_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_22_fu_847_p4);

assign select_ln52_fu_297_p3 = ((icmp_ln52_fu_291_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln52_fu_277_p1);

assign start_out = real_start;

assign tmp_19_fu_221_p4 = {{layer13_out_dout[111:96]}};

assign tmp_20_fu_231_p4 = {{layer13_out_dout[127:112]}};

assign tmp_21_fu_241_p4 = {{layer13_out_dout[143:128]}};

assign tmp_22_fu_251_p4 = {{layer13_out_dout[159:144]}};

assign tmp_23_fu_261_p4 = {{layer13_out_dout[175:160]}};

assign tmp_24_fu_281_p4 = {{layer13_out_dout[15:10]}};

assign tmp_25_fu_329_p4 = {{layer13_out_dout[31:26]}};

assign tmp_26_fu_377_p4 = {{layer13_out_dout[47:42]}};

assign tmp_27_fu_425_p4 = {{layer13_out_dout[63:58]}};

assign tmp_28_fu_473_p4 = {{layer13_out_dout[79:74]}};

assign tmp_29_fu_521_p4 = {{layer13_out_dout[95:90]}};

assign tmp_30_fu_569_p4 = {{layer13_out_dout[111:106]}};

assign tmp_31_fu_617_p4 = {{layer13_out_dout[127:122]}};

assign tmp_32_fu_665_p4 = {{layer13_out_dout[143:138]}};

assign tmp_33_fu_713_p4 = {{layer13_out_dout[159:154]}};

assign tmp_34_fu_761_p4 = {{layer13_out_dout[175:170]}};

assign tmp_35_fu_809_p4 = {{layer13_out_dout[191:186]}};

assign tmp_36_fu_857_p4 = {{layer13_out_dout[207:202]}};

assign tmp_fu_201_p4 = {{layer13_out_dout[79:64]}};

assign tmp_s_fu_211_p4 = {{layer13_out_dout[95:80]}};

assign trunc_ln44_2_fu_161_p4 = {{layer13_out_dout[207:192]}};

assign trunc_ln44_s_fu_151_p4 = {{layer13_out_dout[191:176]}};

assign trunc_ln52_12_fu_367_p4 = {{layer13_out_dout[41:32]}};

assign trunc_ln52_13_fu_415_p4 = {{layer13_out_dout[57:48]}};

assign trunc_ln52_14_fu_463_p4 = {{layer13_out_dout[73:64]}};

assign trunc_ln52_15_fu_511_p4 = {{layer13_out_dout[89:80]}};

assign trunc_ln52_16_fu_559_p4 = {{layer13_out_dout[105:96]}};

assign trunc_ln52_17_fu_607_p4 = {{layer13_out_dout[121:112]}};

assign trunc_ln52_18_fu_655_p4 = {{layer13_out_dout[137:128]}};

assign trunc_ln52_19_fu_703_p4 = {{layer13_out_dout[153:144]}};

assign trunc_ln52_20_fu_751_p4 = {{layer13_out_dout[169:160]}};

assign trunc_ln52_21_fu_799_p4 = {{layer13_out_dout[185:176]}};

assign trunc_ln52_22_fu_847_p4 = {{layer13_out_dout[201:192]}};

assign trunc_ln52_fu_277_p1 = layer13_out_dout[9:0];

assign trunc_ln52_s_fu_319_p4 = {{layer13_out_dout[25:16]}};

endmodule //myproject_relu_array_ap_fixed_13u_array_ap_ufixed_10_0_4_0_0_13u_relu_config15_s
