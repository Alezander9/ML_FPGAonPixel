-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_normalize_ap_fixed_16_6_5_3_0_ap_fixed_15_5_5_3_0_config15_s is
port (
    ap_ready : OUT STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (14 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (14 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (14 downto 0) );
end;


architecture behav of myproject_normalize_ap_fixed_16_6_5_3_0_ap_fixed_15_5_5_3_0_config15_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv23_15800 : STD_LOGIC_VECTOR (22 downto 0) := "00000010101100000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv23_7C8400 : STD_LOGIC_VECTOR (22 downto 0) := "11111001000010000000000";
    constant ap_const_lv23_7CCE00 : STD_LOGIC_VECTOR (22 downto 0) := "11111001100111000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal y_fu_58_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln54_fu_66_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal y_1_fu_82_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln54_47_fu_90_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal y_2_fu_106_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln54_48_fu_114_p2 : STD_LOGIC_VECTOR (22 downto 0);


begin



    add_ln54_47_fu_90_p2 <= std_logic_vector(unsigned(y_1_fu_82_p3) + unsigned(ap_const_lv23_7C8400));
    add_ln54_48_fu_114_p2 <= std_logic_vector(unsigned(y_2_fu_106_p3) + unsigned(ap_const_lv23_7CCE00));
    add_ln54_fu_66_p2 <= std_logic_vector(unsigned(y_fu_58_p3) + unsigned(ap_const_lv23_15800));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= add_ln54_fu_66_p2(22 downto 8);
    ap_return_1 <= add_ln54_47_fu_90_p2(22 downto 8);
    ap_return_2 <= add_ln54_48_fu_114_p2(22 downto 8);
    y_1_fu_82_p3 <= (data_1_val & ap_const_lv8_0);
    y_2_fu_106_p3 <= (data_2_val & ap_const_lv8_0);
    y_fu_58_p3 <= (data_0_val & ap_const_lv8_0);
end behav;
