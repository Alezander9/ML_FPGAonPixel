-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_linear_ap_fixed_15_5_5_3_0_ap_fixed_16_6_5_3_0_linear_config3_s is
port (
    ap_ready : OUT STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_3_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_4_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_5_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_6_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_7_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_8_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_9_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_10_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_11_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_12_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_13_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_14_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_15_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_16_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_17_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_18_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_19_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_20_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_21_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_22_val : IN STD_LOGIC_VECTOR (14 downto 0);
    data_23_val : IN STD_LOGIC_VECTOR (14 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of myproject_linear_ap_fixed_15_5_5_3_0_ap_fixed_16_6_5_3_0_linear_config3_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal sext_ln32_fu_204_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_12_fu_208_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_13_fu_212_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_14_fu_216_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_15_fu_220_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_16_fu_224_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_17_fu_228_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_18_fu_232_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_19_fu_236_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_20_fu_240_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_21_fu_244_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_22_fu_248_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_23_fu_252_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_24_fu_256_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_25_fu_260_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_26_fu_264_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_27_fu_268_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_28_fu_272_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_29_fu_276_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_30_fu_280_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_31_fu_284_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_32_fu_288_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_33_fu_292_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_34_fu_296_p1 : STD_LOGIC_VECTOR (15 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= sext_ln32_fu_204_p1;
    ap_return_1 <= sext_ln32_12_fu_208_p1;
    ap_return_10 <= sext_ln32_21_fu_244_p1;
    ap_return_11 <= sext_ln32_22_fu_248_p1;
    ap_return_12 <= sext_ln32_23_fu_252_p1;
    ap_return_13 <= sext_ln32_24_fu_256_p1;
    ap_return_14 <= sext_ln32_25_fu_260_p1;
    ap_return_15 <= sext_ln32_26_fu_264_p1;
    ap_return_16 <= sext_ln32_27_fu_268_p1;
    ap_return_17 <= sext_ln32_28_fu_272_p1;
    ap_return_18 <= sext_ln32_29_fu_276_p1;
    ap_return_19 <= sext_ln32_30_fu_280_p1;
    ap_return_2 <= sext_ln32_13_fu_212_p1;
    ap_return_20 <= sext_ln32_31_fu_284_p1;
    ap_return_21 <= sext_ln32_32_fu_288_p1;
    ap_return_22 <= sext_ln32_33_fu_292_p1;
    ap_return_23 <= sext_ln32_34_fu_296_p1;
    ap_return_3 <= sext_ln32_14_fu_216_p1;
    ap_return_4 <= sext_ln32_15_fu_220_p1;
    ap_return_5 <= sext_ln32_16_fu_224_p1;
    ap_return_6 <= sext_ln32_17_fu_228_p1;
    ap_return_7 <= sext_ln32_18_fu_232_p1;
    ap_return_8 <= sext_ln32_19_fu_236_p1;
    ap_return_9 <= sext_ln32_20_fu_240_p1;
        sext_ln32_12_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_1_val),16));

        sext_ln32_13_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_2_val),16));

        sext_ln32_14_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_3_val),16));

        sext_ln32_15_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_4_val),16));

        sext_ln32_16_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_5_val),16));

        sext_ln32_17_fu_228_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_6_val),16));

        sext_ln32_18_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_7_val),16));

        sext_ln32_19_fu_236_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_8_val),16));

        sext_ln32_20_fu_240_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_9_val),16));

        sext_ln32_21_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_10_val),16));

        sext_ln32_22_fu_248_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_11_val),16));

        sext_ln32_23_fu_252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_12_val),16));

        sext_ln32_24_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_13_val),16));

        sext_ln32_25_fu_260_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_14_val),16));

        sext_ln32_26_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_15_val),16));

        sext_ln32_27_fu_268_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_16_val),16));

        sext_ln32_28_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_17_val),16));

        sext_ln32_29_fu_276_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_18_val),16));

        sext_ln32_30_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_19_val),16));

        sext_ln32_31_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_20_val),16));

        sext_ln32_32_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_21_val),16));

        sext_ln32_33_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_22_val),16));

        sext_ln32_34_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_23_val),16));

        sext_ln32_fu_204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_0_val),16));

end behav;
