-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    y_timed_input_ap_vld : IN STD_LOGIC;
    y_timed_input : IN STD_LOGIC_VECTOR (635 downto 0);
    layer10_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    layer10_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject_myproject,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu13p-flga2577-2-e,HLS_INPUT_CLOCK=25.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=14.285687,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=783,HLS_SYN_LUT=48953,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv636_lc_1 : STD_LOGIC_VECTOR (635 downto

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal y_timed_input_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal y_timed_input_preg : STD_LOGIC_VECTOR (635 downto
    signal y_timed_input_in_sig : STD_LOGIC_VECTOR (635 downto 0);
    signal y_timed_input_ap_vld_preg : STD_LOGIC := '0';
    signal y_timed_input_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer6_out_reg_720 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal layer6_out_1_reg_725 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_2_reg_730 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_3_reg_735 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_4_reg_740 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_5_reg_745 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_6_reg_750 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_7_reg_755 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_8_reg_760 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_9_reg_765 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_10_reg_770 : STD_LOGIC_VECTOR (11 downto 0);
    signal layer6_out_11_reg_775 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_ready : STD_LOGIC;
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_8 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_9 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_10 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_11 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_12 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_13 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_14 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_15 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_16 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_17 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_18 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_19 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_20 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_21 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_22 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_23 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_ready : STD_LOGIC;
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_8 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_9 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_10 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_11 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_12 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_13 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_14 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_15 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_16 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_17 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_18 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_19 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_20 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_21 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_22 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_23 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_ready : STD_LOGIC;
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_8 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_9 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_10 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_11 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_12 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_13 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_14 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_15 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_16 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_17 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_18 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_19 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_20 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_21 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_22 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_23 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_ready : STD_LOGIC;
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_8 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_9 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_10 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_11 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_ready : STD_LOGIC;
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_8 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_9 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_10 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_11 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_ready : STD_LOGIC;
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_8 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_9 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_10 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_11 : STD_LOGIC_VECTOR (11 downto 0);
    signal call_ret6_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config10_s_fu_175_ap_ready : STD_LOGIC;
    signal call_ret6_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config10_s_fu_175_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_val : IN STD_LOGIC_VECTOR (635 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_16_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_17_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_18_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_19_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_20_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_21_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_22_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_23_val : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_16_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_17_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_18_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_19_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_20_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_21_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_22_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_23_val : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_16_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_17_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_18_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_19_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_20_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_21_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_22_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_23_val : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config10_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53 : component myproject_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s
    port map (
        ap_ready => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_ready,
        data_val => y_timed_input_in_sig,
        ap_return_0 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_0,
        ap_return_1 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_1,
        ap_return_2 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_2,
        ap_return_3 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_3,
        ap_return_4 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_4,
        ap_return_5 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_5,
        ap_return_6 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_6,
        ap_return_7 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_7,
        ap_return_8 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_8,
        ap_return_9 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_9,
        ap_return_10 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_10,
        ap_return_11 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_11,
        ap_return_12 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_12,
        ap_return_13 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_13,
        ap_return_14 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_14,
        ap_return_15 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_15,
        ap_return_16 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_16,
        ap_return_17 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_17,
        ap_return_18 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_18,
        ap_return_19 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_19,
        ap_return_20 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_20,
        ap_return_21 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_21,
        ap_return_22 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_22,
        ap_return_23 => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_23);

    call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59 : component myproject_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s
    port map (
        ap_ready => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_ready,
        data_0_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_0,
        data_1_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_1,
        data_2_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_2,
        data_3_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_3,
        data_4_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_4,
        data_5_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_5,
        data_6_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_6,
        data_7_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_7,
        data_8_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_8,
        data_9_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_9,
        data_10_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_10,
        data_11_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_11,
        data_12_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_12,
        data_13_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_13,
        data_14_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_14,
        data_15_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_15,
        data_16_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_16,
        data_17_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_17,
        data_18_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_18,
        data_19_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_19,
        data_20_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_20,
        data_21_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_21,
        data_22_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_22,
        data_23_val => call_ret1_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config2_s_fu_53_ap_return_23,
        ap_return_0 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_0,
        ap_return_1 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_1,
        ap_return_2 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_2,
        ap_return_3 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_3,
        ap_return_4 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_4,
        ap_return_5 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_5,
        ap_return_6 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_6,
        ap_return_7 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_7,
        ap_return_8 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_8,
        ap_return_9 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_9,
        ap_return_10 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_10,
        ap_return_11 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_11,
        ap_return_12 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_12,
        ap_return_13 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_13,
        ap_return_14 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_14,
        ap_return_15 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_15,
        ap_return_16 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_16,
        ap_return_17 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_17,
        ap_return_18 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_18,
        ap_return_19 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_19,
        ap_return_20 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_20,
        ap_return_21 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_21,
        ap_return_22 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_22,
        ap_return_23 => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_23);

    call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87 : component myproject_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s
    port map (
        ap_ready => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_ready,
        data_0_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_0,
        data_1_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_1,
        data_2_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_2,
        data_3_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_3,
        data_4_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_4,
        data_5_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_5,
        data_6_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_6,
        data_7_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_7,
        data_8_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_8,
        data_9_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_9,
        data_10_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_10,
        data_11_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_11,
        data_12_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_12,
        data_13_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_13,
        data_14_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_14,
        data_15_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_15,
        data_16_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_16,
        data_17_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_17,
        data_18_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_18,
        data_19_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_19,
        data_20_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_20,
        data_21_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_21,
        data_22_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_22,
        data_23_val => call_ret2_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config4_s_fu_59_ap_return_23,
        ap_return_0 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_0,
        ap_return_1 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_1,
        ap_return_2 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_2,
        ap_return_3 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_3,
        ap_return_4 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_4,
        ap_return_5 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_5,
        ap_return_6 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_6,
        ap_return_7 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_7,
        ap_return_8 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_8,
        ap_return_9 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_9,
        ap_return_10 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_10,
        ap_return_11 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_11,
        ap_return_12 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_12,
        ap_return_13 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_13,
        ap_return_14 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_14,
        ap_return_15 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_15,
        ap_return_16 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_16,
        ap_return_17 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_17,
        ap_return_18 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_18,
        ap_return_19 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_19,
        ap_return_20 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_20,
        ap_return_21 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_21,
        ap_return_22 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_22,
        ap_return_23 => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_23);

    call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115 : component myproject_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s
    port map (
        ap_ready => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_ready,
        data_0_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_0,
        data_1_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_1,
        data_2_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_2,
        data_3_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_3,
        data_4_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_4,
        data_5_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_5,
        data_6_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_6,
        data_7_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_7,
        data_8_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_8,
        data_9_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_9,
        data_10_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_10,
        data_11_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_11,
        data_12_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_12,
        data_13_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_13,
        data_14_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_14,
        data_15_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_15,
        data_16_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_16,
        data_17_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_17,
        data_18_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_18,
        data_19_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_19,
        data_20_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_20,
        data_21_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_21,
        data_22_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_22,
        data_23_val => call_ret3_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config5_s_fu_87_ap_return_23,
        ap_return_0 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_0,
        ap_return_1 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_1,
        ap_return_2 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_2,
        ap_return_3 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_3,
        ap_return_4 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_4,
        ap_return_5 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_5,
        ap_return_6 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_6,
        ap_return_7 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_7,
        ap_return_8 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_8,
        ap_return_9 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_9,
        ap_return_10 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_10,
        ap_return_11 => call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_11);

    call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143 : component myproject_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s
    port map (
        ap_ready => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_ready,
        data_0_val => layer6_out_reg_720,
        data_1_val => layer6_out_1_reg_725,
        data_2_val => layer6_out_2_reg_730,
        data_3_val => layer6_out_3_reg_735,
        data_4_val => layer6_out_4_reg_740,
        data_5_val => layer6_out_5_reg_745,
        data_6_val => layer6_out_6_reg_750,
        data_7_val => layer6_out_7_reg_755,
        data_8_val => layer6_out_8_reg_760,
        data_9_val => layer6_out_9_reg_765,
        data_10_val => layer6_out_10_reg_770,
        data_11_val => layer6_out_11_reg_775,
        ap_return_0 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_0,
        ap_return_1 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_1,
        ap_return_2 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_2,
        ap_return_3 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_3,
        ap_return_4 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_4,
        ap_return_5 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_5,
        ap_return_6 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_6,
        ap_return_7 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_7,
        ap_return_8 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_8,
        ap_return_9 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_9,
        ap_return_10 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_10,
        ap_return_11 => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_11);

    call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159 : component myproject_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s
    port map (
        ap_ready => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_ready,
        data_0_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_0,
        data_1_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_1,
        data_2_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_2,
        data_3_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_3,
        data_4_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_4,
        data_5_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_5,
        data_6_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_6,
        data_7_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_7,
        data_8_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_8,
        data_9_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_9,
        data_10_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_10,
        data_11_val => call_ret5_normalize_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config8_s_fu_143_ap_return_11,
        ap_return_0 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_0,
        ap_return_1 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_1,
        ap_return_2 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_2,
        ap_return_3 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_3,
        ap_return_4 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_4,
        ap_return_5 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_5,
        ap_return_6 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_6,
        ap_return_7 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_7,
        ap_return_8 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_8,
        ap_return_9 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_9,
        ap_return_10 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_10,
        ap_return_11 => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_11);

    call_ret6_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config10_s_fu_175 : component myproject_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config10_s
    port map (
        ap_ready => call_ret6_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config10_s_fu_175_ap_ready,
        data_0_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_0,
        data_1_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_1,
        data_2_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_2,
        data_3_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_3,
        data_4_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_4,
        data_5_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_5,
        data_6_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_6,
        data_7_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_7,
        data_8_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_8,
        data_9_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_9,
        data_10_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_10,
        data_11_val => call_ret_relu_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_relu_config9_s_fu_159_ap_return_11,
        ap_return => call_ret6_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config10_s_fu_175_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    y_timed_input_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                y_timed_input_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    y_timed_input_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (y_timed_input_ap_vld = ap_const_logic_1))) then 
                    y_timed_input_ap_vld_preg <= y_timed_input_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    y_timed_input_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                y_timed_input_preg <= ap_const_lv636_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (y_timed_input_ap_vld = ap_const_logic_1))) then 
                    y_timed_input_preg <= y_timed_input;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                layer6_out_10_reg_770 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_10;
                layer6_out_11_reg_775 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_11;
                layer6_out_1_reg_725 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_1;
                layer6_out_2_reg_730 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_2;
                layer6_out_3_reg_735 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_3;
                layer6_out_4_reg_740 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_4;
                layer6_out_5_reg_745 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_5;
                layer6_out_6_reg_750 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_6;
                layer6_out_7_reg_755 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_7;
                layer6_out_8_reg_760 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_8;
                layer6_out_9_reg_765 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_9;
                layer6_out_reg_720 <= call_ret4_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config6_s_fu_115_ap_return_0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, y_timed_input_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((y_timed_input_ap_vld_in_sig = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, y_timed_input_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((y_timed_input_ap_vld_in_sig = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, y_timed_input_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((y_timed_input_ap_vld_in_sig = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(y_timed_input_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (y_timed_input_ap_vld_in_sig = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    layer10_out <= call_ret6_dense_latency_ap_fixed_12_2_5_3_0_ap_fixed_12_2_5_3_0_config10_s_fu_175_ap_return;

    layer10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer10_out_ap_vld <= ap_const_logic_1;
        else 
            layer10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    y_timed_input_ap_vld_in_sig_assign_proc : process(y_timed_input_ap_vld, y_timed_input_ap_vld_preg)
    begin
        if ((y_timed_input_ap_vld = ap_const_logic_1)) then 
            y_timed_input_ap_vld_in_sig <= y_timed_input_ap_vld;
        else 
            y_timed_input_ap_vld_in_sig <= y_timed_input_ap_vld_preg;
        end if; 
    end process;


    y_timed_input_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, y_timed_input_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_timed_input_blk_n <= y_timed_input_ap_vld;
        else 
            y_timed_input_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_timed_input_in_sig_assign_proc : process(y_timed_input_ap_vld, y_timed_input, y_timed_input_preg)
    begin
        if ((y_timed_input_ap_vld = ap_const_logic_1)) then 
            y_timed_input_in_sig <= y_timed_input;
        else 
            y_timed_input_in_sig <= y_timed_input_preg;
        end if; 
    end process;

end behav;
