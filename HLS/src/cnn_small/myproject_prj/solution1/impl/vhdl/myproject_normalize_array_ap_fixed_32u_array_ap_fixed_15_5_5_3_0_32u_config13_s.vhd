-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_normalize_array_ap_fixed_32u_array_ap_fixed_15_5_5_3_0_32u_config13_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    layer2_out_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    layer2_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer2_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer2_out_empty_n : IN STD_LOGIC;
    layer2_out_read : OUT STD_LOGIC;
    layer13_out_din : OUT STD_LOGIC_VECTOR (479 downto 0);
    layer13_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer13_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer13_out_full_n : IN STD_LOGIC;
    layer13_out_write : OUT STD_LOGIC );
end;


architecture behav of myproject_normalize_array_ap_fixed_32u_array_ap_fixed_15_5_5_3_0_32u_config13_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv24_FFEC00 : STD_LOGIC_VECTOR (23 downto 0) := "111111111110110000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv24_8400 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000010000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv24_FEE400 : STD_LOGIC_VECTOR (23 downto 0) := "111111101110010000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv24_FF6400 : STD_LOGIC_VECTOR (23 downto 0) := "111111110110010000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv24_FFCC00 : STD_LOGIC_VECTOR (23 downto 0) := "111111111100110000000000";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv24_49000 : STD_LOGIC_VECTOR (23 downto 0) := "000001001001000000000000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv24_FEF800 : STD_LOGIC_VECTOR (23 downto 0) := "111111101111100000000000";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv24_FA0800 : STD_LOGIC_VECTOR (23 downto 0) := "111110100000100000000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv24_55800 : STD_LOGIC_VECTOR (23 downto 0) := "000001010101100000000000";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv24_FD1400 : STD_LOGIC_VECTOR (23 downto 0) := "111111010001010000000000";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv24_FFDC00 : STD_LOGIC_VECTOR (23 downto 0) := "111111111101110000000000";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv24_3A400 : STD_LOGIC_VECTOR (23 downto 0) := "000000111010010000000000";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001110";
    constant ap_const_lv24_FFD000 : STD_LOGIC_VECTOR (23 downto 0) := "111111111101000000000000";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011110";
    constant ap_const_lv24_BC00 : STD_LOGIC_VECTOR (23 downto 0) := "000000001011110000000000";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101110";
    constant ap_const_lv24_F83400 : STD_LOGIC_VECTOR (23 downto 0) := "111110000011010000000000";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111110";
    constant ap_const_lv24_50800 : STD_LOGIC_VECTOR (23 downto 0) := "000001010000100000000000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_10E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001110";
    constant ap_const_lv24_1F400 : STD_LOGIC_VECTOR (23 downto 0) := "000000011111010000000000";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_11E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011110";
    constant ap_const_lv24_19C00 : STD_LOGIC_VECTOR (23 downto 0) := "000000011001110000000000";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_12E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101110";
    constant ap_const_lv24_1E800 : STD_LOGIC_VECTOR (23 downto 0) := "000000011110100000000000";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_13E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111110";
    constant ap_const_lv24_FF5000 : STD_LOGIC_VECTOR (23 downto 0) := "111111110101000000000000";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_14E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001110";
    constant ap_const_lv24_FFD800 : STD_LOGIC_VECTOR (23 downto 0) := "111111111101100000000000";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_15E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011110";
    constant ap_const_lv24_B400 : STD_LOGIC_VECTOR (23 downto 0) := "000000001011010000000000";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_16E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101110";
    constant ap_const_lv24_FB0800 : STD_LOGIC_VECTOR (23 downto 0) := "111110110000100000000000";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_17E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111110";
    constant ap_const_lv24_45000 : STD_LOGIC_VECTOR (23 downto 0) := "000001000101000000000000";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_18E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001110";
    constant ap_const_lv24_FFB800 : STD_LOGIC_VECTOR (23 downto 0) := "111111111011100000000000";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_19E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011110";
    constant ap_const_lv24_FFFC00 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111110000000000";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101110";
    constant ap_const_lv24_30C00 : STD_LOGIC_VECTOR (23 downto 0) := "000000110000110000000000";
    constant ap_const_lv32_1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110000";
    constant ap_const_lv32_1BE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111110";
    constant ap_const_lv24_FE3000 : STD_LOGIC_VECTOR (23 downto 0) := "111111100011000000000000";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1CE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001110";
    constant ap_const_lv24_5B000 : STD_LOGIC_VECTOR (23 downto 0) := "000001011011000000000000";
    constant ap_const_lv32_1D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010000";
    constant ap_const_lv32_1DE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011110";
    constant ap_const_lv24_FF3400 : STD_LOGIC_VECTOR (23 downto 0) := "111111110011010000000000";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv24_FF3800 : STD_LOGIC_VECTOR (23 downto 0) := "111111110011100000000000";
    constant ap_const_lv32_1E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100111";
    constant ap_const_lv32_1FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111110";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal layer2_out_blk_n : STD_LOGIC;
    signal layer13_out_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln85_fu_249_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_fu_253_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_fu_261_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_s_fu_277_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_1_fu_287_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_49_fu_295_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_104_fu_311_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_2_fu_321_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_50_fu_329_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_105_fu_345_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_3_fu_355_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_51_fu_363_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_106_fu_379_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_4_fu_389_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_52_fu_397_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_107_fu_413_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_5_fu_423_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_53_fu_431_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_108_fu_447_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_6_fu_457_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_54_fu_465_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_109_fu_481_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_7_fu_491_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_55_fu_499_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_110_fu_515_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_8_fu_525_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_56_fu_533_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_111_fu_549_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_9_fu_559_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_57_fu_567_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_112_fu_583_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_10_fu_593_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_58_fu_601_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_113_fu_617_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_11_fu_627_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_59_fu_635_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_114_fu_651_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_12_fu_661_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_60_fu_669_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_115_fu_685_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_13_fu_695_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_61_fu_703_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_116_fu_719_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_14_fu_729_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_62_fu_737_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_117_fu_753_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_15_fu_763_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_63_fu_771_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_118_fu_787_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_16_fu_797_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_64_fu_805_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_119_fu_821_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_17_fu_831_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_65_fu_839_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_120_fu_855_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_18_fu_865_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_66_fu_873_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_121_fu_889_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_19_fu_899_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_67_fu_907_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_122_fu_923_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_20_fu_933_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_68_fu_941_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_123_fu_957_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_21_fu_967_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_69_fu_975_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_124_fu_991_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_22_fu_1001_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_70_fu_1009_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_125_fu_1025_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_23_fu_1035_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_71_fu_1043_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_126_fu_1059_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_24_fu_1069_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_72_fu_1077_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_127_fu_1093_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_25_fu_1103_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_73_fu_1111_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_128_fu_1127_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_26_fu_1137_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_74_fu_1145_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_129_fu_1161_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_27_fu_1171_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_75_fu_1179_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_130_fu_1195_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_28_fu_1205_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_76_fu_1213_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_131_fu_1229_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_29_fu_1239_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_77_fu_1247_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_132_fu_1263_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_30_fu_1273_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln85_fu_1281_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_78_fu_1285_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln85_2_fu_1301_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln42_79_fu_1311_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln41_72_fu_1317_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_71_fu_1291_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_70_fu_1253_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_69_fu_1219_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_68_fu_1185_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_67_fu_1151_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_66_fu_1117_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_65_fu_1083_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_64_fu_1049_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_63_fu_1015_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_62_fu_981_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_61_fu_947_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_60_fu_913_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_59_fu_879_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_58_fu_845_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_57_fu_811_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_56_fu_777_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_55_fu_743_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_54_fu_709_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_53_fu_675_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_52_fu_641_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_51_fu_607_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_50_fu_573_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_49_fu_539_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_48_fu_505_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_47_fu_471_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_46_fu_437_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_45_fu_403_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_44_fu_369_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_43_fu_335_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln41_s_fu_301_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln_fu_267_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (layer13_out_full_n = ap_const_logic_0) or (layer2_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, layer2_out_empty_n, layer13_out_full_n)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln42_49_fu_295_p2 <= std_logic_vector(unsigned(y_1_fu_287_p3) + unsigned(ap_const_lv24_8400));
    add_ln42_50_fu_329_p2 <= std_logic_vector(unsigned(y_2_fu_321_p3) + unsigned(ap_const_lv24_FEE400));
    add_ln42_51_fu_363_p2 <= std_logic_vector(unsigned(y_3_fu_355_p3) + unsigned(ap_const_lv24_FF6400));
    add_ln42_52_fu_397_p2 <= std_logic_vector(unsigned(y_4_fu_389_p3) + unsigned(ap_const_lv24_FFCC00));
    add_ln42_53_fu_431_p2 <= std_logic_vector(unsigned(y_5_fu_423_p3) + unsigned(ap_const_lv24_49000));
    add_ln42_54_fu_465_p2 <= std_logic_vector(unsigned(y_6_fu_457_p3) + unsigned(ap_const_lv24_FEF800));
    add_ln42_55_fu_499_p2 <= std_logic_vector(unsigned(y_7_fu_491_p3) + unsigned(ap_const_lv24_FA0800));
    add_ln42_56_fu_533_p2 <= std_logic_vector(unsigned(y_8_fu_525_p3) + unsigned(ap_const_lv24_55800));
    add_ln42_57_fu_567_p2 <= std_logic_vector(unsigned(y_9_fu_559_p3) + unsigned(ap_const_lv24_FD1400));
    add_ln42_58_fu_601_p2 <= std_logic_vector(unsigned(y_10_fu_593_p3) + unsigned(ap_const_lv24_FFDC00));
    add_ln42_59_fu_635_p2 <= std_logic_vector(unsigned(y_11_fu_627_p3) + unsigned(ap_const_lv24_3A400));
    add_ln42_60_fu_669_p2 <= std_logic_vector(unsigned(y_12_fu_661_p3) + unsigned(ap_const_lv24_FFD000));
    add_ln42_61_fu_703_p2 <= std_logic_vector(unsigned(y_13_fu_695_p3) + unsigned(ap_const_lv24_BC00));
    add_ln42_62_fu_737_p2 <= std_logic_vector(unsigned(y_14_fu_729_p3) + unsigned(ap_const_lv24_F83400));
    add_ln42_63_fu_771_p2 <= std_logic_vector(unsigned(y_15_fu_763_p3) + unsigned(ap_const_lv24_50800));
    add_ln42_64_fu_805_p2 <= std_logic_vector(unsigned(y_16_fu_797_p3) + unsigned(ap_const_lv24_1F400));
    add_ln42_65_fu_839_p2 <= std_logic_vector(unsigned(y_17_fu_831_p3) + unsigned(ap_const_lv24_19C00));
    add_ln42_66_fu_873_p2 <= std_logic_vector(unsigned(y_18_fu_865_p3) + unsigned(ap_const_lv24_1E800));
    add_ln42_67_fu_907_p2 <= std_logic_vector(unsigned(y_19_fu_899_p3) + unsigned(ap_const_lv24_FF5000));
    add_ln42_68_fu_941_p2 <= std_logic_vector(unsigned(y_20_fu_933_p3) + unsigned(ap_const_lv24_FFD800));
    add_ln42_69_fu_975_p2 <= std_logic_vector(unsigned(y_21_fu_967_p3) + unsigned(ap_const_lv24_B400));
    add_ln42_70_fu_1009_p2 <= std_logic_vector(unsigned(y_22_fu_1001_p3) + unsigned(ap_const_lv24_FB0800));
    add_ln42_71_fu_1043_p2 <= std_logic_vector(unsigned(y_23_fu_1035_p3) + unsigned(ap_const_lv24_45000));
    add_ln42_72_fu_1077_p2 <= std_logic_vector(unsigned(y_24_fu_1069_p3) + unsigned(ap_const_lv24_FFB800));
    add_ln42_73_fu_1111_p2 <= std_logic_vector(unsigned(y_25_fu_1103_p3) + unsigned(ap_const_lv24_FFFC00));
    add_ln42_74_fu_1145_p2 <= std_logic_vector(unsigned(y_26_fu_1137_p3) + unsigned(ap_const_lv24_30C00));
    add_ln42_75_fu_1179_p2 <= std_logic_vector(unsigned(y_27_fu_1171_p3) + unsigned(ap_const_lv24_FE3000));
    add_ln42_76_fu_1213_p2 <= std_logic_vector(unsigned(y_28_fu_1205_p3) + unsigned(ap_const_lv24_5B000));
    add_ln42_77_fu_1247_p2 <= std_logic_vector(unsigned(y_29_fu_1239_p3) + unsigned(ap_const_lv24_FF3400));
    add_ln42_78_fu_1285_p2 <= std_logic_vector(signed(sext_ln85_fu_1281_p1) + signed(ap_const_lv24_FF3800));
    add_ln42_79_fu_1311_p2 <= std_logic_vector(unsigned(trunc_ln85_2_fu_1301_p4) + unsigned(ap_const_lv24_FFD800));
    add_ln42_fu_261_p2 <= std_logic_vector(unsigned(y_fu_253_p3) + unsigned(ap_const_lv24_FFEC00));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, layer2_out_empty_n, layer13_out_full_n)
    begin
        if (((real_start = ap_const_logic_0) or (layer13_out_full_n = ap_const_logic_0) or (layer2_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, layer2_out_empty_n, layer13_out_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (layer13_out_full_n = ap_const_logic_0) or (layer2_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer2_out_empty_n, layer13_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer13_out_full_n = ap_const_logic_0) or (layer2_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    internal_ap_ready_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer2_out_empty_n, layer13_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer13_out_full_n = ap_const_logic_0) or (layer2_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer13_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer13_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer13_out_blk_n <= layer13_out_full_n;
        else 
            layer13_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer13_out_din <= (((((((((((((((((((((((((((((((trunc_ln41_72_fu_1317_p4 & trunc_ln41_71_fu_1291_p4) & trunc_ln41_70_fu_1253_p4) & trunc_ln41_69_fu_1219_p4) & trunc_ln41_68_fu_1185_p4) & trunc_ln41_67_fu_1151_p4) & trunc_ln41_66_fu_1117_p4) & trunc_ln41_65_fu_1083_p4) & trunc_ln41_64_fu_1049_p4) & trunc_ln41_63_fu_1015_p4) & trunc_ln41_62_fu_981_p4) & trunc_ln41_61_fu_947_p4) & trunc_ln41_60_fu_913_p4) & trunc_ln41_59_fu_879_p4) & trunc_ln41_58_fu_845_p4) & trunc_ln41_57_fu_811_p4) & trunc_ln41_56_fu_777_p4) & trunc_ln41_55_fu_743_p4) & trunc_ln41_54_fu_709_p4) & trunc_ln41_53_fu_675_p4) & trunc_ln41_52_fu_641_p4) & trunc_ln41_51_fu_607_p4) & trunc_ln41_50_fu_573_p4) & trunc_ln41_49_fu_539_p4) & trunc_ln41_48_fu_505_p4) & trunc_ln41_47_fu_471_p4) & trunc_ln41_46_fu_437_p4) & trunc_ln41_45_fu_403_p4) & trunc_ln41_44_fu_369_p4) & trunc_ln41_43_fu_335_p4) & trunc_ln41_s_fu_301_p4) & trunc_ln_fu_267_p4);

    layer13_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer2_out_empty_n, layer13_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer13_out_full_n = ap_const_logic_0) or (layer2_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer13_out_write <= ap_const_logic_1;
        else 
            layer13_out_write <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer2_out_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer2_out_blk_n <= layer2_out_empty_n;
        else 
            layer2_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer2_out_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer2_out_empty_n, layer13_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer13_out_full_n = ap_const_logic_0) or (layer2_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer2_out_read <= ap_const_logic_1;
        else 
            layer2_out_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

        sext_ln85_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_30_fu_1273_p3),24));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_104_fu_311_p4 <= layer2_out_dout(46 downto 32);
    tmp_105_fu_345_p4 <= layer2_out_dout(62 downto 48);
    tmp_106_fu_379_p4 <= layer2_out_dout(78 downto 64);
    tmp_107_fu_413_p4 <= layer2_out_dout(94 downto 80);
    tmp_108_fu_447_p4 <= layer2_out_dout(111 downto 96);
    tmp_109_fu_481_p4 <= layer2_out_dout(127 downto 112);
    tmp_110_fu_515_p4 <= layer2_out_dout(142 downto 128);
    tmp_111_fu_549_p4 <= layer2_out_dout(159 downto 144);
    tmp_112_fu_583_p4 <= layer2_out_dout(174 downto 160);
    tmp_113_fu_617_p4 <= layer2_out_dout(191 downto 176);
    tmp_114_fu_651_p4 <= layer2_out_dout(206 downto 192);
    tmp_115_fu_685_p4 <= layer2_out_dout(222 downto 208);
    tmp_116_fu_719_p4 <= layer2_out_dout(238 downto 224);
    tmp_117_fu_753_p4 <= layer2_out_dout(254 downto 240);
    tmp_118_fu_787_p4 <= layer2_out_dout(270 downto 256);
    tmp_119_fu_821_p4 <= layer2_out_dout(286 downto 272);
    tmp_120_fu_855_p4 <= layer2_out_dout(302 downto 288);
    tmp_121_fu_889_p4 <= layer2_out_dout(318 downto 304);
    tmp_122_fu_923_p4 <= layer2_out_dout(334 downto 320);
    tmp_123_fu_957_p4 <= layer2_out_dout(350 downto 336);
    tmp_124_fu_991_p4 <= layer2_out_dout(366 downto 352);
    tmp_125_fu_1025_p4 <= layer2_out_dout(382 downto 368);
    tmp_126_fu_1059_p4 <= layer2_out_dout(398 downto 384);
    tmp_127_fu_1093_p4 <= layer2_out_dout(414 downto 400);
    tmp_128_fu_1127_p4 <= layer2_out_dout(430 downto 416);
    tmp_129_fu_1161_p4 <= layer2_out_dout(446 downto 432);
    tmp_130_fu_1195_p4 <= layer2_out_dout(462 downto 448);
    tmp_131_fu_1229_p4 <= layer2_out_dout(478 downto 464);
    tmp_132_fu_1263_p4 <= layer2_out_dout(495 downto 480);
    tmp_s_fu_277_p4 <= layer2_out_dout(30 downto 16);
    trunc_ln41_43_fu_335_p4 <= add_ln42_50_fu_329_p2(23 downto 9);
    trunc_ln41_44_fu_369_p4 <= add_ln42_51_fu_363_p2(23 downto 9);
    trunc_ln41_45_fu_403_p4 <= add_ln42_52_fu_397_p2(23 downto 9);
    trunc_ln41_46_fu_437_p4 <= add_ln42_53_fu_431_p2(23 downto 9);
    trunc_ln41_47_fu_471_p4 <= add_ln42_54_fu_465_p2(23 downto 9);
    trunc_ln41_48_fu_505_p4 <= add_ln42_55_fu_499_p2(23 downto 9);
    trunc_ln41_49_fu_539_p4 <= add_ln42_56_fu_533_p2(23 downto 9);
    trunc_ln41_50_fu_573_p4 <= add_ln42_57_fu_567_p2(23 downto 9);
    trunc_ln41_51_fu_607_p4 <= add_ln42_58_fu_601_p2(23 downto 9);
    trunc_ln41_52_fu_641_p4 <= add_ln42_59_fu_635_p2(23 downto 9);
    trunc_ln41_53_fu_675_p4 <= add_ln42_60_fu_669_p2(23 downto 9);
    trunc_ln41_54_fu_709_p4 <= add_ln42_61_fu_703_p2(23 downto 9);
    trunc_ln41_55_fu_743_p4 <= add_ln42_62_fu_737_p2(23 downto 9);
    trunc_ln41_56_fu_777_p4 <= add_ln42_63_fu_771_p2(23 downto 9);
    trunc_ln41_57_fu_811_p4 <= add_ln42_64_fu_805_p2(23 downto 9);
    trunc_ln41_58_fu_845_p4 <= add_ln42_65_fu_839_p2(23 downto 9);
    trunc_ln41_59_fu_879_p4 <= add_ln42_66_fu_873_p2(23 downto 9);
    trunc_ln41_60_fu_913_p4 <= add_ln42_67_fu_907_p2(23 downto 9);
    trunc_ln41_61_fu_947_p4 <= add_ln42_68_fu_941_p2(23 downto 9);
    trunc_ln41_62_fu_981_p4 <= add_ln42_69_fu_975_p2(23 downto 9);
    trunc_ln41_63_fu_1015_p4 <= add_ln42_70_fu_1009_p2(23 downto 9);
    trunc_ln41_64_fu_1049_p4 <= add_ln42_71_fu_1043_p2(23 downto 9);
    trunc_ln41_65_fu_1083_p4 <= add_ln42_72_fu_1077_p2(23 downto 9);
    trunc_ln41_66_fu_1117_p4 <= add_ln42_73_fu_1111_p2(23 downto 9);
    trunc_ln41_67_fu_1151_p4 <= add_ln42_74_fu_1145_p2(23 downto 9);
    trunc_ln41_68_fu_1185_p4 <= add_ln42_75_fu_1179_p2(23 downto 9);
    trunc_ln41_69_fu_1219_p4 <= add_ln42_76_fu_1213_p2(23 downto 9);
    trunc_ln41_70_fu_1253_p4 <= add_ln42_77_fu_1247_p2(23 downto 9);
    trunc_ln41_71_fu_1291_p4 <= add_ln42_78_fu_1285_p2(23 downto 9);
    trunc_ln41_72_fu_1317_p4 <= add_ln42_79_fu_1311_p2(23 downto 9);
    trunc_ln41_s_fu_301_p4 <= add_ln42_49_fu_295_p2(23 downto 9);
    trunc_ln85_2_fu_1301_p4 <= layer2_out_dout(510 downto 487);
    trunc_ln85_fu_249_p1 <= layer2_out_dout(15 - 1 downto 0);
    trunc_ln_fu_267_p4 <= add_ln42_fu_261_p2(23 downto 9);
    y_10_fu_593_p3 <= (tmp_112_fu_583_p4 & ap_const_lv9_0);
    y_11_fu_627_p3 <= (tmp_113_fu_617_p4 & ap_const_lv8_0);
    y_12_fu_661_p3 <= (tmp_114_fu_651_p4 & ap_const_lv9_0);
    y_13_fu_695_p3 <= (tmp_115_fu_685_p4 & ap_const_lv9_0);
    y_14_fu_729_p3 <= (tmp_116_fu_719_p4 & ap_const_lv9_0);
    y_15_fu_763_p3 <= (tmp_117_fu_753_p4 & ap_const_lv9_0);
    y_16_fu_797_p3 <= (tmp_118_fu_787_p4 & ap_const_lv9_0);
    y_17_fu_831_p3 <= (tmp_119_fu_821_p4 & ap_const_lv9_0);
    y_18_fu_865_p3 <= (tmp_120_fu_855_p4 & ap_const_lv9_0);
    y_19_fu_899_p3 <= (tmp_121_fu_889_p4 & ap_const_lv9_0);
    y_1_fu_287_p3 <= (tmp_s_fu_277_p4 & ap_const_lv9_0);
    y_20_fu_933_p3 <= (tmp_122_fu_923_p4 & ap_const_lv9_0);
    y_21_fu_967_p3 <= (tmp_123_fu_957_p4 & ap_const_lv9_0);
    y_22_fu_1001_p3 <= (tmp_124_fu_991_p4 & ap_const_lv9_0);
    y_23_fu_1035_p3 <= (tmp_125_fu_1025_p4 & ap_const_lv9_0);
    y_24_fu_1069_p3 <= (tmp_126_fu_1059_p4 & ap_const_lv9_0);
    y_25_fu_1103_p3 <= (tmp_127_fu_1093_p4 & ap_const_lv9_0);
    y_26_fu_1137_p3 <= (tmp_128_fu_1127_p4 & ap_const_lv9_0);
    y_27_fu_1171_p3 <= (tmp_129_fu_1161_p4 & ap_const_lv9_0);
    y_28_fu_1205_p3 <= (tmp_130_fu_1195_p4 & ap_const_lv9_0);
    y_29_fu_1239_p3 <= (tmp_131_fu_1229_p4 & ap_const_lv9_0);
    y_2_fu_321_p3 <= (tmp_104_fu_311_p4 & ap_const_lv9_0);
    y_30_fu_1273_p3 <= (tmp_132_fu_1263_p4 & ap_const_lv7_0);
    y_3_fu_355_p3 <= (tmp_105_fu_345_p4 & ap_const_lv9_0);
    y_4_fu_389_p3 <= (tmp_106_fu_379_p4 & ap_const_lv9_0);
    y_5_fu_423_p3 <= (tmp_107_fu_413_p4 & ap_const_lv9_0);
    y_6_fu_457_p3 <= (tmp_108_fu_447_p4 & ap_const_lv8_0);
    y_7_fu_491_p3 <= (tmp_109_fu_481_p4 & ap_const_lv8_0);
    y_8_fu_525_p3 <= (tmp_110_fu_515_p4 & ap_const_lv9_0);
    y_9_fu_559_p3 <= (tmp_111_fu_549_p4 & ap_const_lv8_0);
    y_fu_253_p3 <= (trunc_ln85_fu_249_p1 & ap_const_lv9_0);
end behav;
