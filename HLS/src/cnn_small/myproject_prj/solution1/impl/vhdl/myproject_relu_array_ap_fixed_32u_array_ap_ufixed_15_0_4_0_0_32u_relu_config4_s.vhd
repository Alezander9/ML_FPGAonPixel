-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_relu_array_ap_fixed_32u_array_ap_ufixed_15_0_4_0_0_32u_relu_config4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    layer3_out_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    layer3_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer3_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer3_out_empty_n : IN STD_LOGIC;
    layer3_out_read : OUT STD_LOGIC;
    layer4_out_din : OUT STD_LOGIC_VECTOR (479 downto 0);
    layer4_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer4_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer4_out_full_n : IN STD_LOGIC;
    layer4_out_write : OUT STD_LOGIC );
end;


architecture behav of myproject_relu_array_ap_fixed_32u_array_ap_ufixed_15_0_4_0_0_32u_relu_config4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";
    constant ap_const_lv32_1F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101111";
    constant ap_const_lv32_1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001111";
    constant ap_const_lv32_1D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011010";
    constant ap_const_lv32_A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101001";
    constant ap_const_lv32_AA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101010";
    constant ap_const_lv32_B9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111001";
    constant ap_const_lv32_BA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111010";
    constant ap_const_lv32_C9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001001";
    constant ap_const_lv32_CA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001010";
    constant ap_const_lv32_D9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011001";
    constant ap_const_lv32_DA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011010";
    constant ap_const_lv32_E9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101001";
    constant ap_const_lv32_EA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101010";
    constant ap_const_lv32_F9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111001";
    constant ap_const_lv32_FA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111010";
    constant ap_const_lv32_109 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001001";
    constant ap_const_lv32_10A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001010";
    constant ap_const_lv32_119 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011001";
    constant ap_const_lv32_11A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011010";
    constant ap_const_lv32_129 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101001";
    constant ap_const_lv32_12A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101010";
    constant ap_const_lv32_139 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111001";
    constant ap_const_lv32_13A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111010";
    constant ap_const_lv32_149 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001001";
    constant ap_const_lv32_14A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001010";
    constant ap_const_lv32_159 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011001";
    constant ap_const_lv32_15A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011010";
    constant ap_const_lv32_169 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101001";
    constant ap_const_lv32_16A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101010";
    constant ap_const_lv32_179 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111001";
    constant ap_const_lv32_17A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111010";
    constant ap_const_lv32_189 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001001";
    constant ap_const_lv32_18A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001010";
    constant ap_const_lv32_199 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011001";
    constant ap_const_lv32_19A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011010";
    constant ap_const_lv32_1A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101001";
    constant ap_const_lv32_1AA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101010";
    constant ap_const_lv32_1B9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111001";
    constant ap_const_lv32_1BA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111010";
    constant ap_const_lv32_1C9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001001";
    constant ap_const_lv32_1CA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001010";
    constant ap_const_lv32_1D9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011001";
    constant ap_const_lv32_1DA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011010";
    constant ap_const_lv32_1E9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101001";
    constant ap_const_lv32_1EA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101010";
    constant ap_const_lv32_1F9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111001";
    constant ap_const_lv32_1FA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal layer3_out_blk_n : STD_LOGIC;
    signal layer4_out_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal in_data_fu_303_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln52_fu_623_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_fu_635_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_627_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_fu_651_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal in_data_1_fu_327_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_673_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_27_fu_691_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_1_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_1_fu_683_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_1_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_1_fu_707_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal in_data_2_fu_337_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_729_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_29_fu_747_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_2_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_2_fu_739_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_2_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_2_fu_763_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal in_data_3_fu_347_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_fu_785_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_30_fu_803_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_3_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_3_fu_795_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_3_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_3_fu_819_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_357_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_fu_841_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_31_fu_859_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_4_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_4_fu_851_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_4_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_4_fu_875_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_s_fu_367_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_897_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_32_fu_915_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_5_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_5_fu_907_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_5_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_5_fu_931_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_fu_377_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_fu_953_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_33_fu_971_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_6_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_6_fu_963_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_6_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_6_fu_987_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_fu_387_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_1009_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_34_fu_1027_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_7_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_7_fu_1019_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_7_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_7_fu_1043_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_3_fu_397_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_fu_1065_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_35_fu_1083_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_8_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_8_fu_1075_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_8_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_8_fu_1099_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_4_fu_407_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_fu_1121_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_36_fu_1139_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_9_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_9_fu_1131_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_9_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_9_fu_1155_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_5_fu_417_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_66_fu_1177_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_fu_1195_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_10_fu_1205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_s_fu_1187_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_10_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_10_fu_1211_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_fu_427_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_fu_1233_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_38_fu_1251_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_11_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_10_fu_1243_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_11_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_11_fu_1267_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_7_fu_437_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_fu_1289_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_39_fu_1307_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_12_fu_1317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_11_fu_1299_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_12_fu_1283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_12_fu_1323_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_fu_447_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_69_fu_1345_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_40_fu_1363_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_13_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_12_fu_1355_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_13_fu_1339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_13_fu_1379_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_9_fu_457_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_70_fu_1401_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_41_fu_1419_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_14_fu_1429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_13_fu_1411_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_14_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_14_fu_1435_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_10_fu_467_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_71_fu_1457_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_42_fu_1475_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_15_fu_1485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_14_fu_1467_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_15_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_15_fu_1491_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_11_fu_477_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_72_fu_1513_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_43_fu_1531_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_16_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_15_fu_1523_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_16_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_16_fu_1547_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_12_fu_487_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_fu_1569_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_44_fu_1587_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_17_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_16_fu_1579_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_17_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_17_fu_1603_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_13_fu_497_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_74_fu_1625_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_fu_1643_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_18_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_17_fu_1635_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_18_fu_1619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_18_fu_1659_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_14_fu_507_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_75_fu_1681_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_46_fu_1699_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_19_fu_1709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_18_fu_1691_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_19_fu_1675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_19_fu_1715_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_15_fu_517_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_76_fu_1737_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_47_fu_1755_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_20_fu_1765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_19_fu_1747_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_20_fu_1731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_20_fu_1771_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_16_fu_527_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_77_fu_1793_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_48_fu_1811_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_21_fu_1821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_20_fu_1803_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_21_fu_1787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_21_fu_1827_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_17_fu_537_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_78_fu_1849_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_49_fu_1867_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_22_fu_1877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_21_fu_1859_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_22_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_22_fu_1883_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_18_fu_547_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_fu_1905_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_50_fu_1923_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_23_fu_1933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_22_fu_1915_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_23_fu_1899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_23_fu_1939_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_19_fu_557_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_80_fu_1961_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_51_fu_1979_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_24_fu_1989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_23_fu_1971_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_24_fu_1955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_24_fu_1995_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_20_fu_567_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_fu_2017_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_52_fu_2035_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_25_fu_2045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_24_fu_2027_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_25_fu_2011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_25_fu_2051_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_21_fu_577_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_82_fu_2073_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_53_fu_2091_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_26_fu_2101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_25_fu_2083_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_26_fu_2067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_26_fu_2107_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_22_fu_587_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_83_fu_2129_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_fu_2147_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_27_fu_2157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_26_fu_2139_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_27_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_27_fu_2163_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_23_fu_597_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_84_fu_2185_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_55_fu_2203_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_28_fu_2213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_27_fu_2195_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_28_fu_2179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_28_fu_2219_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_24_fu_607_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_85_fu_2241_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_56_fu_2259_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_29_fu_2269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_28_fu_2251_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_29_fu_2235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_29_fu_2275_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln44_s_fu_307_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_86_fu_2297_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_57_fu_2315_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_30_fu_2325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_29_fu_2307_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_30_fu_2291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_30_fu_2331_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln44_1_fu_317_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_87_fu_2353_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_fu_2371_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln52_31_fu_2381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln52_30_fu_2363_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln51_31_fu_2347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_31_fu_2387_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_31_fu_2395_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_30_fu_2339_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_29_fu_2283_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_28_fu_2227_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_27_fu_2171_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_26_fu_2115_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_25_fu_2059_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_24_fu_2003_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_23_fu_1947_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_22_fu_1891_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_21_fu_1835_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_20_fu_1779_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_19_fu_1723_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_18_fu_1667_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_17_fu_1611_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_16_fu_1555_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_15_fu_1499_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_14_fu_1443_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_13_fu_1387_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_12_fu_1331_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_11_fu_1275_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_10_fu_1219_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_9_fu_1163_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_8_fu_1107_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_7_fu_1051_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_6_fu_995_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_5_fu_939_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_4_fu_883_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_3_fu_827_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_2_fu_771_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_1_fu_715_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln51_fu_659_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (layer4_out_full_n = ap_const_logic_0) or (layer3_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, layer3_out_empty_n, layer4_out_full_n)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, layer3_out_empty_n, layer4_out_full_n)
    begin
        if (((real_start = ap_const_logic_0) or (layer4_out_full_n = ap_const_logic_0) or (layer3_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, layer3_out_empty_n, layer4_out_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (layer4_out_full_n = ap_const_logic_0) or (layer3_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer3_out_empty_n, layer4_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer4_out_full_n = ap_const_logic_0) or (layer3_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    icmp_ln51_10_fu_1171_p2 <= "1" when (signed(tmp_5_fu_417_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_11_fu_1227_p2 <= "1" when (signed(tmp_6_fu_427_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_12_fu_1283_p2 <= "1" when (signed(tmp_7_fu_437_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_13_fu_1339_p2 <= "1" when (signed(tmp_8_fu_447_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_14_fu_1395_p2 <= "1" when (signed(tmp_9_fu_457_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_15_fu_1451_p2 <= "1" when (signed(tmp_10_fu_467_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_16_fu_1507_p2 <= "1" when (signed(tmp_11_fu_477_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_17_fu_1563_p2 <= "1" when (signed(tmp_12_fu_487_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_18_fu_1619_p2 <= "1" when (signed(tmp_13_fu_497_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_19_fu_1675_p2 <= "1" when (signed(tmp_14_fu_507_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_1_fu_667_p2 <= "1" when (signed(in_data_1_fu_327_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_20_fu_1731_p2 <= "1" when (signed(tmp_15_fu_517_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_21_fu_1787_p2 <= "1" when (signed(tmp_16_fu_527_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_22_fu_1843_p2 <= "1" when (signed(tmp_17_fu_537_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_23_fu_1899_p2 <= "1" when (signed(tmp_18_fu_547_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_24_fu_1955_p2 <= "1" when (signed(tmp_19_fu_557_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_25_fu_2011_p2 <= "1" when (signed(tmp_20_fu_567_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_26_fu_2067_p2 <= "1" when (signed(tmp_21_fu_577_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_27_fu_2123_p2 <= "1" when (signed(tmp_22_fu_587_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_28_fu_2179_p2 <= "1" when (signed(tmp_23_fu_597_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_29_fu_2235_p2 <= "1" when (signed(tmp_24_fu_607_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_2_fu_723_p2 <= "1" when (signed(in_data_2_fu_337_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_30_fu_2291_p2 <= "1" when (signed(trunc_ln44_s_fu_307_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_31_fu_2347_p2 <= "1" when (signed(trunc_ln44_1_fu_317_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_3_fu_779_p2 <= "1" when (signed(in_data_3_fu_347_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_4_fu_835_p2 <= "1" when (signed(tmp_fu_357_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_5_fu_891_p2 <= "1" when (signed(tmp_s_fu_367_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_6_fu_947_p2 <= "1" when (signed(tmp_1_fu_377_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_7_fu_1003_p2 <= "1" when (signed(tmp_2_fu_387_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_8_fu_1059_p2 <= "1" when (signed(tmp_3_fu_397_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_9_fu_1115_p2 <= "1" when (signed(tmp_4_fu_407_p4) > signed(ap_const_lv16_0)) else "0";
    icmp_ln51_fu_617_p2 <= "1" when (signed(in_data_fu_303_p1) > signed(ap_const_lv16_0)) else "0";
    icmp_ln52_10_fu_1205_p2 <= "0" when (tmp_37_fu_1195_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_11_fu_1261_p2 <= "0" when (tmp_38_fu_1251_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_12_fu_1317_p2 <= "0" when (tmp_39_fu_1307_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_13_fu_1373_p2 <= "0" when (tmp_40_fu_1363_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_14_fu_1429_p2 <= "0" when (tmp_41_fu_1419_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_15_fu_1485_p2 <= "0" when (tmp_42_fu_1475_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_16_fu_1541_p2 <= "0" when (tmp_43_fu_1531_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_17_fu_1597_p2 <= "0" when (tmp_44_fu_1587_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_18_fu_1653_p2 <= "0" when (tmp_45_fu_1643_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_19_fu_1709_p2 <= "0" when (tmp_46_fu_1699_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_1_fu_701_p2 <= "0" when (tmp_27_fu_691_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_20_fu_1765_p2 <= "0" when (tmp_47_fu_1755_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_21_fu_1821_p2 <= "0" when (tmp_48_fu_1811_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_22_fu_1877_p2 <= "0" when (tmp_49_fu_1867_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_23_fu_1933_p2 <= "0" when (tmp_50_fu_1923_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_24_fu_1989_p2 <= "0" when (tmp_51_fu_1979_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_25_fu_2045_p2 <= "0" when (tmp_52_fu_2035_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_26_fu_2101_p2 <= "0" when (tmp_53_fu_2091_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_27_fu_2157_p2 <= "0" when (tmp_54_fu_2147_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_28_fu_2213_p2 <= "0" when (tmp_55_fu_2203_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_29_fu_2269_p2 <= "0" when (tmp_56_fu_2259_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_2_fu_757_p2 <= "0" when (tmp_29_fu_747_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_30_fu_2325_p2 <= "0" when (tmp_57_fu_2315_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_31_fu_2381_p2 <= "0" when (tmp_58_fu_2371_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_3_fu_813_p2 <= "0" when (tmp_30_fu_803_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_4_fu_869_p2 <= "0" when (tmp_31_fu_859_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_5_fu_925_p2 <= "0" when (tmp_32_fu_915_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_6_fu_981_p2 <= "0" when (tmp_33_fu_971_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_7_fu_1037_p2 <= "0" when (tmp_34_fu_1027_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_8_fu_1093_p2 <= "0" when (tmp_35_fu_1083_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_9_fu_1149_p2 <= "0" when (tmp_36_fu_1139_p4 = ap_const_lv6_0) else "1";
    icmp_ln52_fu_645_p2 <= "0" when (tmp_25_fu_635_p4 = ap_const_lv6_0) else "1";
    in_data_1_fu_327_p4 <= layer3_out_dout(31 downto 16);
    in_data_2_fu_337_p4 <= layer3_out_dout(47 downto 32);
    in_data_3_fu_347_p4 <= layer3_out_dout(63 downto 48);
    in_data_fu_303_p1 <= layer3_out_dout(16 - 1 downto 0);

    internal_ap_ready_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer3_out_empty_n, layer4_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer4_out_full_n = ap_const_logic_0) or (layer3_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer3_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer3_out_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer3_out_blk_n <= layer3_out_empty_n;
        else 
            layer3_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer3_out_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer3_out_empty_n, layer4_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer4_out_full_n = ap_const_logic_0) or (layer3_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer3_out_read <= ap_const_logic_1;
        else 
            layer3_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer4_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer4_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer4_out_blk_n <= layer4_out_full_n;
        else 
            layer4_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer4_out_din <= (((((((((((((((((((((((((((((((select_ln51_31_fu_2395_p3 & select_ln51_30_fu_2339_p3) & select_ln51_29_fu_2283_p3) & select_ln51_28_fu_2227_p3) & select_ln51_27_fu_2171_p3) & select_ln51_26_fu_2115_p3) & select_ln51_25_fu_2059_p3) & select_ln51_24_fu_2003_p3) & select_ln51_23_fu_1947_p3) & select_ln51_22_fu_1891_p3) & select_ln51_21_fu_1835_p3) & select_ln51_20_fu_1779_p3) & select_ln51_19_fu_1723_p3) & select_ln51_18_fu_1667_p3) & select_ln51_17_fu_1611_p3) & select_ln51_16_fu_1555_p3) & select_ln51_15_fu_1499_p3) & select_ln51_14_fu_1443_p3) & select_ln51_13_fu_1387_p3) & select_ln51_12_fu_1331_p3) & select_ln51_11_fu_1275_p3) & select_ln51_10_fu_1219_p3) & select_ln51_9_fu_1163_p3) & select_ln51_8_fu_1107_p3) & select_ln51_7_fu_1051_p3) & select_ln51_6_fu_995_p3) & select_ln51_5_fu_939_p3) & select_ln51_4_fu_883_p3) & select_ln51_3_fu_827_p3) & select_ln51_2_fu_771_p3) & select_ln51_1_fu_715_p3) & select_ln51_fu_659_p3);

    layer4_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer3_out_empty_n, layer4_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer4_out_full_n = ap_const_logic_0) or (layer3_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer4_out_write <= ap_const_logic_1;
        else 
            layer4_out_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln51_10_fu_1219_p3 <= 
        select_ln52_10_fu_1211_p3 when (icmp_ln51_10_fu_1171_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_11_fu_1275_p3 <= 
        select_ln52_11_fu_1267_p3 when (icmp_ln51_11_fu_1227_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_12_fu_1331_p3 <= 
        select_ln52_12_fu_1323_p3 when (icmp_ln51_12_fu_1283_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_13_fu_1387_p3 <= 
        select_ln52_13_fu_1379_p3 when (icmp_ln51_13_fu_1339_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_14_fu_1443_p3 <= 
        select_ln52_14_fu_1435_p3 when (icmp_ln51_14_fu_1395_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_15_fu_1499_p3 <= 
        select_ln52_15_fu_1491_p3 when (icmp_ln51_15_fu_1451_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_16_fu_1555_p3 <= 
        select_ln52_16_fu_1547_p3 when (icmp_ln51_16_fu_1507_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_17_fu_1611_p3 <= 
        select_ln52_17_fu_1603_p3 when (icmp_ln51_17_fu_1563_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_18_fu_1667_p3 <= 
        select_ln52_18_fu_1659_p3 when (icmp_ln51_18_fu_1619_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_19_fu_1723_p3 <= 
        select_ln52_19_fu_1715_p3 when (icmp_ln51_19_fu_1675_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_1_fu_715_p3 <= 
        select_ln52_1_fu_707_p3 when (icmp_ln51_1_fu_667_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_20_fu_1779_p3 <= 
        select_ln52_20_fu_1771_p3 when (icmp_ln51_20_fu_1731_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_21_fu_1835_p3 <= 
        select_ln52_21_fu_1827_p3 when (icmp_ln51_21_fu_1787_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_22_fu_1891_p3 <= 
        select_ln52_22_fu_1883_p3 when (icmp_ln51_22_fu_1843_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_23_fu_1947_p3 <= 
        select_ln52_23_fu_1939_p3 when (icmp_ln51_23_fu_1899_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_24_fu_2003_p3 <= 
        select_ln52_24_fu_1995_p3 when (icmp_ln51_24_fu_1955_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_25_fu_2059_p3 <= 
        select_ln52_25_fu_2051_p3 when (icmp_ln51_25_fu_2011_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_26_fu_2115_p3 <= 
        select_ln52_26_fu_2107_p3 when (icmp_ln51_26_fu_2067_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_27_fu_2171_p3 <= 
        select_ln52_27_fu_2163_p3 when (icmp_ln51_27_fu_2123_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_28_fu_2227_p3 <= 
        select_ln52_28_fu_2219_p3 when (icmp_ln51_28_fu_2179_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_29_fu_2283_p3 <= 
        select_ln52_29_fu_2275_p3 when (icmp_ln51_29_fu_2235_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_2_fu_771_p3 <= 
        select_ln52_2_fu_763_p3 when (icmp_ln51_2_fu_723_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_30_fu_2339_p3 <= 
        select_ln52_30_fu_2331_p3 when (icmp_ln51_30_fu_2291_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_31_fu_2395_p3 <= 
        select_ln52_31_fu_2387_p3 when (icmp_ln51_31_fu_2347_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_3_fu_827_p3 <= 
        select_ln52_3_fu_819_p3 when (icmp_ln51_3_fu_779_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_4_fu_883_p3 <= 
        select_ln52_4_fu_875_p3 when (icmp_ln51_4_fu_835_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_5_fu_939_p3 <= 
        select_ln52_5_fu_931_p3 when (icmp_ln51_5_fu_891_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_6_fu_995_p3 <= 
        select_ln52_6_fu_987_p3 when (icmp_ln51_6_fu_947_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_7_fu_1051_p3 <= 
        select_ln52_7_fu_1043_p3 when (icmp_ln51_7_fu_1003_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_8_fu_1107_p3 <= 
        select_ln52_8_fu_1099_p3 when (icmp_ln51_8_fu_1059_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_9_fu_1163_p3 <= 
        select_ln52_9_fu_1155_p3 when (icmp_ln51_9_fu_1115_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln51_fu_659_p3 <= 
        select_ln52_fu_651_p3 when (icmp_ln51_fu_617_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln52_10_fu_1211_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_10_fu_1205_p2(0) = '1') else 
        shl_ln52_s_fu_1187_p3;
    select_ln52_11_fu_1267_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_11_fu_1261_p2(0) = '1') else 
        shl_ln52_10_fu_1243_p3;
    select_ln52_12_fu_1323_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_12_fu_1317_p2(0) = '1') else 
        shl_ln52_11_fu_1299_p3;
    select_ln52_13_fu_1379_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_13_fu_1373_p2(0) = '1') else 
        shl_ln52_12_fu_1355_p3;
    select_ln52_14_fu_1435_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_14_fu_1429_p2(0) = '1') else 
        shl_ln52_13_fu_1411_p3;
    select_ln52_15_fu_1491_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_15_fu_1485_p2(0) = '1') else 
        shl_ln52_14_fu_1467_p3;
    select_ln52_16_fu_1547_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_16_fu_1541_p2(0) = '1') else 
        shl_ln52_15_fu_1523_p3;
    select_ln52_17_fu_1603_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_17_fu_1597_p2(0) = '1') else 
        shl_ln52_16_fu_1579_p3;
    select_ln52_18_fu_1659_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_18_fu_1653_p2(0) = '1') else 
        shl_ln52_17_fu_1635_p3;
    select_ln52_19_fu_1715_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_19_fu_1709_p2(0) = '1') else 
        shl_ln52_18_fu_1691_p3;
    select_ln52_1_fu_707_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_1_fu_701_p2(0) = '1') else 
        shl_ln52_1_fu_683_p3;
    select_ln52_20_fu_1771_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_20_fu_1765_p2(0) = '1') else 
        shl_ln52_19_fu_1747_p3;
    select_ln52_21_fu_1827_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_21_fu_1821_p2(0) = '1') else 
        shl_ln52_20_fu_1803_p3;
    select_ln52_22_fu_1883_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_22_fu_1877_p2(0) = '1') else 
        shl_ln52_21_fu_1859_p3;
    select_ln52_23_fu_1939_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_23_fu_1933_p2(0) = '1') else 
        shl_ln52_22_fu_1915_p3;
    select_ln52_24_fu_1995_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_24_fu_1989_p2(0) = '1') else 
        shl_ln52_23_fu_1971_p3;
    select_ln52_25_fu_2051_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_25_fu_2045_p2(0) = '1') else 
        shl_ln52_24_fu_2027_p3;
    select_ln52_26_fu_2107_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_26_fu_2101_p2(0) = '1') else 
        shl_ln52_25_fu_2083_p3;
    select_ln52_27_fu_2163_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_27_fu_2157_p2(0) = '1') else 
        shl_ln52_26_fu_2139_p3;
    select_ln52_28_fu_2219_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_28_fu_2213_p2(0) = '1') else 
        shl_ln52_27_fu_2195_p3;
    select_ln52_29_fu_2275_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_29_fu_2269_p2(0) = '1') else 
        shl_ln52_28_fu_2251_p3;
    select_ln52_2_fu_763_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_2_fu_757_p2(0) = '1') else 
        shl_ln52_2_fu_739_p3;
    select_ln52_30_fu_2331_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_30_fu_2325_p2(0) = '1') else 
        shl_ln52_29_fu_2307_p3;
    select_ln52_31_fu_2387_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_31_fu_2381_p2(0) = '1') else 
        shl_ln52_30_fu_2363_p3;
    select_ln52_3_fu_819_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_3_fu_813_p2(0) = '1') else 
        shl_ln52_3_fu_795_p3;
    select_ln52_4_fu_875_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_4_fu_869_p2(0) = '1') else 
        shl_ln52_4_fu_851_p3;
    select_ln52_5_fu_931_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_5_fu_925_p2(0) = '1') else 
        shl_ln52_5_fu_907_p3;
    select_ln52_6_fu_987_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_6_fu_981_p2(0) = '1') else 
        shl_ln52_6_fu_963_p3;
    select_ln52_7_fu_1043_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_7_fu_1037_p2(0) = '1') else 
        shl_ln52_7_fu_1019_p3;
    select_ln52_8_fu_1099_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_8_fu_1093_p2(0) = '1') else 
        shl_ln52_8_fu_1075_p3;
    select_ln52_9_fu_1155_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_9_fu_1149_p2(0) = '1') else 
        shl_ln52_9_fu_1131_p3;
    select_ln52_fu_651_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln52_fu_645_p2(0) = '1') else 
        shl_ln_fu_627_p3;
    shl_ln52_10_fu_1243_p3 <= (tmp_67_fu_1233_p4 & ap_const_lv5_0);
    shl_ln52_11_fu_1299_p3 <= (tmp_68_fu_1289_p4 & ap_const_lv5_0);
    shl_ln52_12_fu_1355_p3 <= (tmp_69_fu_1345_p4 & ap_const_lv5_0);
    shl_ln52_13_fu_1411_p3 <= (tmp_70_fu_1401_p4 & ap_const_lv5_0);
    shl_ln52_14_fu_1467_p3 <= (tmp_71_fu_1457_p4 & ap_const_lv5_0);
    shl_ln52_15_fu_1523_p3 <= (tmp_72_fu_1513_p4 & ap_const_lv5_0);
    shl_ln52_16_fu_1579_p3 <= (tmp_73_fu_1569_p4 & ap_const_lv5_0);
    shl_ln52_17_fu_1635_p3 <= (tmp_74_fu_1625_p4 & ap_const_lv5_0);
    shl_ln52_18_fu_1691_p3 <= (tmp_75_fu_1681_p4 & ap_const_lv5_0);
    shl_ln52_19_fu_1747_p3 <= (tmp_76_fu_1737_p4 & ap_const_lv5_0);
    shl_ln52_1_fu_683_p3 <= (tmp_26_fu_673_p4 & ap_const_lv5_0);
    shl_ln52_20_fu_1803_p3 <= (tmp_77_fu_1793_p4 & ap_const_lv5_0);
    shl_ln52_21_fu_1859_p3 <= (tmp_78_fu_1849_p4 & ap_const_lv5_0);
    shl_ln52_22_fu_1915_p3 <= (tmp_79_fu_1905_p4 & ap_const_lv5_0);
    shl_ln52_23_fu_1971_p3 <= (tmp_80_fu_1961_p4 & ap_const_lv5_0);
    shl_ln52_24_fu_2027_p3 <= (tmp_81_fu_2017_p4 & ap_const_lv5_0);
    shl_ln52_25_fu_2083_p3 <= (tmp_82_fu_2073_p4 & ap_const_lv5_0);
    shl_ln52_26_fu_2139_p3 <= (tmp_83_fu_2129_p4 & ap_const_lv5_0);
    shl_ln52_27_fu_2195_p3 <= (tmp_84_fu_2185_p4 & ap_const_lv5_0);
    shl_ln52_28_fu_2251_p3 <= (tmp_85_fu_2241_p4 & ap_const_lv5_0);
    shl_ln52_29_fu_2307_p3 <= (tmp_86_fu_2297_p4 & ap_const_lv5_0);
    shl_ln52_2_fu_739_p3 <= (tmp_28_fu_729_p4 & ap_const_lv5_0);
    shl_ln52_30_fu_2363_p3 <= (tmp_87_fu_2353_p4 & ap_const_lv5_0);
    shl_ln52_3_fu_795_p3 <= (tmp_59_fu_785_p4 & ap_const_lv5_0);
    shl_ln52_4_fu_851_p3 <= (tmp_60_fu_841_p4 & ap_const_lv5_0);
    shl_ln52_5_fu_907_p3 <= (tmp_61_fu_897_p4 & ap_const_lv5_0);
    shl_ln52_6_fu_963_p3 <= (tmp_62_fu_953_p4 & ap_const_lv5_0);
    shl_ln52_7_fu_1019_p3 <= (tmp_63_fu_1009_p4 & ap_const_lv5_0);
    shl_ln52_8_fu_1075_p3 <= (tmp_64_fu_1065_p4 & ap_const_lv5_0);
    shl_ln52_9_fu_1131_p3 <= (tmp_65_fu_1121_p4 & ap_const_lv5_0);
    shl_ln52_s_fu_1187_p3 <= (tmp_66_fu_1177_p4 & ap_const_lv5_0);
    shl_ln_fu_627_p3 <= (trunc_ln52_fu_623_p1 & ap_const_lv5_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_467_p4 <= layer3_out_dout(255 downto 240);
    tmp_11_fu_477_p4 <= layer3_out_dout(271 downto 256);
    tmp_12_fu_487_p4 <= layer3_out_dout(287 downto 272);
    tmp_13_fu_497_p4 <= layer3_out_dout(303 downto 288);
    tmp_14_fu_507_p4 <= layer3_out_dout(319 downto 304);
    tmp_15_fu_517_p4 <= layer3_out_dout(335 downto 320);
    tmp_16_fu_527_p4 <= layer3_out_dout(351 downto 336);
    tmp_17_fu_537_p4 <= layer3_out_dout(367 downto 352);
    tmp_18_fu_547_p4 <= layer3_out_dout(383 downto 368);
    tmp_19_fu_557_p4 <= layer3_out_dout(399 downto 384);
    tmp_1_fu_377_p4 <= layer3_out_dout(111 downto 96);
    tmp_20_fu_567_p4 <= layer3_out_dout(415 downto 400);
    tmp_21_fu_577_p4 <= layer3_out_dout(431 downto 416);
    tmp_22_fu_587_p4 <= layer3_out_dout(447 downto 432);
    tmp_23_fu_597_p4 <= layer3_out_dout(463 downto 448);
    tmp_24_fu_607_p4 <= layer3_out_dout(479 downto 464);
    tmp_25_fu_635_p4 <= layer3_out_dout(15 downto 10);
    tmp_26_fu_673_p4 <= layer3_out_dout(25 downto 16);
    tmp_27_fu_691_p4 <= layer3_out_dout(31 downto 26);
    tmp_28_fu_729_p4 <= layer3_out_dout(41 downto 32);
    tmp_29_fu_747_p4 <= layer3_out_dout(47 downto 42);
    tmp_2_fu_387_p4 <= layer3_out_dout(127 downto 112);
    tmp_30_fu_803_p4 <= layer3_out_dout(63 downto 58);
    tmp_31_fu_859_p4 <= layer3_out_dout(79 downto 74);
    tmp_32_fu_915_p4 <= layer3_out_dout(95 downto 90);
    tmp_33_fu_971_p4 <= layer3_out_dout(111 downto 106);
    tmp_34_fu_1027_p4 <= layer3_out_dout(127 downto 122);
    tmp_35_fu_1083_p4 <= layer3_out_dout(143 downto 138);
    tmp_36_fu_1139_p4 <= layer3_out_dout(159 downto 154);
    tmp_37_fu_1195_p4 <= layer3_out_dout(175 downto 170);
    tmp_38_fu_1251_p4 <= layer3_out_dout(191 downto 186);
    tmp_39_fu_1307_p4 <= layer3_out_dout(207 downto 202);
    tmp_3_fu_397_p4 <= layer3_out_dout(143 downto 128);
    tmp_40_fu_1363_p4 <= layer3_out_dout(223 downto 218);
    tmp_41_fu_1419_p4 <= layer3_out_dout(239 downto 234);
    tmp_42_fu_1475_p4 <= layer3_out_dout(255 downto 250);
    tmp_43_fu_1531_p4 <= layer3_out_dout(271 downto 266);
    tmp_44_fu_1587_p4 <= layer3_out_dout(287 downto 282);
    tmp_45_fu_1643_p4 <= layer3_out_dout(303 downto 298);
    tmp_46_fu_1699_p4 <= layer3_out_dout(319 downto 314);
    tmp_47_fu_1755_p4 <= layer3_out_dout(335 downto 330);
    tmp_48_fu_1811_p4 <= layer3_out_dout(351 downto 346);
    tmp_49_fu_1867_p4 <= layer3_out_dout(367 downto 362);
    tmp_4_fu_407_p4 <= layer3_out_dout(159 downto 144);
    tmp_50_fu_1923_p4 <= layer3_out_dout(383 downto 378);
    tmp_51_fu_1979_p4 <= layer3_out_dout(399 downto 394);
    tmp_52_fu_2035_p4 <= layer3_out_dout(415 downto 410);
    tmp_53_fu_2091_p4 <= layer3_out_dout(431 downto 426);
    tmp_54_fu_2147_p4 <= layer3_out_dout(447 downto 442);
    tmp_55_fu_2203_p4 <= layer3_out_dout(463 downto 458);
    tmp_56_fu_2259_p4 <= layer3_out_dout(479 downto 474);
    tmp_57_fu_2315_p4 <= layer3_out_dout(495 downto 490);
    tmp_58_fu_2371_p4 <= layer3_out_dout(511 downto 506);
    tmp_59_fu_785_p4 <= layer3_out_dout(57 downto 48);
    tmp_5_fu_417_p4 <= layer3_out_dout(175 downto 160);
    tmp_60_fu_841_p4 <= layer3_out_dout(73 downto 64);
    tmp_61_fu_897_p4 <= layer3_out_dout(89 downto 80);
    tmp_62_fu_953_p4 <= layer3_out_dout(105 downto 96);
    tmp_63_fu_1009_p4 <= layer3_out_dout(121 downto 112);
    tmp_64_fu_1065_p4 <= layer3_out_dout(137 downto 128);
    tmp_65_fu_1121_p4 <= layer3_out_dout(153 downto 144);
    tmp_66_fu_1177_p4 <= layer3_out_dout(169 downto 160);
    tmp_67_fu_1233_p4 <= layer3_out_dout(185 downto 176);
    tmp_68_fu_1289_p4 <= layer3_out_dout(201 downto 192);
    tmp_69_fu_1345_p4 <= layer3_out_dout(217 downto 208);
    tmp_6_fu_427_p4 <= layer3_out_dout(191 downto 176);
    tmp_70_fu_1401_p4 <= layer3_out_dout(233 downto 224);
    tmp_71_fu_1457_p4 <= layer3_out_dout(249 downto 240);
    tmp_72_fu_1513_p4 <= layer3_out_dout(265 downto 256);
    tmp_73_fu_1569_p4 <= layer3_out_dout(281 downto 272);
    tmp_74_fu_1625_p4 <= layer3_out_dout(297 downto 288);
    tmp_75_fu_1681_p4 <= layer3_out_dout(313 downto 304);
    tmp_76_fu_1737_p4 <= layer3_out_dout(329 downto 320);
    tmp_77_fu_1793_p4 <= layer3_out_dout(345 downto 336);
    tmp_78_fu_1849_p4 <= layer3_out_dout(361 downto 352);
    tmp_79_fu_1905_p4 <= layer3_out_dout(377 downto 368);
    tmp_7_fu_437_p4 <= layer3_out_dout(207 downto 192);
    tmp_80_fu_1961_p4 <= layer3_out_dout(393 downto 384);
    tmp_81_fu_2017_p4 <= layer3_out_dout(409 downto 400);
    tmp_82_fu_2073_p4 <= layer3_out_dout(425 downto 416);
    tmp_83_fu_2129_p4 <= layer3_out_dout(441 downto 432);
    tmp_84_fu_2185_p4 <= layer3_out_dout(457 downto 448);
    tmp_85_fu_2241_p4 <= layer3_out_dout(473 downto 464);
    tmp_86_fu_2297_p4 <= layer3_out_dout(489 downto 480);
    tmp_87_fu_2353_p4 <= layer3_out_dout(505 downto 496);
    tmp_8_fu_447_p4 <= layer3_out_dout(223 downto 208);
    tmp_9_fu_457_p4 <= layer3_out_dout(239 downto 224);
    tmp_fu_357_p4 <= layer3_out_dout(79 downto 64);
    tmp_s_fu_367_p4 <= layer3_out_dout(95 downto 80);
    trunc_ln44_1_fu_317_p4 <= layer3_out_dout(511 downto 496);
    trunc_ln44_s_fu_307_p4 <= layer3_out_dout(495 downto 480);
    trunc_ln52_fu_623_p1 <= layer3_out_dout(10 - 1 downto 0);
end behav;
