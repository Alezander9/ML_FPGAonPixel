// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_normalize_array_ap_fixed_32u_array_ap_fixed_15_5_5_3_0_32u_config13_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer2_out_dout,
        layer2_out_num_data_valid,
        layer2_out_fifo_cap,
        layer2_out_empty_n,
        layer2_out_read,
        layer13_out_din,
        layer13_out_num_data_valid,
        layer13_out_fifo_cap,
        layer13_out_full_n,
        layer13_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [511:0] layer2_out_dout;
input  [1:0] layer2_out_num_data_valid;
input  [1:0] layer2_out_fifo_cap;
input   layer2_out_empty_n;
output   layer2_out_read;
output  [479:0] layer13_out_din;
input  [1:0] layer13_out_num_data_valid;
input  [1:0] layer13_out_fifo_cap;
input   layer13_out_full_n;
output   layer13_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer2_out_read;
reg layer13_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer2_out_blk_n;
reg    layer13_out_blk_n;
reg    ap_block_state1;
wire   [14:0] trunc_ln85_fu_249_p1;
wire   [23:0] y_fu_253_p3;
wire   [23:0] add_ln42_fu_261_p2;
wire   [14:0] tmp_s_fu_277_p4;
wire   [23:0] y_1_fu_287_p3;
wire   [23:0] add_ln42_49_fu_295_p2;
wire   [14:0] tmp_104_fu_311_p4;
wire   [23:0] y_2_fu_321_p3;
wire   [23:0] add_ln42_50_fu_329_p2;
wire   [14:0] tmp_105_fu_345_p4;
wire   [23:0] y_3_fu_355_p3;
wire   [23:0] add_ln42_51_fu_363_p2;
wire   [14:0] tmp_106_fu_379_p4;
wire   [23:0] y_4_fu_389_p3;
wire   [23:0] add_ln42_52_fu_397_p2;
wire   [14:0] tmp_107_fu_413_p4;
wire   [23:0] y_5_fu_423_p3;
wire   [23:0] add_ln42_53_fu_431_p2;
wire   [15:0] tmp_108_fu_447_p4;
wire   [23:0] y_6_fu_457_p3;
wire   [23:0] add_ln42_54_fu_465_p2;
wire   [15:0] tmp_109_fu_481_p4;
wire   [23:0] y_7_fu_491_p3;
wire   [23:0] add_ln42_55_fu_499_p2;
wire   [14:0] tmp_110_fu_515_p4;
wire   [23:0] y_8_fu_525_p3;
wire   [23:0] add_ln42_56_fu_533_p2;
wire   [15:0] tmp_111_fu_549_p4;
wire   [23:0] y_9_fu_559_p3;
wire   [23:0] add_ln42_57_fu_567_p2;
wire   [14:0] tmp_112_fu_583_p4;
wire   [23:0] y_10_fu_593_p3;
wire   [23:0] add_ln42_58_fu_601_p2;
wire   [15:0] tmp_113_fu_617_p4;
wire   [23:0] y_11_fu_627_p3;
wire   [23:0] add_ln42_59_fu_635_p2;
wire   [14:0] tmp_114_fu_651_p4;
wire   [23:0] y_12_fu_661_p3;
wire   [23:0] add_ln42_60_fu_669_p2;
wire   [14:0] tmp_115_fu_685_p4;
wire   [23:0] y_13_fu_695_p3;
wire   [23:0] add_ln42_61_fu_703_p2;
wire   [14:0] tmp_116_fu_719_p4;
wire   [23:0] y_14_fu_729_p3;
wire   [23:0] add_ln42_62_fu_737_p2;
wire   [14:0] tmp_117_fu_753_p4;
wire   [23:0] y_15_fu_763_p3;
wire   [23:0] add_ln42_63_fu_771_p2;
wire   [14:0] tmp_118_fu_787_p4;
wire   [23:0] y_16_fu_797_p3;
wire   [23:0] add_ln42_64_fu_805_p2;
wire   [14:0] tmp_119_fu_821_p4;
wire   [23:0] y_17_fu_831_p3;
wire   [23:0] add_ln42_65_fu_839_p2;
wire   [14:0] tmp_120_fu_855_p4;
wire   [23:0] y_18_fu_865_p3;
wire   [23:0] add_ln42_66_fu_873_p2;
wire   [14:0] tmp_121_fu_889_p4;
wire   [23:0] y_19_fu_899_p3;
wire   [23:0] add_ln42_67_fu_907_p2;
wire   [14:0] tmp_122_fu_923_p4;
wire   [23:0] y_20_fu_933_p3;
wire   [23:0] add_ln42_68_fu_941_p2;
wire   [14:0] tmp_123_fu_957_p4;
wire   [23:0] y_21_fu_967_p3;
wire   [23:0] add_ln42_69_fu_975_p2;
wire   [14:0] tmp_124_fu_991_p4;
wire   [23:0] y_22_fu_1001_p3;
wire   [23:0] add_ln42_70_fu_1009_p2;
wire   [14:0] tmp_125_fu_1025_p4;
wire   [23:0] y_23_fu_1035_p3;
wire   [23:0] add_ln42_71_fu_1043_p2;
wire   [14:0] tmp_126_fu_1059_p4;
wire   [23:0] y_24_fu_1069_p3;
wire   [23:0] add_ln42_72_fu_1077_p2;
wire   [14:0] tmp_127_fu_1093_p4;
wire   [23:0] y_25_fu_1103_p3;
wire   [23:0] add_ln42_73_fu_1111_p2;
wire   [14:0] tmp_128_fu_1127_p4;
wire   [23:0] y_26_fu_1137_p3;
wire   [23:0] add_ln42_74_fu_1145_p2;
wire   [14:0] tmp_129_fu_1161_p4;
wire   [23:0] y_27_fu_1171_p3;
wire   [23:0] add_ln42_75_fu_1179_p2;
wire   [14:0] tmp_130_fu_1195_p4;
wire   [23:0] y_28_fu_1205_p3;
wire   [23:0] add_ln42_76_fu_1213_p2;
wire   [14:0] tmp_131_fu_1229_p4;
wire   [23:0] y_29_fu_1239_p3;
wire   [23:0] add_ln42_77_fu_1247_p2;
wire   [15:0] tmp_132_fu_1263_p4;
wire   [22:0] y_30_fu_1273_p3;
wire  signed [23:0] sext_ln85_fu_1281_p1;
wire   [23:0] add_ln42_78_fu_1285_p2;
wire   [23:0] trunc_ln85_2_fu_1301_p4;
wire   [23:0] add_ln42_79_fu_1311_p2;
wire   [14:0] trunc_ln41_72_fu_1317_p4;
wire   [14:0] trunc_ln41_71_fu_1291_p4;
wire   [14:0] trunc_ln41_70_fu_1253_p4;
wire   [14:0] trunc_ln41_69_fu_1219_p4;
wire   [14:0] trunc_ln41_68_fu_1185_p4;
wire   [14:0] trunc_ln41_67_fu_1151_p4;
wire   [14:0] trunc_ln41_66_fu_1117_p4;
wire   [14:0] trunc_ln41_65_fu_1083_p4;
wire   [14:0] trunc_ln41_64_fu_1049_p4;
wire   [14:0] trunc_ln41_63_fu_1015_p4;
wire   [14:0] trunc_ln41_62_fu_981_p4;
wire   [14:0] trunc_ln41_61_fu_947_p4;
wire   [14:0] trunc_ln41_60_fu_913_p4;
wire   [14:0] trunc_ln41_59_fu_879_p4;
wire   [14:0] trunc_ln41_58_fu_845_p4;
wire   [14:0] trunc_ln41_57_fu_811_p4;
wire   [14:0] trunc_ln41_56_fu_777_p4;
wire   [14:0] trunc_ln41_55_fu_743_p4;
wire   [14:0] trunc_ln41_54_fu_709_p4;
wire   [14:0] trunc_ln41_53_fu_675_p4;
wire   [14:0] trunc_ln41_52_fu_641_p4;
wire   [14:0] trunc_ln41_51_fu_607_p4;
wire   [14:0] trunc_ln41_50_fu_573_p4;
wire   [14:0] trunc_ln41_49_fu_539_p4;
wire   [14:0] trunc_ln41_48_fu_505_p4;
wire   [14:0] trunc_ln41_47_fu_471_p4;
wire   [14:0] trunc_ln41_46_fu_437_p4;
wire   [14:0] trunc_ln41_45_fu_403_p4;
wire   [14:0] trunc_ln41_44_fu_369_p4;
wire   [14:0] trunc_ln41_43_fu_335_p4;
wire   [14:0] trunc_ln41_s_fu_301_p4;
wire   [14:0] trunc_ln_fu_267_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((real_start == 1'b0) | (layer13_out_full_n == 1'b0) | (layer2_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer13_out_full_n == 1'b0) | (layer2_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer13_out_full_n == 1'b0) | (layer2_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer13_out_full_n == 1'b0) | (layer2_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer13_out_blk_n = layer13_out_full_n;
    end else begin
        layer13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer13_out_full_n == 1'b0) | (layer2_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer13_out_write = 1'b1;
    end else begin
        layer13_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2_out_blk_n = layer2_out_empty_n;
    end else begin
        layer2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer13_out_full_n == 1'b0) | (layer2_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2_out_read = 1'b1;
    end else begin
        layer2_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln42_49_fu_295_p2 = (y_1_fu_287_p3 + 24'd33792);

assign add_ln42_50_fu_329_p2 = ($signed(y_2_fu_321_p3) + $signed(24'd16704512));

assign add_ln42_51_fu_363_p2 = ($signed(y_3_fu_355_p3) + $signed(24'd16737280));

assign add_ln42_52_fu_397_p2 = ($signed(y_4_fu_389_p3) + $signed(24'd16763904));

assign add_ln42_53_fu_431_p2 = (y_5_fu_423_p3 + 24'd299008);

assign add_ln42_54_fu_465_p2 = ($signed(y_6_fu_457_p3) + $signed(24'd16709632));

assign add_ln42_55_fu_499_p2 = ($signed(y_7_fu_491_p3) + $signed(24'd16386048));

assign add_ln42_56_fu_533_p2 = (y_8_fu_525_p3 + 24'd350208);

assign add_ln42_57_fu_567_p2 = ($signed(y_9_fu_559_p3) + $signed(24'd16585728));

assign add_ln42_58_fu_601_p2 = ($signed(y_10_fu_593_p3) + $signed(24'd16768000));

assign add_ln42_59_fu_635_p2 = (y_11_fu_627_p3 + 24'd238592);

assign add_ln42_60_fu_669_p2 = ($signed(y_12_fu_661_p3) + $signed(24'd16764928));

assign add_ln42_61_fu_703_p2 = (y_13_fu_695_p3 + 24'd48128);

assign add_ln42_62_fu_737_p2 = ($signed(y_14_fu_729_p3) + $signed(24'd16266240));

assign add_ln42_63_fu_771_p2 = (y_15_fu_763_p3 + 24'd329728);

assign add_ln42_64_fu_805_p2 = (y_16_fu_797_p3 + 24'd128000);

assign add_ln42_65_fu_839_p2 = (y_17_fu_831_p3 + 24'd105472);

assign add_ln42_66_fu_873_p2 = (y_18_fu_865_p3 + 24'd124928);

assign add_ln42_67_fu_907_p2 = ($signed(y_19_fu_899_p3) + $signed(24'd16732160));

assign add_ln42_68_fu_941_p2 = ($signed(y_20_fu_933_p3) + $signed(24'd16766976));

assign add_ln42_69_fu_975_p2 = (y_21_fu_967_p3 + 24'd46080);

assign add_ln42_70_fu_1009_p2 = ($signed(y_22_fu_1001_p3) + $signed(24'd16451584));

assign add_ln42_71_fu_1043_p2 = (y_23_fu_1035_p3 + 24'd282624);

assign add_ln42_72_fu_1077_p2 = ($signed(y_24_fu_1069_p3) + $signed(24'd16758784));

assign add_ln42_73_fu_1111_p2 = ($signed(y_25_fu_1103_p3) + $signed(24'd16776192));

assign add_ln42_74_fu_1145_p2 = (y_26_fu_1137_p3 + 24'd199680);

assign add_ln42_75_fu_1179_p2 = ($signed(y_27_fu_1171_p3) + $signed(24'd16658432));

assign add_ln42_76_fu_1213_p2 = (y_28_fu_1205_p3 + 24'd372736);

assign add_ln42_77_fu_1247_p2 = ($signed(y_29_fu_1239_p3) + $signed(24'd16724992));

assign add_ln42_78_fu_1285_p2 = ($signed(sext_ln85_fu_1281_p1) + $signed(24'd16726016));

assign add_ln42_79_fu_1311_p2 = ($signed(trunc_ln85_2_fu_1301_p4) + $signed(24'd16766976));

assign add_ln42_fu_261_p2 = ($signed(y_fu_253_p3) + $signed(24'd16772096));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer13_out_full_n == 1'b0) | (layer2_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign layer13_out_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln41_72_fu_1317_p4}, {trunc_ln41_71_fu_1291_p4}}, {trunc_ln41_70_fu_1253_p4}}, {trunc_ln41_69_fu_1219_p4}}, {trunc_ln41_68_fu_1185_p4}}, {trunc_ln41_67_fu_1151_p4}}, {trunc_ln41_66_fu_1117_p4}}, {trunc_ln41_65_fu_1083_p4}}, {trunc_ln41_64_fu_1049_p4}}, {trunc_ln41_63_fu_1015_p4}}, {trunc_ln41_62_fu_981_p4}}, {trunc_ln41_61_fu_947_p4}}, {trunc_ln41_60_fu_913_p4}}, {trunc_ln41_59_fu_879_p4}}, {trunc_ln41_58_fu_845_p4}}, {trunc_ln41_57_fu_811_p4}}, {trunc_ln41_56_fu_777_p4}}, {trunc_ln41_55_fu_743_p4}}, {trunc_ln41_54_fu_709_p4}}, {trunc_ln41_53_fu_675_p4}}, {trunc_ln41_52_fu_641_p4}}, {trunc_ln41_51_fu_607_p4}}, {trunc_ln41_50_fu_573_p4}}, {trunc_ln41_49_fu_539_p4}}, {trunc_ln41_48_fu_505_p4}}, {trunc_ln41_47_fu_471_p4}}, {trunc_ln41_46_fu_437_p4}}, {trunc_ln41_45_fu_403_p4}}, {trunc_ln41_44_fu_369_p4}}, {trunc_ln41_43_fu_335_p4}}, {trunc_ln41_s_fu_301_p4}}, {trunc_ln_fu_267_p4}};

assign sext_ln85_fu_1281_p1 = $signed(y_30_fu_1273_p3);

assign start_out = real_start;

assign tmp_104_fu_311_p4 = {{layer2_out_dout[46:32]}};

assign tmp_105_fu_345_p4 = {{layer2_out_dout[62:48]}};

assign tmp_106_fu_379_p4 = {{layer2_out_dout[78:64]}};

assign tmp_107_fu_413_p4 = {{layer2_out_dout[94:80]}};

assign tmp_108_fu_447_p4 = {{layer2_out_dout[111:96]}};

assign tmp_109_fu_481_p4 = {{layer2_out_dout[127:112]}};

assign tmp_110_fu_515_p4 = {{layer2_out_dout[142:128]}};

assign tmp_111_fu_549_p4 = {{layer2_out_dout[159:144]}};

assign tmp_112_fu_583_p4 = {{layer2_out_dout[174:160]}};

assign tmp_113_fu_617_p4 = {{layer2_out_dout[191:176]}};

assign tmp_114_fu_651_p4 = {{layer2_out_dout[206:192]}};

assign tmp_115_fu_685_p4 = {{layer2_out_dout[222:208]}};

assign tmp_116_fu_719_p4 = {{layer2_out_dout[238:224]}};

assign tmp_117_fu_753_p4 = {{layer2_out_dout[254:240]}};

assign tmp_118_fu_787_p4 = {{layer2_out_dout[270:256]}};

assign tmp_119_fu_821_p4 = {{layer2_out_dout[286:272]}};

assign tmp_120_fu_855_p4 = {{layer2_out_dout[302:288]}};

assign tmp_121_fu_889_p4 = {{layer2_out_dout[318:304]}};

assign tmp_122_fu_923_p4 = {{layer2_out_dout[334:320]}};

assign tmp_123_fu_957_p4 = {{layer2_out_dout[350:336]}};

assign tmp_124_fu_991_p4 = {{layer2_out_dout[366:352]}};

assign tmp_125_fu_1025_p4 = {{layer2_out_dout[382:368]}};

assign tmp_126_fu_1059_p4 = {{layer2_out_dout[398:384]}};

assign tmp_127_fu_1093_p4 = {{layer2_out_dout[414:400]}};

assign tmp_128_fu_1127_p4 = {{layer2_out_dout[430:416]}};

assign tmp_129_fu_1161_p4 = {{layer2_out_dout[446:432]}};

assign tmp_130_fu_1195_p4 = {{layer2_out_dout[462:448]}};

assign tmp_131_fu_1229_p4 = {{layer2_out_dout[478:464]}};

assign tmp_132_fu_1263_p4 = {{layer2_out_dout[495:480]}};

assign tmp_s_fu_277_p4 = {{layer2_out_dout[30:16]}};

assign trunc_ln41_43_fu_335_p4 = {{add_ln42_50_fu_329_p2[23:9]}};

assign trunc_ln41_44_fu_369_p4 = {{add_ln42_51_fu_363_p2[23:9]}};

assign trunc_ln41_45_fu_403_p4 = {{add_ln42_52_fu_397_p2[23:9]}};

assign trunc_ln41_46_fu_437_p4 = {{add_ln42_53_fu_431_p2[23:9]}};

assign trunc_ln41_47_fu_471_p4 = {{add_ln42_54_fu_465_p2[23:9]}};

assign trunc_ln41_48_fu_505_p4 = {{add_ln42_55_fu_499_p2[23:9]}};

assign trunc_ln41_49_fu_539_p4 = {{add_ln42_56_fu_533_p2[23:9]}};

assign trunc_ln41_50_fu_573_p4 = {{add_ln42_57_fu_567_p2[23:9]}};

assign trunc_ln41_51_fu_607_p4 = {{add_ln42_58_fu_601_p2[23:9]}};

assign trunc_ln41_52_fu_641_p4 = {{add_ln42_59_fu_635_p2[23:9]}};

assign trunc_ln41_53_fu_675_p4 = {{add_ln42_60_fu_669_p2[23:9]}};

assign trunc_ln41_54_fu_709_p4 = {{add_ln42_61_fu_703_p2[23:9]}};

assign trunc_ln41_55_fu_743_p4 = {{add_ln42_62_fu_737_p2[23:9]}};

assign trunc_ln41_56_fu_777_p4 = {{add_ln42_63_fu_771_p2[23:9]}};

assign trunc_ln41_57_fu_811_p4 = {{add_ln42_64_fu_805_p2[23:9]}};

assign trunc_ln41_58_fu_845_p4 = {{add_ln42_65_fu_839_p2[23:9]}};

assign trunc_ln41_59_fu_879_p4 = {{add_ln42_66_fu_873_p2[23:9]}};

assign trunc_ln41_60_fu_913_p4 = {{add_ln42_67_fu_907_p2[23:9]}};

assign trunc_ln41_61_fu_947_p4 = {{add_ln42_68_fu_941_p2[23:9]}};

assign trunc_ln41_62_fu_981_p4 = {{add_ln42_69_fu_975_p2[23:9]}};

assign trunc_ln41_63_fu_1015_p4 = {{add_ln42_70_fu_1009_p2[23:9]}};

assign trunc_ln41_64_fu_1049_p4 = {{add_ln42_71_fu_1043_p2[23:9]}};

assign trunc_ln41_65_fu_1083_p4 = {{add_ln42_72_fu_1077_p2[23:9]}};

assign trunc_ln41_66_fu_1117_p4 = {{add_ln42_73_fu_1111_p2[23:9]}};

assign trunc_ln41_67_fu_1151_p4 = {{add_ln42_74_fu_1145_p2[23:9]}};

assign trunc_ln41_68_fu_1185_p4 = {{add_ln42_75_fu_1179_p2[23:9]}};

assign trunc_ln41_69_fu_1219_p4 = {{add_ln42_76_fu_1213_p2[23:9]}};

assign trunc_ln41_70_fu_1253_p4 = {{add_ln42_77_fu_1247_p2[23:9]}};

assign trunc_ln41_71_fu_1291_p4 = {{add_ln42_78_fu_1285_p2[23:9]}};

assign trunc_ln41_72_fu_1317_p4 = {{add_ln42_79_fu_1311_p2[23:9]}};

assign trunc_ln41_s_fu_301_p4 = {{add_ln42_49_fu_295_p2[23:9]}};

assign trunc_ln85_2_fu_1301_p4 = {{layer2_out_dout[510:487]}};

assign trunc_ln85_fu_249_p1 = layer2_out_dout[14:0];

assign trunc_ln_fu_267_p4 = {{add_ln42_fu_261_p2[23:9]}};

assign y_10_fu_593_p3 = {{tmp_112_fu_583_p4}, {9'd0}};

assign y_11_fu_627_p3 = {{tmp_113_fu_617_p4}, {8'd0}};

assign y_12_fu_661_p3 = {{tmp_114_fu_651_p4}, {9'd0}};

assign y_13_fu_695_p3 = {{tmp_115_fu_685_p4}, {9'd0}};

assign y_14_fu_729_p3 = {{tmp_116_fu_719_p4}, {9'd0}};

assign y_15_fu_763_p3 = {{tmp_117_fu_753_p4}, {9'd0}};

assign y_16_fu_797_p3 = {{tmp_118_fu_787_p4}, {9'd0}};

assign y_17_fu_831_p3 = {{tmp_119_fu_821_p4}, {9'd0}};

assign y_18_fu_865_p3 = {{tmp_120_fu_855_p4}, {9'd0}};

assign y_19_fu_899_p3 = {{tmp_121_fu_889_p4}, {9'd0}};

assign y_1_fu_287_p3 = {{tmp_s_fu_277_p4}, {9'd0}};

assign y_20_fu_933_p3 = {{tmp_122_fu_923_p4}, {9'd0}};

assign y_21_fu_967_p3 = {{tmp_123_fu_957_p4}, {9'd0}};

assign y_22_fu_1001_p3 = {{tmp_124_fu_991_p4}, {9'd0}};

assign y_23_fu_1035_p3 = {{tmp_125_fu_1025_p4}, {9'd0}};

assign y_24_fu_1069_p3 = {{tmp_126_fu_1059_p4}, {9'd0}};

assign y_25_fu_1103_p3 = {{tmp_127_fu_1093_p4}, {9'd0}};

assign y_26_fu_1137_p3 = {{tmp_128_fu_1127_p4}, {9'd0}};

assign y_27_fu_1171_p3 = {{tmp_129_fu_1161_p4}, {9'd0}};

assign y_28_fu_1205_p3 = {{tmp_130_fu_1195_p4}, {9'd0}};

assign y_29_fu_1239_p3 = {{tmp_131_fu_1229_p4}, {9'd0}};

assign y_2_fu_321_p3 = {{tmp_104_fu_311_p4}, {9'd0}};

assign y_30_fu_1273_p3 = {{tmp_132_fu_1263_p4}, {7'd0}};

assign y_3_fu_355_p3 = {{tmp_105_fu_345_p4}, {9'd0}};

assign y_4_fu_389_p3 = {{tmp_106_fu_379_p4}, {9'd0}};

assign y_5_fu_423_p3 = {{tmp_107_fu_413_p4}, {9'd0}};

assign y_6_fu_457_p3 = {{tmp_108_fu_447_p4}, {8'd0}};

assign y_7_fu_491_p3 = {{tmp_109_fu_481_p4}, {8'd0}};

assign y_8_fu_525_p3 = {{tmp_110_fu_515_p4}, {9'd0}};

assign y_9_fu_559_p3 = {{tmp_111_fu_549_p4}, {8'd0}};

assign y_fu_253_p3 = {{trunc_ln85_fu_249_p1}, {9'd0}};

endmodule //myproject_normalize_array_ap_fixed_32u_array_ap_fixed_15_5_5_3_0_32u_config13_s
