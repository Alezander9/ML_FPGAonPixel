// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_array_ap_ufixed_12u_array_ap_fixed_16_6_5_3_0_1u_config10_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer9_out_dout,
        layer9_out_num_data_valid,
        layer9_out_fifo_cap,
        layer9_out_empty_n,
        layer9_out_read,
        layer10_out_TREADY,
        layer10_out_TDATA,
        layer10_out_TVALID
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [179:0] layer9_out_dout;
input  [1:0] layer9_out_num_data_valid;
input  [1:0] layer9_out_fifo_cap;
input   layer9_out_empty_n;
output   layer9_out_read;
input   layer10_out_TREADY;
output  [15:0] layer10_out_TDATA;
output   layer10_out_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg layer9_out_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln42_fu_501_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg   [0:0] ap_phi_mux_do_init_phi_fu_142_p6;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln42_reg_702;
reg   [0:0] icmp_ln42_reg_702_pp0_iter1_reg;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state4_io;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln42_reg_702_pp0_iter2_reg;
wire    regslice_both_layer10_out_U_apdone_blk;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state5_io;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] w10_address0;
reg    w10_ce0;
wire  signed [8:0] w10_q0;
reg    layer9_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer10_out_TDATA_blk_n;
reg   [0:0] do_init_reg_138;
reg   [3:0] in_index3_reg_154;
reg   [3:0] in_index3_reg_154_pp0_iter1_reg;
reg   [13:0] res4_reg_337;
reg   [14:0] data_4_phi_reg_351;
reg   [14:0] data_31_phi_reg_363;
reg   [14:0] data_30_phi_reg_375;
reg   [14:0] data_29_phi_reg_387;
reg   [14:0] data_28_phi_reg_399;
reg   [14:0] data_27_phi_reg_411;
reg   [14:0] data_26_phi_reg_423;
reg   [14:0] data_25_phi_reg_435;
reg   [14:0] data_24_phi_reg_447;
reg   [14:0] data_3_phi_reg_459;
reg   [14:0] data_32_phi_reg_471;
reg   [14:0] p_phi_reg_483;
wire   [3:0] in_index_fu_495_p2;
reg   [3:0] in_index_reg_697;
wire   [14:0] data_fu_507_p1;
wire  signed [13:0] x_fu_684_p2;
reg  signed [13:0] x_reg_771;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg   [3:0] ap_phi_mux_in_index3_phi_fu_158_p6;
reg   [13:0] ap_phi_mux_res4_phi_fu_341_p6;
reg   [14:0] ap_phi_mux_data_4_phi_phi_fu_355_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_4_phi_reg_351;
reg   [14:0] ap_phi_reg_pp0_iter1_data_4_phi_reg_351;
reg   [14:0] ap_phi_reg_pp0_iter2_data_4_phi_reg_351;
reg   [14:0] ap_phi_mux_data_31_phi_phi_fu_367_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_31_phi_reg_363;
reg   [14:0] ap_phi_reg_pp0_iter1_data_31_phi_reg_363;
reg   [14:0] ap_phi_reg_pp0_iter2_data_31_phi_reg_363;
reg   [14:0] ap_phi_mux_data_30_phi_phi_fu_379_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_30_phi_reg_375;
reg   [14:0] ap_phi_reg_pp0_iter1_data_30_phi_reg_375;
reg   [14:0] ap_phi_reg_pp0_iter2_data_30_phi_reg_375;
reg   [14:0] ap_phi_mux_data_29_phi_phi_fu_391_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_29_phi_reg_387;
reg   [14:0] ap_phi_reg_pp0_iter1_data_29_phi_reg_387;
reg   [14:0] ap_phi_reg_pp0_iter2_data_29_phi_reg_387;
reg   [14:0] ap_phi_mux_data_28_phi_phi_fu_403_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_28_phi_reg_399;
reg   [14:0] ap_phi_reg_pp0_iter1_data_28_phi_reg_399;
reg   [14:0] ap_phi_reg_pp0_iter2_data_28_phi_reg_399;
reg   [14:0] ap_phi_mux_data_27_phi_phi_fu_415_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_27_phi_reg_411;
reg   [14:0] ap_phi_reg_pp0_iter1_data_27_phi_reg_411;
reg   [14:0] ap_phi_reg_pp0_iter2_data_27_phi_reg_411;
reg   [14:0] ap_phi_mux_data_26_phi_phi_fu_427_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_26_phi_reg_423;
reg   [14:0] ap_phi_reg_pp0_iter1_data_26_phi_reg_423;
reg   [14:0] ap_phi_reg_pp0_iter2_data_26_phi_reg_423;
reg   [14:0] ap_phi_mux_data_25_phi_phi_fu_439_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_25_phi_reg_435;
reg   [14:0] ap_phi_reg_pp0_iter1_data_25_phi_reg_435;
reg   [14:0] ap_phi_reg_pp0_iter2_data_25_phi_reg_435;
reg   [14:0] ap_phi_mux_data_24_phi_phi_fu_451_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_24_phi_reg_447;
reg   [14:0] ap_phi_reg_pp0_iter1_data_24_phi_reg_447;
reg   [14:0] ap_phi_reg_pp0_iter2_data_24_phi_reg_447;
reg   [14:0] ap_phi_mux_data_3_phi_phi_fu_463_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_3_phi_reg_459;
reg   [14:0] ap_phi_reg_pp0_iter1_data_3_phi_reg_459;
reg   [14:0] ap_phi_reg_pp0_iter2_data_3_phi_reg_459;
reg   [14:0] ap_phi_mux_data_32_phi_phi_fu_475_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_32_phi_reg_471;
reg   [14:0] ap_phi_reg_pp0_iter1_data_32_phi_reg_471;
reg   [14:0] ap_phi_reg_pp0_iter2_data_32_phi_reg_471;
reg   [14:0] ap_phi_mux_p_phi_phi_fu_487_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_p_phi_reg_483;
reg   [14:0] ap_phi_reg_pp0_iter1_p_phi_reg_483;
reg   [14:0] ap_phi_reg_pp0_iter2_p_phi_reg_483;
wire   [63:0] zext_ln42_fu_621_p1;
reg    ap_block_pp0_stage0_01001;
wire   [14:0] a_fu_626_p14;
wire   [14:0] mul_ln73_fu_664_p0;
wire   [23:0] mul_ln73_fu_664_p2;
wire   [9:0] trunc_ln_fu_670_p4;
wire  signed [13:0] sext_ln53_fu_680_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] layer10_out_TDATA_int_regslice;
reg    layer10_out_TVALID_int_regslice;
wire    layer10_out_TREADY_int_regslice;
wire    regslice_both_layer10_out_U_vld_out;
wire   [23:0] mul_ln73_fu_664_p00;
reg    ap_condition_100;
reg    ap_condition_223;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

myproject_dense_array_ap_ufixed_12u_array_ap_fixed_16_6_5_3_0_1u_config10_s_w10_ROM_AUTeOg #(
    .DataWidth( 9 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
w10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w10_address0),
    .ce0(w10_ce0),
    .q0(w10_q0)
);

myproject_mux_12_4_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 15 ),
    .din3_WIDTH( 15 ),
    .din4_WIDTH( 15 ),
    .din5_WIDTH( 15 ),
    .din6_WIDTH( 15 ),
    .din7_WIDTH( 15 ),
    .din8_WIDTH( 15 ),
    .din9_WIDTH( 15 ),
    .din10_WIDTH( 15 ),
    .din11_WIDTH( 15 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 15 ))
mux_12_4_15_1_1_U33(
    .din0(ap_phi_mux_p_phi_phi_fu_487_p4),
    .din1(ap_phi_mux_data_24_phi_phi_fu_451_p4),
    .din2(ap_phi_mux_data_25_phi_phi_fu_439_p4),
    .din3(ap_phi_mux_data_26_phi_phi_fu_427_p4),
    .din4(ap_phi_mux_data_27_phi_phi_fu_415_p4),
    .din5(ap_phi_mux_data_28_phi_phi_fu_403_p4),
    .din6(ap_phi_mux_data_29_phi_phi_fu_391_p4),
    .din7(ap_phi_mux_data_30_phi_phi_fu_379_p4),
    .din8(ap_phi_mux_data_31_phi_phi_fu_367_p4),
    .din9(ap_phi_mux_data_4_phi_phi_fu_355_p4),
    .din10(ap_phi_mux_data_32_phi_phi_fu_475_p4),
    .din11(ap_phi_mux_data_3_phi_phi_fu_463_p4),
    .din12(in_index3_reg_154_pp0_iter1_reg),
    .dout(a_fu_626_p14)
);

myproject_mul_15ns_9s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
mul_15ns_9s_24_1_1_U34(
    .din0(mul_ln73_fu_664_p0),
    .din1(w10_q0),
    .dout(mul_ln73_fu_664_p2)
);

myproject_regslice_both #(
    .DataWidth( 16 ))
regslice_both_layer10_out_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(layer10_out_TDATA_int_regslice),
    .vld_in(layer10_out_TVALID_int_regslice),
    .ack_in(layer10_out_TREADY_int_regslice),
    .data_out(layer10_out_TDATA),
    .vld_out(regslice_both_layer10_out_U_vld_out),
    .ack_out(layer10_out_TREADY),
    .apdone_blk(regslice_both_layer10_out_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln42_reg_702_pp0_iter2_reg == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_24_phi_reg_447 <= {{layer9_out_dout[29:15]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_24_phi_reg_447 <= ap_phi_reg_pp0_iter1_data_24_phi_reg_447;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_25_phi_reg_435 <= {{layer9_out_dout[44:30]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_25_phi_reg_435 <= ap_phi_reg_pp0_iter1_data_25_phi_reg_435;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_26_phi_reg_423 <= {{layer9_out_dout[59:45]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_26_phi_reg_423 <= ap_phi_reg_pp0_iter1_data_26_phi_reg_423;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_27_phi_reg_411 <= {{layer9_out_dout[74:60]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_27_phi_reg_411 <= ap_phi_reg_pp0_iter1_data_27_phi_reg_411;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_28_phi_reg_399 <= {{layer9_out_dout[89:75]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_28_phi_reg_399 <= ap_phi_reg_pp0_iter1_data_28_phi_reg_399;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_29_phi_reg_387 <= {{layer9_out_dout[104:90]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_29_phi_reg_387 <= ap_phi_reg_pp0_iter1_data_29_phi_reg_387;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_30_phi_reg_375 <= {{layer9_out_dout[119:105]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_30_phi_reg_375 <= ap_phi_reg_pp0_iter1_data_30_phi_reg_375;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_31_phi_reg_363 <= {{layer9_out_dout[134:120]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_31_phi_reg_363 <= ap_phi_reg_pp0_iter1_data_31_phi_reg_363;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_32_phi_reg_471 <= {{layer9_out_dout[164:150]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_32_phi_reg_471 <= ap_phi_reg_pp0_iter1_data_32_phi_reg_471;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_3_phi_reg_459 <= {{layer9_out_dout[179:165]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_3_phi_reg_459 <= ap_phi_reg_pp0_iter1_data_3_phi_reg_459;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_data_4_phi_reg_351 <= {{layer9_out_dout[149:135]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_data_4_phi_reg_351 <= ap_phi_reg_pp0_iter1_data_4_phi_reg_351;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_223)) begin
        if ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_p_phi_reg_483 <= data_fu_507_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_phi_reg_483 <= ap_phi_reg_pp0_iter1_p_phi_reg_483;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_24_phi_reg_447 <= data_24_phi_reg_447;
        end else if ((1'b1 == 1'b1)) begin
            data_24_phi_reg_447 <= ap_phi_reg_pp0_iter2_data_24_phi_reg_447;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_25_phi_reg_435 <= data_25_phi_reg_435;
        end else if ((1'b1 == 1'b1)) begin
            data_25_phi_reg_435 <= ap_phi_reg_pp0_iter2_data_25_phi_reg_435;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_26_phi_reg_423 <= data_26_phi_reg_423;
        end else if ((1'b1 == 1'b1)) begin
            data_26_phi_reg_423 <= ap_phi_reg_pp0_iter2_data_26_phi_reg_423;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_27_phi_reg_411 <= data_27_phi_reg_411;
        end else if ((1'b1 == 1'b1)) begin
            data_27_phi_reg_411 <= ap_phi_reg_pp0_iter2_data_27_phi_reg_411;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_28_phi_reg_399 <= data_28_phi_reg_399;
        end else if ((1'b1 == 1'b1)) begin
            data_28_phi_reg_399 <= ap_phi_reg_pp0_iter2_data_28_phi_reg_399;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_29_phi_reg_387 <= data_29_phi_reg_387;
        end else if ((1'b1 == 1'b1)) begin
            data_29_phi_reg_387 <= ap_phi_reg_pp0_iter2_data_29_phi_reg_387;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_30_phi_reg_375 <= data_30_phi_reg_375;
        end else if ((1'b1 == 1'b1)) begin
            data_30_phi_reg_375 <= ap_phi_reg_pp0_iter2_data_30_phi_reg_375;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_31_phi_reg_363 <= data_31_phi_reg_363;
        end else if ((1'b1 == 1'b1)) begin
            data_31_phi_reg_363 <= ap_phi_reg_pp0_iter2_data_31_phi_reg_363;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_32_phi_reg_471 <= data_32_phi_reg_471;
        end else if ((1'b1 == 1'b1)) begin
            data_32_phi_reg_471 <= ap_phi_reg_pp0_iter2_data_32_phi_reg_471;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_3_phi_reg_459 <= data_3_phi_reg_459;
        end else if ((1'b1 == 1'b1)) begin
            data_3_phi_reg_459 <= ap_phi_reg_pp0_iter2_data_3_phi_reg_459;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            data_4_phi_reg_351 <= data_4_phi_reg_351;
        end else if ((1'b1 == 1'b1)) begin
            data_4_phi_reg_351 <= ap_phi_reg_pp0_iter2_data_4_phi_reg_351;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_702_pp0_iter1_reg == 1'd0))) begin
        do_init_reg_138 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_702_pp0_iter1_reg == 1'd1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_138 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_reg_702 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index3_reg_154 <= in_index_reg_697;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_reg_702 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_index3_reg_154 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((do_init_reg_138 == 1'd0)) begin
            p_phi_reg_483 <= p_phi_reg_483;
        end else if ((1'b1 == 1'b1)) begin
            p_phi_reg_483 <= ap_phi_reg_pp0_iter2_p_phi_reg_483;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln42_reg_702_pp0_iter2_reg == 1'd0))) begin
        res4_reg_337 <= x_reg_771;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln42_reg_702_pp0_iter2_reg == 1'd1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res4_reg_337 <= 14'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_data_24_phi_reg_447 <= ap_phi_reg_pp0_iter0_data_24_phi_reg_447;
        ap_phi_reg_pp0_iter1_data_25_phi_reg_435 <= ap_phi_reg_pp0_iter0_data_25_phi_reg_435;
        ap_phi_reg_pp0_iter1_data_26_phi_reg_423 <= ap_phi_reg_pp0_iter0_data_26_phi_reg_423;
        ap_phi_reg_pp0_iter1_data_27_phi_reg_411 <= ap_phi_reg_pp0_iter0_data_27_phi_reg_411;
        ap_phi_reg_pp0_iter1_data_28_phi_reg_399 <= ap_phi_reg_pp0_iter0_data_28_phi_reg_399;
        ap_phi_reg_pp0_iter1_data_29_phi_reg_387 <= ap_phi_reg_pp0_iter0_data_29_phi_reg_387;
        ap_phi_reg_pp0_iter1_data_30_phi_reg_375 <= ap_phi_reg_pp0_iter0_data_30_phi_reg_375;
        ap_phi_reg_pp0_iter1_data_31_phi_reg_363 <= ap_phi_reg_pp0_iter0_data_31_phi_reg_363;
        ap_phi_reg_pp0_iter1_data_32_phi_reg_471 <= ap_phi_reg_pp0_iter0_data_32_phi_reg_471;
        ap_phi_reg_pp0_iter1_data_3_phi_reg_459 <= ap_phi_reg_pp0_iter0_data_3_phi_reg_459;
        ap_phi_reg_pp0_iter1_data_4_phi_reg_351 <= ap_phi_reg_pp0_iter0_data_4_phi_reg_351;
        ap_phi_reg_pp0_iter1_p_phi_reg_483 <= ap_phi_reg_pp0_iter0_p_phi_reg_483;
        in_index_reg_697 <= in_index_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln42_reg_702 <= icmp_ln42_fu_501_p2;
        icmp_ln42_reg_702_pp0_iter1_reg <= icmp_ln42_reg_702;
        in_index3_reg_154_pp0_iter1_reg <= in_index3_reg_154;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln42_reg_702_pp0_iter2_reg <= icmp_ln42_reg_702_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        x_reg_771 <= x_fu_684_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln42_reg_702_pp0_iter2_reg == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_24_phi_phi_fu_451_p4 = data_24_phi_reg_447;
    end else begin
        ap_phi_mux_data_24_phi_phi_fu_451_p4 = ap_phi_reg_pp0_iter2_data_24_phi_reg_447;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_25_phi_phi_fu_439_p4 = data_25_phi_reg_435;
    end else begin
        ap_phi_mux_data_25_phi_phi_fu_439_p4 = ap_phi_reg_pp0_iter2_data_25_phi_reg_435;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_26_phi_phi_fu_427_p4 = data_26_phi_reg_423;
    end else begin
        ap_phi_mux_data_26_phi_phi_fu_427_p4 = ap_phi_reg_pp0_iter2_data_26_phi_reg_423;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_27_phi_phi_fu_415_p4 = data_27_phi_reg_411;
    end else begin
        ap_phi_mux_data_27_phi_phi_fu_415_p4 = ap_phi_reg_pp0_iter2_data_27_phi_reg_411;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_28_phi_phi_fu_403_p4 = data_28_phi_reg_399;
    end else begin
        ap_phi_mux_data_28_phi_phi_fu_403_p4 = ap_phi_reg_pp0_iter2_data_28_phi_reg_399;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_29_phi_phi_fu_391_p4 = data_29_phi_reg_387;
    end else begin
        ap_phi_mux_data_29_phi_phi_fu_391_p4 = ap_phi_reg_pp0_iter2_data_29_phi_reg_387;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_30_phi_phi_fu_379_p4 = data_30_phi_reg_375;
    end else begin
        ap_phi_mux_data_30_phi_phi_fu_379_p4 = ap_phi_reg_pp0_iter2_data_30_phi_reg_375;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_31_phi_phi_fu_367_p4 = data_31_phi_reg_363;
    end else begin
        ap_phi_mux_data_31_phi_phi_fu_367_p4 = ap_phi_reg_pp0_iter2_data_31_phi_reg_363;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_32_phi_phi_fu_475_p4 = data_32_phi_reg_471;
    end else begin
        ap_phi_mux_data_32_phi_phi_fu_475_p4 = ap_phi_reg_pp0_iter2_data_32_phi_reg_471;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_3_phi_phi_fu_463_p4 = data_3_phi_reg_459;
    end else begin
        ap_phi_mux_data_3_phi_phi_fu_463_p4 = ap_phi_reg_pp0_iter2_data_3_phi_reg_459;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_data_4_phi_phi_fu_355_p4 = data_4_phi_reg_351;
    end else begin
        ap_phi_mux_data_4_phi_phi_fu_355_p4 = ap_phi_reg_pp0_iter2_data_4_phi_reg_351;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((icmp_ln42_reg_702_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_142_p6 = 1'd1;
        end else if ((icmp_ln42_reg_702_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_142_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_142_p6 = do_init_reg_138;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_142_p6 = do_init_reg_138;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_100)) begin
        if ((icmp_ln42_reg_702 == 1'd1)) begin
            ap_phi_mux_in_index3_phi_fu_158_p6 = 4'd0;
        end else if ((icmp_ln42_reg_702 == 1'd0)) begin
            ap_phi_mux_in_index3_phi_fu_158_p6 = in_index_reg_697;
        end else begin
            ap_phi_mux_in_index3_phi_fu_158_p6 = in_index3_reg_154;
        end
    end else begin
        ap_phi_mux_in_index3_phi_fu_158_p6 = in_index3_reg_154;
    end
end

always @ (*) begin
    if ((do_init_reg_138 == 1'd0)) begin
        ap_phi_mux_p_phi_phi_fu_487_p4 = p_phi_reg_483;
    end else begin
        ap_phi_mux_p_phi_phi_fu_487_p4 = ap_phi_reg_pp0_iter2_p_phi_reg_483;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if ((icmp_ln42_reg_702_pp0_iter2_reg == 1'd1)) begin
            ap_phi_mux_res4_phi_fu_341_p6 = 14'd16;
        end else if ((icmp_ln42_reg_702_pp0_iter2_reg == 1'd0)) begin
            ap_phi_mux_res4_phi_fu_341_p6 = x_reg_771;
        end else begin
            ap_phi_mux_res4_phi_fu_341_p6 = res4_reg_337;
        end
    end else begin
        ap_phi_mux_res4_phi_fu_341_p6 = res4_reg_337;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln42_fu_501_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln42_reg_702_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_702_pp0_iter1_reg == 1'd1)))) begin
        layer10_out_TDATA_blk_n = layer10_out_TREADY_int_regslice;
    end else begin
        layer10_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_702_pp0_iter1_reg == 1'd1))) begin
        layer10_out_TVALID_int_regslice = 1'b1;
    end else begin
        layer10_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer9_out_blk_n = layer9_out_empty_n;
    end else begin
        layer9_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer9_out_read = 1'b1;
    end else begin
        layer9_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w10_ce0 = 1'b1;
    end else begin
        w10_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_layer10_out_U_apdone_blk == 1'b1) | ((icmp_ln42_reg_702_pp0_iter2_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_702_pp0_iter1_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1) & (layer9_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_layer10_out_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state5_io) | ((icmp_ln42_reg_702_pp0_iter2_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((icmp_ln42_reg_702_pp0_iter1_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1) & (layer9_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_layer10_out_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state5_io) | ((icmp_ln42_reg_702_pp0_iter2_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((icmp_ln42_reg_702_pp0_iter1_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1) & (layer9_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((ap_phi_mux_do_init_phi_fu_142_p6 == 1'd1) & (layer9_out_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((icmp_ln42_reg_702_pp0_iter1_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((icmp_ln42_reg_702_pp0_iter1_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state5_io = ((icmp_ln42_reg_702_pp0_iter2_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((regslice_both_layer10_out_U_apdone_blk == 1'b1) | ((icmp_ln42_reg_702_pp0_iter2_reg == 1'd1) & (layer10_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_100 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_223 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_24_phi_reg_447 = 'bx;

assign ap_phi_reg_pp0_iter0_data_25_phi_reg_435 = 'bx;

assign ap_phi_reg_pp0_iter0_data_26_phi_reg_423 = 'bx;

assign ap_phi_reg_pp0_iter0_data_27_phi_reg_411 = 'bx;

assign ap_phi_reg_pp0_iter0_data_28_phi_reg_399 = 'bx;

assign ap_phi_reg_pp0_iter0_data_29_phi_reg_387 = 'bx;

assign ap_phi_reg_pp0_iter0_data_30_phi_reg_375 = 'bx;

assign ap_phi_reg_pp0_iter0_data_31_phi_reg_363 = 'bx;

assign ap_phi_reg_pp0_iter0_data_32_phi_reg_471 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_phi_reg_459 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_phi_reg_351 = 'bx;

assign ap_phi_reg_pp0_iter0_p_phi_reg_483 = 'bx;

assign data_fu_507_p1 = layer9_out_dout[14:0];

assign icmp_ln42_fu_501_p2 = ((ap_phi_mux_in_index3_phi_fu_158_p6 == 4'd11) ? 1'b1 : 1'b0);

assign in_index_fu_495_p2 = (ap_phi_mux_in_index3_phi_fu_158_p6 + 4'd1);

assign layer10_out_TDATA_int_regslice = $signed(x_fu_684_p2);

assign layer10_out_TVALID = regslice_both_layer10_out_U_vld_out;

assign mul_ln73_fu_664_p0 = mul_ln73_fu_664_p00;

assign mul_ln73_fu_664_p00 = a_fu_626_p14;

assign sext_ln53_fu_680_p1 = $signed(trunc_ln_fu_670_p4);

assign trunc_ln_fu_670_p4 = {{mul_ln73_fu_664_p2[23:14]}};

assign w10_address0 = zext_ln42_fu_621_p1;

assign x_fu_684_p2 = ($signed(sext_ln53_fu_680_p1) + $signed(ap_phi_mux_res4_phi_fu_341_p6));

assign zext_ln42_fu_621_p1 = in_index3_reg_154;

endmodule //myproject_dense_array_ap_ufixed_12u_array_ap_fixed_16_6_5_3_0_1u_config10_s
