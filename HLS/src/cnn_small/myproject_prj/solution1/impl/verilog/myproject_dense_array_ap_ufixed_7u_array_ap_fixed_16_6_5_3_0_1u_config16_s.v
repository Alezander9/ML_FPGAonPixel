// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_array_ap_ufixed_7u_array_ap_fixed_16_6_5_3_0_1u_config16_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer15_out_dout,
        layer15_out_num_data_valid,
        layer15_out_fifo_cap,
        layer15_out_empty_n,
        layer15_out_read,
        layer16_out_din,
        layer16_out_num_data_valid,
        layer16_out_fifo_cap,
        layer16_out_full_n,
        layer16_out_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [69:0] layer15_out_dout;
input  [1:0] layer15_out_num_data_valid;
input  [1:0] layer15_out_fifo_cap;
input   layer15_out_empty_n;
output   layer15_out_read;
output  [15:0] layer16_out_din;
input  [1:0] layer16_out_num_data_valid;
input  [1:0] layer16_out_fifo_cap;
input   layer16_out_full_n;
output   layer16_out_write;
output   start_out;
output   start_write;

reg ap_done;
reg ap_idle;
reg layer15_out_read;
reg layer16_out_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [0:0] icmp_ln42_fu_350_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg   [0:0] ap_phi_mux_do_init_phi_fu_116_p6;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln42_reg_497;
reg   [0:0] icmp_ln42_reg_497_pp0_iter1_reg;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] w16_address0;
reg    w16_ce0;
wire  signed [9:0] w16_q0;
reg    layer15_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer16_out_blk_n;
reg   [0:0] do_init_reg_112;
reg   [2:0] in_index3_reg_128;
reg   [9:0] data_4_phi_reg_241;
reg   [9:0] data_3_phi_reg_253;
reg   [9:0] data_2_phi_reg_265;
reg   [9:0] data_1_phi_reg_277;
reg   [9:0] data_6_phi_reg_289;
reg   [9:0] data_5_phi_reg_301;
reg   [9:0] p_phi_reg_313;
reg   [14:0] res4_reg_325;
wire   [2:0] in_index_fu_344_p2;
reg   [2:0] in_index_reg_492;
reg   [12:0] trunc_ln_reg_501;
wire  signed [14:0] x_fu_474_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg   [2:0] ap_phi_mux_in_index3_phi_fu_132_p6;
reg   [9:0] ap_phi_mux_data_4_phi_phi_fu_245_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_data_4_phi_reg_241;
reg   [9:0] ap_phi_mux_data_3_phi_phi_fu_257_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_data_3_phi_reg_253;
reg   [9:0] ap_phi_mux_data_2_phi_phi_fu_269_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_data_2_phi_reg_265;
reg   [9:0] ap_phi_mux_data_1_phi_phi_fu_281_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_data_1_phi_reg_277;
reg   [9:0] ap_phi_mux_data_6_phi_phi_fu_293_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_data_6_phi_reg_289;
reg   [9:0] ap_phi_mux_data_5_phi_phi_fu_305_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_data_5_phi_reg_301;
reg   [9:0] ap_phi_mux_p_phi_phi_fu_317_p4;
wire   [9:0] data_fu_356_p1;
wire   [9:0] ap_phi_reg_pp0_iter1_p_phi_reg_313;
wire   [63:0] zext_ln42_fu_339_p1;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] a_fu_427_p9;
wire   [9:0] mul_ln73_fu_455_p1;
wire   [19:0] mul_ln73_fu_455_p2;
wire  signed [14:0] sext_ln53_fu_471_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [19:0] mul_ln73_fu_455_p10;
reg    ap_condition_100;
reg    ap_condition_170;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

myproject_dense_array_ap_ufixed_7u_array_ap_fixed_16_6_5_3_0_1u_config16_s_w16_ROM_AUTOJfO #(
    .DataWidth( 10 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
w16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w16_address0),
    .ce0(w16_ce0),
    .q0(w16_q0)
);

myproject_mux_7_3_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 10 ))
mux_7_3_10_1_1_U170(
    .din0(ap_phi_mux_p_phi_phi_fu_317_p4),
    .din1(ap_phi_mux_data_1_phi_phi_fu_281_p4),
    .din2(ap_phi_mux_data_2_phi_phi_fu_269_p4),
    .din3(ap_phi_mux_data_3_phi_phi_fu_257_p4),
    .din4(ap_phi_mux_data_4_phi_phi_fu_245_p4),
    .din5(ap_phi_mux_data_5_phi_phi_fu_305_p4),
    .din6(ap_phi_mux_data_6_phi_phi_fu_293_p4),
    .din7(in_index3_reg_128),
    .dout(a_fu_427_p9)
);

myproject_mul_10s_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10s_10ns_20_1_1_U171(
    .din0(w16_q0),
    .din1(mul_ln73_fu_455_p1),
    .dout(mul_ln73_fu_455_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= real_start;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
            data_1_phi_reg_277 <= data_1_phi_reg_277;
        end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
            data_1_phi_reg_277 <= {{layer15_out_dout[19:10]}};
        end else if ((1'b1 == 1'b1)) begin
            data_1_phi_reg_277 <= ap_phi_reg_pp0_iter1_data_1_phi_reg_277;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
            data_2_phi_reg_265 <= data_2_phi_reg_265;
        end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
            data_2_phi_reg_265 <= {{layer15_out_dout[29:20]}};
        end else if ((1'b1 == 1'b1)) begin
            data_2_phi_reg_265 <= ap_phi_reg_pp0_iter1_data_2_phi_reg_265;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
            data_3_phi_reg_253 <= data_3_phi_reg_253;
        end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
            data_3_phi_reg_253 <= {{layer15_out_dout[39:30]}};
        end else if ((1'b1 == 1'b1)) begin
            data_3_phi_reg_253 <= ap_phi_reg_pp0_iter1_data_3_phi_reg_253;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
            data_4_phi_reg_241 <= data_4_phi_reg_241;
        end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
            data_4_phi_reg_241 <= {{layer15_out_dout[49:40]}};
        end else if ((1'b1 == 1'b1)) begin
            data_4_phi_reg_241 <= ap_phi_reg_pp0_iter1_data_4_phi_reg_241;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
            data_5_phi_reg_301 <= data_5_phi_reg_301;
        end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
            data_5_phi_reg_301 <= {{layer15_out_dout[59:50]}};
        end else if ((1'b1 == 1'b1)) begin
            data_5_phi_reg_301 <= ap_phi_reg_pp0_iter1_data_5_phi_reg_301;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
            data_6_phi_reg_289 <= data_6_phi_reg_289;
        end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
            data_6_phi_reg_289 <= {{layer15_out_dout[69:60]}};
        end else if ((1'b1 == 1'b1)) begin
            data_6_phi_reg_289 <= ap_phi_reg_pp0_iter1_data_6_phi_reg_289;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd0))) begin
        do_init_reg_112 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_112 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_reg_497 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index3_reg_128 <= in_index_reg_492;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_reg_497 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_index3_reg_128 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
            p_phi_reg_313 <= p_phi_reg_313;
        end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
            p_phi_reg_313 <= data_fu_356_p1;
        end else if ((1'b1 == 1'b1)) begin
            p_phi_reg_313 <= ap_phi_reg_pp0_iter1_p_phi_reg_313;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd0))) begin
        res4_reg_325 <= x_fu_474_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res4_reg_325 <= 15'd31816;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln42_reg_497 <= icmp_ln42_fu_350_p2;
        icmp_ln42_reg_497_pp0_iter1_reg <= icmp_ln42_reg_497;
        trunc_ln_reg_501 <= {{mul_ln73_fu_455_p2[19:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_492 <= in_index_fu_344_p2;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
        ap_phi_mux_data_1_phi_phi_fu_281_p4 = data_1_phi_reg_277;
    end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
        ap_phi_mux_data_1_phi_phi_fu_281_p4 = {{layer15_out_dout[19:10]}};
    end else begin
        ap_phi_mux_data_1_phi_phi_fu_281_p4 = ap_phi_reg_pp0_iter1_data_1_phi_reg_277;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
        ap_phi_mux_data_2_phi_phi_fu_269_p4 = data_2_phi_reg_265;
    end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
        ap_phi_mux_data_2_phi_phi_fu_269_p4 = {{layer15_out_dout[29:20]}};
    end else begin
        ap_phi_mux_data_2_phi_phi_fu_269_p4 = ap_phi_reg_pp0_iter1_data_2_phi_reg_265;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
        ap_phi_mux_data_3_phi_phi_fu_257_p4 = data_3_phi_reg_253;
    end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
        ap_phi_mux_data_3_phi_phi_fu_257_p4 = {{layer15_out_dout[39:30]}};
    end else begin
        ap_phi_mux_data_3_phi_phi_fu_257_p4 = ap_phi_reg_pp0_iter1_data_3_phi_reg_253;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
        ap_phi_mux_data_4_phi_phi_fu_245_p4 = data_4_phi_reg_241;
    end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
        ap_phi_mux_data_4_phi_phi_fu_245_p4 = {{layer15_out_dout[49:40]}};
    end else begin
        ap_phi_mux_data_4_phi_phi_fu_245_p4 = ap_phi_reg_pp0_iter1_data_4_phi_reg_241;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
        ap_phi_mux_data_5_phi_phi_fu_305_p4 = data_5_phi_reg_301;
    end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
        ap_phi_mux_data_5_phi_phi_fu_305_p4 = {{layer15_out_dout[59:50]}};
    end else begin
        ap_phi_mux_data_5_phi_phi_fu_305_p4 = ap_phi_reg_pp0_iter1_data_5_phi_reg_301;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
        ap_phi_mux_data_6_phi_phi_fu_293_p4 = data_6_phi_reg_289;
    end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
        ap_phi_mux_data_6_phi_phi_fu_293_p4 = {{layer15_out_dout[69:60]}};
    end else begin
        ap_phi_mux_data_6_phi_phi_fu_293_p4 = ap_phi_reg_pp0_iter1_data_6_phi_reg_289;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((icmp_ln42_reg_497_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_116_p6 = 1'd1;
        end else if ((icmp_ln42_reg_497_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_116_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_116_p6 = do_init_reg_112;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_116_p6 = do_init_reg_112;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_100)) begin
        if ((icmp_ln42_reg_497 == 1'd1)) begin
            ap_phi_mux_in_index3_phi_fu_132_p6 = 3'd0;
        end else if ((icmp_ln42_reg_497 == 1'd0)) begin
            ap_phi_mux_in_index3_phi_fu_132_p6 = in_index_reg_492;
        end else begin
            ap_phi_mux_in_index3_phi_fu_132_p6 = in_index3_reg_128;
        end
    end else begin
        ap_phi_mux_in_index3_phi_fu_132_p6 = in_index3_reg_128;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd0)) begin
        ap_phi_mux_p_phi_phi_fu_317_p4 = p_phi_reg_313;
    end else if ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1)) begin
        ap_phi_mux_p_phi_phi_fu_317_p4 = data_fu_356_p1;
    end else begin
        ap_phi_mux_p_phi_phi_fu_317_p4 = ap_phi_reg_pp0_iter1_p_phi_reg_313;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln42_fu_350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer15_out_blk_n = layer15_out_empty_n;
    end else begin
        layer15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer15_out_read = 1'b1;
    end else begin
        layer15_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1))) begin
        layer16_out_blk_n = layer16_out_full_n;
    end else begin
        layer16_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1))) begin
        layer16_out_write = 1'b1;
    end else begin
        layer16_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w16_ce0 = 1'b1;
    end else begin
        w16_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1) & (layer16_out_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1) & (layer15_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1) & (layer16_out_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1) & (layer15_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln42_reg_497_pp0_iter1_reg == 1'd1) & (layer16_out_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1) & (layer15_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((ap_phi_mux_do_init_phi_fu_116_p6 == 1'd1) & (layer15_out_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((icmp_ln42_reg_497_pp0_iter1_reg == 1'd1) & (layer16_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_100 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_170 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = real_start;

assign ap_phi_reg_pp0_iter1_data_1_phi_reg_277 = 'bx;

assign ap_phi_reg_pp0_iter1_data_2_phi_reg_265 = 'bx;

assign ap_phi_reg_pp0_iter1_data_3_phi_reg_253 = 'bx;

assign ap_phi_reg_pp0_iter1_data_4_phi_reg_241 = 'bx;

assign ap_phi_reg_pp0_iter1_data_5_phi_reg_301 = 'bx;

assign ap_phi_reg_pp0_iter1_data_6_phi_reg_289 = 'bx;

assign ap_phi_reg_pp0_iter1_p_phi_reg_313 = 'bx;

assign ap_ready = internal_ap_ready;

assign data_fu_356_p1 = layer15_out_dout[9:0];

assign icmp_ln42_fu_350_p2 = ((ap_phi_mux_in_index3_phi_fu_132_p6 == 3'd6) ? 1'b1 : 1'b0);

assign in_index_fu_344_p2 = (ap_phi_mux_in_index3_phi_fu_132_p6 + 3'd1);

assign layer16_out_din = $signed(x_fu_474_p2);

assign mul_ln73_fu_455_p1 = mul_ln73_fu_455_p10;

assign mul_ln73_fu_455_p10 = a_fu_427_p9;

assign sext_ln53_fu_471_p1 = $signed(trunc_ln_reg_501);

assign start_out = real_start;

assign w16_address0 = zext_ln42_fu_339_p1;

assign x_fu_474_p2 = ($signed(sext_ln53_fu_471_p1) + $signed(res4_reg_325));

assign zext_ln42_fu_339_p1 = ap_phi_mux_in_index3_phi_fu_132_p6;

endmodule //myproject_dense_array_ap_ufixed_7u_array_ap_fixed_16_6_5_3_0_1u_config16_s
