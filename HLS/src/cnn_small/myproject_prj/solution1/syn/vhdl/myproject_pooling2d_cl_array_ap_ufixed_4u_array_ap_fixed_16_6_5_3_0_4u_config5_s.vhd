-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer4_out_dout : IN STD_LOGIC_VECTOR (39 downto 0);
    layer4_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
    layer4_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
    layer4_out_empty_n : IN STD_LOGIC;
    layer4_out_read : OUT STD_LOGIC;
    layer5_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    layer5_out_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    layer5_out_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    layer5_out_full_n : IN STD_LOGIC;
    layer5_out_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC );
end;


architecture behav of myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv7_68 : STD_LOGIC_VECTOR (6 downto 0) := "1101000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln55_reg_740 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_740_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln55_2_reg_762 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op121_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln109_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal sY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0 : STD_LOGIC_VECTOR (9 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0 : STD_LOGIC_VECTOR (9 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 : STD_LOGIC;
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0 : STD_LOGIC_VECTOR (9 downto 0);
    signal void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer4_out_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer5_out_blk_n : STD_LOGIC;
    signal icmp_ln109_reg_736 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln55_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_5_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_5_reg_744 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_6_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_6_reg_749 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_758 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln55_2_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_22_fu_491_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_22_reg_766 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_25_fu_551_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_25_reg_771 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_28_fu_611_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_28_reg_776 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_31_fu_671_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_31_reg_781 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_125_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln86_fu_697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_121 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln80_fu_236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln76_fu_182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln91_fu_208_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln115_fu_265_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln115_s_fu_289_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln115_8_fu_269_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln115_9_fu_279_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_fu_104 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln109_fu_146_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal select_ln91_fu_200_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln55_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_4_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_21_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_21_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_451_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_21_fu_471_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln65_22_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_22_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_23_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_23_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_24_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_24_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_23_fu_511_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_24_fu_531_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln65_25_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_25_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_26_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_26_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_27_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_27_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_26_fu_571_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_27_fu_591_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln65_28_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_28_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_29_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_29_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_30_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_30_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_29_fu_631_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln65_30_fu_651_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln65_31_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_31_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_fu_689_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_710_p8 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_216 : BOOLEAN;
    signal ap_condition_214 : BOOLEAN;
    signal ap_condition_281 : BOOLEAN;
    signal ap_condition_240 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (9 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component myproject_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_U : component myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi
    generic map (
        DataWidth => 10,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0,
        we0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0,
        d0 => trunc_ln115_fu_265_p1,
        q0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_U : component myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi
    generic map (
        DataWidth => 10,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0,
        we0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0,
        d0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0,
        q0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_U : component myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi
    generic map (
        DataWidth => 10,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0,
        we0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0,
        d0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0,
        q0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_U : component myproject_pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_void_pfYi
    generic map (
        DataWidth => 10,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0,
        we0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0,
        d0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0,
        q0 => void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0);

    flow_control_loop_pipe_U : component myproject_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => real_start,
        ap_ready => internal_ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_reg_121_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_214)) then
                if ((ap_const_boolean_1 = ap_condition_216)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_121 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_121 <= ap_phi_reg_pp0_iter0_storemerge_reg_121;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_214)) then
                if ((icmp_ln109_fu_140_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_104 <= add_ln109_fu_146_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_104 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    pX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_281)) then
                if ((icmp_ln76_fu_188_p2 = ap_const_lv1_1)) then 
                    pX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln76_fu_188_p2 = ap_const_lv1_0)) then 
                    pX_1 <= add_ln76_fu_182_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_240)) then
                if ((icmp_ln80_fu_242_p2 = ap_const_lv1_1)) then 
                    pY_1 <= ap_const_lv32_0;
                elsif ((icmp_ln80_fu_242_p2 = ap_const_lv1_0)) then 
                    pY_1 <= add_ln80_fu_236_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_281)) then
                if ((icmp_ln76_fu_188_p2 = ap_const_lv1_1)) then 
                    sX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln76_fu_188_p2 = ap_const_lv1_0)) then 
                    sX_1 <= add_ln91_fu_208_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln55_reg_740 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln55_2_reg_762 <= and_ln55_2_fu_433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln109_reg_736 <= icmp_ln109_fu_140_p2;
                icmp_ln55_reg_740_pp0_iter1_reg <= icmp_ln55_reg_740;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_140_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln55_fu_156_p2 = ap_const_lv1_1))) then
                icmp_ln55_5_reg_744 <= icmp_ln55_5_fu_170_p2;
                icmp_ln55_6_reg_749 <= icmp_ln55_6_fu_176_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_140_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln55_reg_740 <= icmp_ln55_fu_156_p2;
                icmp_ln76_reg_754 <= icmp_ln76_fu_188_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_140_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln76_fu_188_p2 = ap_const_lv1_1))) then
                icmp_ln80_reg_758 <= icmp_ln80_fu_242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11 <= layer4_out_dout(39 downto 30);
                p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12 <= layer4_out_dout(29 downto 20);
                p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13 <= layer4_out_dout(19 downto 10);
                p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14 <= trunc_ln115_fu_265_p1;
                void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
                void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
                void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
                void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln76_reg_754 = ap_const_lv1_1))) then
                sY_1 <= ap_phi_mux_storemerge_phi_fu_125_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln55_2_fu_433_p2) and (icmp_ln55_reg_740 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln65_22_reg_766 <= select_ln65_22_fu_491_p3;
                select_ln65_25_reg_771 <= select_ln65_25_fu_551_p3;
                select_ln65_28_reg_776 <= select_ln65_28_fu_611_p3;
                select_ln65_31_reg_781 <= select_ln65_31_fu_671_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln109_fu_146_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv7_1));
    add_ln76_fu_182_p2 <= std_logic_vector(unsigned(pX_1) + unsigned(ap_const_lv32_1));
    add_ln80_fu_236_p2 <= std_logic_vector(unsigned(pY_1) + unsigned(ap_const_lv32_1));
    add_ln86_fu_697_p2 <= std_logic_vector(unsigned(sY_1) + unsigned(select_ln86_fu_689_p3));
    add_ln91_fu_208_p2 <= std_logic_vector(unsigned(sX_1) + unsigned(select_ln91_fu_200_p3));
    and_ln55_2_fu_433_p2 <= (icmp_ln55_4_fu_423_p2 and and_ln55_fu_429_p2);
    and_ln55_fu_429_p2 <= (icmp_ln55_6_reg_749 and icmp_ln55_5_reg_744);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, layer4_out_empty_n, layer5_out_full_n, ap_predicate_op121_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op121_write_state3 = ap_const_boolean_1) and (layer5_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((layer4_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, layer4_out_empty_n, layer5_out_full_n, ap_predicate_op121_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op121_write_state3 = ap_const_boolean_1) and (layer5_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((layer4_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, layer4_out_empty_n, layer5_out_full_n, ap_predicate_op121_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op121_write_state3 = ap_const_boolean_1) and (layer5_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((layer4_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(layer4_out_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (layer4_out_empty_n = ap_const_logic_0);
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(layer5_out_full_n, ap_predicate_op121_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op121_write_state3 = ap_const_boolean_1) and (layer5_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_214_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_214 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_216_assign_proc : process(icmp_ln109_fu_140_p2, icmp_ln76_fu_188_p2, icmp_ln80_fu_242_p2)
    begin
                ap_condition_216 <= ((icmp_ln109_fu_140_p2 = ap_const_lv1_0) and (icmp_ln80_fu_242_p2 = ap_const_lv1_1) and (icmp_ln76_fu_188_p2 = ap_const_lv1_1));
    end process;


    ap_condition_240_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_fu_140_p2, ap_block_pp0_stage0_11001, icmp_ln76_fu_188_p2, ap_start_int)
    begin
                ap_condition_240 <= ((icmp_ln109_fu_140_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln76_fu_188_p2 = ap_const_lv1_1));
    end process;


    ap_condition_281_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_fu_140_p2, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_281 <= ((icmp_ln109_fu_140_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln109_fu_140_p2, ap_start_int)
    begin
        if (((icmp_ln109_fu_140_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_storemerge_phi_fu_125_p4_assign_proc : process(icmp_ln109_reg_736, icmp_ln76_reg_754, icmp_ln80_reg_758, add_ln86_fu_697_p2, ap_phi_reg_pp0_iter1_storemerge_reg_121)
    begin
        if (((icmp_ln80_reg_758 = ap_const_lv1_0) and (icmp_ln76_reg_754 = ap_const_lv1_1) and (icmp_ln109_reg_736 = ap_const_lv1_0))) then 
            ap_phi_mux_storemerge_phi_fu_125_p4 <= add_ln86_fu_697_p2;
        else 
            ap_phi_mux_storemerge_phi_fu_125_p4 <= ap_phi_reg_pp0_iter1_storemerge_reg_121;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_121 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op121_write_state3_assign_proc : process(icmp_ln55_reg_740_pp0_iter1_reg, and_ln55_2_reg_762)
    begin
                ap_predicate_op121_write_state3 <= ((ap_const_lv1_1 = and_ln55_2_reg_762) and (icmp_ln55_reg_740_pp0_iter1_reg = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_fu_104, ap_loop_init, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_104;
        end if; 
    end process;

    icmp_ln109_fu_140_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv7_68) else "0";
    icmp_ln55_4_fu_423_p2 <= "1" when (sY_1 = ap_const_lv32_1) else "0";
    icmp_ln55_5_fu_170_p2 <= "1" when (signed(pY_1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln55_6_fu_176_p2 <= "1" when (signed(pX_1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln55_fu_156_p2 <= "1" when (sX_1 = ap_const_lv32_1) else "0";
    icmp_ln65_21_fu_459_p2 <= "1" when (unsigned(p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14) < unsigned(trunc_ln115_fu_265_p1)) else "0";
    icmp_ln65_22_fu_479_p2 <= "1" when (unsigned(select_ln65_fu_451_p3) < unsigned(select_ln65_21_fu_471_p3)) else "0";
    icmp_ln65_23_fu_499_p2 <= "1" when (unsigned(void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5) < unsigned(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0)) else "0";
    icmp_ln65_24_fu_519_p2 <= "1" when (unsigned(p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13) < unsigned(trunc_ln115_s_fu_289_p4)) else "0";
    icmp_ln65_25_fu_539_p2 <= "1" when (unsigned(select_ln65_23_fu_511_p3) < unsigned(select_ln65_24_fu_531_p3)) else "0";
    icmp_ln65_26_fu_559_p2 <= "1" when (unsigned(void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4) < unsigned(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0)) else "0";
    icmp_ln65_27_fu_579_p2 <= "1" when (unsigned(p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12) < unsigned(trunc_ln115_8_fu_269_p4)) else "0";
    icmp_ln65_28_fu_599_p2 <= "1" when (unsigned(select_ln65_26_fu_571_p3) < unsigned(select_ln65_27_fu_591_p3)) else "0";
    icmp_ln65_29_fu_619_p2 <= "1" when (unsigned(void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3) < unsigned(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0)) else "0";
    icmp_ln65_30_fu_639_p2 <= "1" when (unsigned(p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11) < unsigned(trunc_ln115_9_fu_279_p4)) else "0";
    icmp_ln65_31_fu_659_p2 <= "1" when (unsigned(select_ln65_29_fu_631_p3) < unsigned(select_ln65_30_fu_651_p3)) else "0";
    icmp_ln65_fu_439_p2 <= "1" when (unsigned(void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6) < unsigned(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0)) else "0";
    icmp_ln76_fu_188_p2 <= "1" when (add_ln76_fu_182_p2 = ap_const_lv32_D) else "0";
    icmp_ln80_fu_242_p2 <= "1" when (add_ln80_fu_236_p2 = ap_const_lv32_8) else "0";
    icmp_ln86_fu_683_p2 <= "1" when (sY_1 = ap_const_lv32_1) else "0";

    layer4_out_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, layer4_out_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer4_out_blk_n <= layer4_out_empty_n;
        else 
            layer4_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer4_out_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer4_out_read <= ap_const_logic_1;
        else 
            layer4_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer5_out_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, layer5_out_full_n, ap_predicate_op121_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op121_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer5_out_blk_n <= layer5_out_full_n;
        else 
            layer5_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer5_out_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_710_p8),64));

    layer5_out_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op121_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op121_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer5_out_write <= ap_const_logic_1;
        else 
            layer5_out_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln65_21_fu_471_p3 <= 
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_14 when (xor_ln65_21_fu_465_p2(0) = '1') else 
        trunc_ln115_fu_265_p1;
    select_ln65_22_fu_491_p3 <= 
        select_ln65_fu_451_p3 when (xor_ln65_22_fu_485_p2(0) = '1') else 
        select_ln65_21_fu_471_p3;
    select_ln65_23_fu_511_p3 <= 
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_5 when (xor_ln65_23_fu_505_p2(0) = '1') else 
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
    select_ln65_24_fu_531_p3 <= 
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_13 when (xor_ln65_24_fu_525_p2(0) = '1') else 
        trunc_ln115_s_fu_289_p4;
    select_ln65_25_fu_551_p3 <= 
        select_ln65_23_fu_511_p3 when (xor_ln65_25_fu_545_p2(0) = '1') else 
        select_ln65_24_fu_531_p3;
    select_ln65_26_fu_571_p3 <= 
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_4 when (xor_ln65_26_fu_565_p2(0) = '1') else 
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
    select_ln65_27_fu_591_p3 <= 
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_12 when (xor_ln65_27_fu_585_p2(0) = '1') else 
        trunc_ln115_8_fu_269_p4;
    select_ln65_28_fu_611_p3 <= 
        select_ln65_26_fu_571_p3 when (xor_ln65_28_fu_605_p2(0) = '1') else 
        select_ln65_27_fu_591_p3;
    select_ln65_29_fu_631_p3 <= 
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 when (xor_ln65_29_fu_625_p2(0) = '1') else 
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
    select_ln65_30_fu_651_p3 <= 
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI9ap_ufixedILi10ELi0EL9ap_q_mode4EL9a_11 when (xor_ln65_30_fu_645_p2(0) = '1') else 
        trunc_ln115_9_fu_279_p4;
    select_ln65_31_fu_671_p3 <= 
        select_ln65_29_fu_631_p3 when (xor_ln65_31_fu_665_p2(0) = '1') else 
        select_ln65_30_fu_651_p3;
    select_ln65_fu_451_p3 <= 
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_6 when (xor_ln65_fu_445_p2(0) = '1') else 
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
    select_ln86_fu_689_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln86_fu_683_p2(0) = '1') else 
        ap_const_lv32_1;
    select_ln91_fu_200_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln55_fu_156_p2(0) = '1') else 
        ap_const_lv32_1;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_8_fu_710_p8 <= ((((((select_ln65_31_reg_781 & ap_const_lv6_0) & select_ln65_28_reg_776) & ap_const_lv6_0) & select_ln65_25_reg_771) & ap_const_lv6_0) & select_ln65_22_reg_766);
    trunc_ln115_8_fu_269_p4 <= layer4_out_dout(29 downto 20);
    trunc_ln115_9_fu_279_p4 <= layer4_out_dout(39 downto 30);
    trunc_ln115_fu_265_p1 <= layer4_out_dout(10 - 1 downto 0);
    trunc_ln115_s_fu_289_p4 <= layer4_out_dout(19 downto 10);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0 <= layer4_out_dout(29 downto 20);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0 <= layer4_out_dout(19 downto 10);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0 <= layer4_out_dout(39 downto 30);

    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 <= ap_const_logic_1;
        else 
            void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln65_21_fu_465_p2 <= (icmp_ln65_21_fu_459_p2 xor ap_const_lv1_1);
    xor_ln65_22_fu_485_p2 <= (icmp_ln65_22_fu_479_p2 xor ap_const_lv1_1);
    xor_ln65_23_fu_505_p2 <= (icmp_ln65_23_fu_499_p2 xor ap_const_lv1_1);
    xor_ln65_24_fu_525_p2 <= (icmp_ln65_24_fu_519_p2 xor ap_const_lv1_1);
    xor_ln65_25_fu_545_p2 <= (icmp_ln65_25_fu_539_p2 xor ap_const_lv1_1);
    xor_ln65_26_fu_565_p2 <= (icmp_ln65_26_fu_559_p2 xor ap_const_lv1_1);
    xor_ln65_27_fu_585_p2 <= (icmp_ln65_27_fu_579_p2 xor ap_const_lv1_1);
    xor_ln65_28_fu_605_p2 <= (icmp_ln65_28_fu_599_p2 xor ap_const_lv1_1);
    xor_ln65_29_fu_625_p2 <= (icmp_ln65_29_fu_619_p2 xor ap_const_lv1_1);
    xor_ln65_30_fu_645_p2 <= (icmp_ln65_30_fu_639_p2 xor ap_const_lv1_1);
    xor_ln65_31_fu_665_p2 <= (icmp_ln65_31_fu_659_p2 xor ap_const_lv1_1);
    xor_ln65_fu_445_p2 <= (icmp_ln65_fu_439_p2 xor ap_const_lv1_1);
end behav;
