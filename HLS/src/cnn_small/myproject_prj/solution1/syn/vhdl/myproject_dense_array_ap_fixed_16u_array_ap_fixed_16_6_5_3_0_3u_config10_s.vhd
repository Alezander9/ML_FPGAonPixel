-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_3u_config10_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer9_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    layer9_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer9_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer9_out_empty_n : IN STD_LOGIC;
    layer9_out_read : OUT STD_LOGIC;
    layer10_out_din : OUT STD_LOGIC_VECTOR (47 downto 0);
    layer10_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer10_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer10_out_full_n : IN STD_LOGIC;
    layer10_out_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC );
end;


architecture behav of myproject_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_3u_config10_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal icmp_ln124_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_phi_mux_do_init_phi_fu_189_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln124_reg_1104 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1104_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal outidx_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal outidx_ce0 : STD_LOGIC;
    signal outidx_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal w10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal w10_ce0 : STD_LOGIC;
    signal w10_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer9_out_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer10_out_blk_n : STD_LOGIC;
    signal do_init_reg_185 : STD_LOGIC_VECTOR (0 downto 0);
    signal ir15_reg_201 : STD_LOGIC_VECTOR (5 downto 0);
    signal in_index16_reg_439 : STD_LOGIC_VECTOR (3 downto 0);
    signal data_40_phi_reg_453 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_39_phi_reg_465 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_38_phi_reg_477 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_37_phi_reg_489 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_36_phi_reg_501 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_35_phi_reg_513 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_34_phi_reg_525 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_33_phi_reg_537 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_32_phi_reg_549 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_31_phi_reg_561 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_30_phi_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_29_phi_reg_585 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_41_phi_reg_597 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_42_phi_reg_609 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_43_phi_reg_621 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_phi_reg_633 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc14_reg_645 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_4912_reg_659 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_5010_reg_673 : STD_LOGIC_VECTOR (14 downto 0);
    signal ir_fu_693_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ir_reg_1099 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_index_reg_1108 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_1115 : STD_LOGIC_VECTOR (14 downto 0);
    signal in_index_fu_961_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal in_index_reg_1121 : STD_LOGIC_VECTOR (3 downto 0);
    signal acc_53_fu_1040_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_52_fu_1048_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_fu_1056_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_ir15_phi_fu_205_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_in_index16_phi_fu_443_p6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_data_40_phi_phi_fu_457_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_40_phi_reg_453 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_39_phi_phi_fu_469_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_39_phi_reg_465 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_38_phi_phi_fu_481_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_38_phi_reg_477 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_37_phi_phi_fu_493_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_37_phi_reg_489 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_36_phi_phi_fu_505_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_36_phi_reg_501 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_35_phi_phi_fu_517_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_35_phi_reg_513 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_34_phi_phi_fu_529_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_34_phi_reg_525 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_33_phi_phi_fu_541_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_33_phi_reg_537 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_32_phi_phi_fu_553_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_32_phi_reg_549 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_31_phi_phi_fu_565_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_31_phi_reg_561 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_30_phi_phi_fu_577_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_30_phi_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_29_phi_phi_fu_589_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_29_phi_reg_585 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_41_phi_phi_fu_601_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_41_phi_reg_597 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_42_phi_phi_fu_613_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_42_phi_reg_609 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_43_phi_phi_fu_625_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_43_phi_reg_621 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_phi_phi_fu_637_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_fu_705_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_phi_reg_633 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln124_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal a_fu_879_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln133_fu_925_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln124_2_fu_875_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal in_index_2_fu_941_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13_fu_953_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln109_fu_947_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_969_p5 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln133_fu_980_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln133_2_fu_984_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln133_fu_987_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln133_1_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln133_2_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln133_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln133_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln133_1_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln133_2_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_50_fu_1021_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_51_fu_1029_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln77_fu_1068_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln111_fu_1064_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_1072_p4 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_107 : BOOLEAN;
    signal ap_condition_201 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_mux_16_4_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (15 downto 0);
        din7 : IN STD_LOGIC_VECTOR (15 downto 0);
        din8 : IN STD_LOGIC_VECTOR (15 downto 0);
        din9 : IN STD_LOGIC_VECTOR (15 downto 0);
        din10 : IN STD_LOGIC_VECTOR (15 downto 0);
        din11 : IN STD_LOGIC_VECTOR (15 downto 0);
        din12 : IN STD_LOGIC_VECTOR (15 downto 0);
        din13 : IN STD_LOGIC_VECTOR (15 downto 0);
        din14 : IN STD_LOGIC_VECTOR (15 downto 0);
        din15 : IN STD_LOGIC_VECTOR (15 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_16s_10s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mux_3_2_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_3u_config10_s_outidx_ROM_AeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component myproject_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_3u_config10_s_w10_ROM_AUTOfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    outidx_U : component myproject_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_3u_config10_s_outidx_ROM_AeOg
    generic map (
        DataWidth => 2,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outidx_address0,
        ce0 => outidx_ce0,
        q0 => outidx_q0);

    w10_U : component myproject_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_3u_config10_s_w10_ROM_AUTOfYi
    generic map (
        DataWidth => 10,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w10_address0,
        ce0 => w10_ce0,
        q0 => w10_q0);

    mux_16_4_16_1_1_U41 : component myproject_mux_16_4_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_mux_p_phi_phi_fu_637_p4,
        din1 => ap_phi_mux_data_41_phi_phi_fu_601_p4,
        din2 => ap_phi_mux_data_29_phi_phi_fu_589_p4,
        din3 => ap_phi_mux_data_30_phi_phi_fu_577_p4,
        din4 => ap_phi_mux_data_31_phi_phi_fu_565_p4,
        din5 => ap_phi_mux_data_32_phi_phi_fu_553_p4,
        din6 => ap_phi_mux_data_33_phi_phi_fu_541_p4,
        din7 => ap_phi_mux_data_34_phi_phi_fu_529_p4,
        din8 => ap_phi_mux_data_35_phi_phi_fu_517_p4,
        din9 => ap_phi_mux_data_36_phi_phi_fu_505_p4,
        din10 => ap_phi_mux_data_37_phi_phi_fu_493_p4,
        din11 => ap_phi_mux_data_38_phi_phi_fu_481_p4,
        din12 => ap_phi_mux_data_39_phi_phi_fu_469_p4,
        din13 => ap_phi_mux_data_40_phi_phi_fu_457_p4,
        din14 => ap_phi_mux_data_43_phi_phi_fu_625_p4,
        din15 => ap_phi_mux_data_42_phi_phi_fu_613_p4,
        din16 => ap_phi_mux_in_index16_phi_fu_443_p6,
        dout => a_fu_879_p18);

    mul_16s_10s_24_1_1_U42 : component myproject_mul_16s_10s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 24)
    port map (
        din0 => a_fu_879_p18,
        din1 => w10_q0,
        dout => mul_ln133_fu_925_p2);

    mux_3_2_15_1_1_U43 : component myproject_mux_3_2_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        din2_WIDTH => 15,
        din3_WIDTH => 2,
        dout_WIDTH => 15)
    port map (
        din0 => acc14_reg_645,
        din1 => acc_4912_reg_659,
        din2 => acc_5010_reg_673,
        din3 => out_index_reg_1108,
        dout => tmp_s_fu_969_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= real_start;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    acc14_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_0))) then 
                acc14_reg_645 <= acc_fu_1056_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc14_reg_645 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    acc_4912_reg_659_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_0))) then 
                acc_4912_reg_659 <= acc_52_fu_1048_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_4912_reg_659 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    acc_5010_reg_673_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_0))) then 
                acc_5010_reg_673 <= acc_53_fu_1040_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_5010_reg_673 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    data_29_phi_reg_585_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_29_phi_reg_585 <= data_29_phi_reg_585;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_29_phi_reg_585 <= layer9_out_dout(47 downto 32);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_29_phi_reg_585 <= ap_phi_reg_pp0_iter1_data_29_phi_reg_585;
                end if;
            end if; 
        end if;
    end process;

    data_30_phi_reg_573_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_30_phi_reg_573 <= data_30_phi_reg_573;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_30_phi_reg_573 <= layer9_out_dout(63 downto 48);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_30_phi_reg_573 <= ap_phi_reg_pp0_iter1_data_30_phi_reg_573;
                end if;
            end if; 
        end if;
    end process;

    data_31_phi_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_31_phi_reg_561 <= data_31_phi_reg_561;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_31_phi_reg_561 <= layer9_out_dout(79 downto 64);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_31_phi_reg_561 <= ap_phi_reg_pp0_iter1_data_31_phi_reg_561;
                end if;
            end if; 
        end if;
    end process;

    data_32_phi_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_32_phi_reg_549 <= data_32_phi_reg_549;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_32_phi_reg_549 <= layer9_out_dout(95 downto 80);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_32_phi_reg_549 <= ap_phi_reg_pp0_iter1_data_32_phi_reg_549;
                end if;
            end if; 
        end if;
    end process;

    data_33_phi_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_33_phi_reg_537 <= data_33_phi_reg_537;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_33_phi_reg_537 <= layer9_out_dout(111 downto 96);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_33_phi_reg_537 <= ap_phi_reg_pp0_iter1_data_33_phi_reg_537;
                end if;
            end if; 
        end if;
    end process;

    data_34_phi_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_34_phi_reg_525 <= data_34_phi_reg_525;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_34_phi_reg_525 <= layer9_out_dout(127 downto 112);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_34_phi_reg_525 <= ap_phi_reg_pp0_iter1_data_34_phi_reg_525;
                end if;
            end if; 
        end if;
    end process;

    data_35_phi_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_35_phi_reg_513 <= data_35_phi_reg_513;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_35_phi_reg_513 <= layer9_out_dout(143 downto 128);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_35_phi_reg_513 <= ap_phi_reg_pp0_iter1_data_35_phi_reg_513;
                end if;
            end if; 
        end if;
    end process;

    data_36_phi_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_36_phi_reg_501 <= data_36_phi_reg_501;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_36_phi_reg_501 <= layer9_out_dout(159 downto 144);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_36_phi_reg_501 <= ap_phi_reg_pp0_iter1_data_36_phi_reg_501;
                end if;
            end if; 
        end if;
    end process;

    data_37_phi_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_37_phi_reg_489 <= data_37_phi_reg_489;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_37_phi_reg_489 <= layer9_out_dout(175 downto 160);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_37_phi_reg_489 <= ap_phi_reg_pp0_iter1_data_37_phi_reg_489;
                end if;
            end if; 
        end if;
    end process;

    data_38_phi_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_38_phi_reg_477 <= data_38_phi_reg_477;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_38_phi_reg_477 <= layer9_out_dout(191 downto 176);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_38_phi_reg_477 <= ap_phi_reg_pp0_iter1_data_38_phi_reg_477;
                end if;
            end if; 
        end if;
    end process;

    data_39_phi_reg_465_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_39_phi_reg_465 <= data_39_phi_reg_465;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_39_phi_reg_465 <= layer9_out_dout(207 downto 192);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_39_phi_reg_465 <= ap_phi_reg_pp0_iter1_data_39_phi_reg_465;
                end if;
            end if; 
        end if;
    end process;

    data_40_phi_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_40_phi_reg_453 <= data_40_phi_reg_453;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_40_phi_reg_453 <= layer9_out_dout(223 downto 208);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_40_phi_reg_453 <= ap_phi_reg_pp0_iter1_data_40_phi_reg_453;
                end if;
            end if; 
        end if;
    end process;

    data_41_phi_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_41_phi_reg_597 <= data_41_phi_reg_597;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_41_phi_reg_597 <= layer9_out_dout(31 downto 16);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_41_phi_reg_597 <= ap_phi_reg_pp0_iter1_data_41_phi_reg_597;
                end if;
            end if; 
        end if;
    end process;

    data_42_phi_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_42_phi_reg_609 <= data_42_phi_reg_609;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_42_phi_reg_609 <= layer9_out_dout(255 downto 240);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_42_phi_reg_609 <= ap_phi_reg_pp0_iter1_data_42_phi_reg_609;
                end if;
            end if; 
        end if;
    end process;

    data_43_phi_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    data_43_phi_reg_621 <= data_43_phi_reg_621;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    data_43_phi_reg_621 <= layer9_out_dout(239 downto 224);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    data_43_phi_reg_621 <= ap_phi_reg_pp0_iter1_data_43_phi_reg_621;
                end if;
            end if; 
        end if;
    end process;

    do_init_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_0))) then 
                do_init_reg_185 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_185 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    in_index16_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_0))) then 
                in_index16_reg_439 <= in_index_reg_1121;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                in_index16_reg_439 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    ir15_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln124_reg_1104 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ir15_reg_201 <= ir_reg_1099;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln124_reg_1104 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                ir15_reg_201 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    p_phi_reg_633_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_201)) then
                if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
                    p_phi_reg_633 <= p_phi_reg_633;
                elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
                    p_phi_reg_633 <= data_fu_705_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_phi_reg_633 <= ap_phi_reg_pp0_iter1_p_phi_reg_633;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln124_reg_1104 <= icmp_ln124_fu_699_p2;
                icmp_ln124_reg_1104_pp0_iter1_reg <= icmp_ln124_reg_1104;
                out_index_reg_1108 <= outidx_q0;
                trunc_ln_reg_1115 <= mul_ln133_fu_925_p2(23 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                in_index_reg_1121 <= in_index_fu_961_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ir_reg_1099 <= ir_fu_693_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    acc_50_fu_1021_p3 <= 
        acc_5010_reg_673 when (or_ln133_1_fu_1015_p2(0) = '1') else 
        ap_const_lv15_0;
    acc_51_fu_1029_p2 <= std_logic_vector(signed(trunc_ln_reg_1115) + signed(tmp_s_fu_969_p5));
    acc_52_fu_1048_p3 <= 
        acc_51_fu_1029_p2 when (icmp_ln133_1_fu_998_p2(0) = '1') else 
        acc_4912_reg_659;
    acc_53_fu_1040_p3 <= 
        acc_50_fu_1021_p3 when (or_ln133_2_fu_1034_p2(0) = '1') else 
        acc_51_fu_1029_p2;
    acc_fu_1056_p3 <= 
        acc_51_fu_1029_p2 when (icmp_ln133_fu_993_p2(0) = '1') else 
        acc14_reg_645;
    add_ln109_fu_947_p2 <= std_logic_vector(unsigned(ap_phi_mux_in_index16_phi_fu_443_p6) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_done_reg, layer9_out_empty_n, ap_phi_mux_do_init_phi_fu_189_p6, ap_enable_reg_pp0_iter1, layer10_out_full_n, icmp_ln124_reg_1104_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1) and (layer10_out_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1) and (layer9_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_done_reg, layer9_out_empty_n, ap_phi_mux_do_init_phi_fu_189_p6, ap_enable_reg_pp0_iter1, layer10_out_full_n, icmp_ln124_reg_1104_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1) and (layer10_out_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1) and (layer9_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_done_reg, layer9_out_empty_n, ap_phi_mux_do_init_phi_fu_189_p6, ap_enable_reg_pp0_iter1, layer10_out_full_n, icmp_ln124_reg_1104_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1) and (layer10_out_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1) and (layer9_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(layer9_out_empty_n, ap_phi_mux_do_init_phi_fu_189_p6)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1) and (layer9_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter2_assign_proc : process(layer10_out_full_n, icmp_ln124_reg_1104_pp0_iter1_reg)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1) and (layer10_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_107_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_107 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_201_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_201 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln124_reg_1104_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= real_start;

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_data_29_phi_phi_fu_589_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_29_phi_reg_585, ap_phi_reg_pp0_iter1_data_29_phi_reg_585)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_29_phi_phi_fu_589_p4 <= data_29_phi_reg_585;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_29_phi_phi_fu_589_p4 <= layer9_out_dout(47 downto 32);
        else 
            ap_phi_mux_data_29_phi_phi_fu_589_p4 <= ap_phi_reg_pp0_iter1_data_29_phi_reg_585;
        end if; 
    end process;


    ap_phi_mux_data_30_phi_phi_fu_577_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_30_phi_reg_573, ap_phi_reg_pp0_iter1_data_30_phi_reg_573)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_30_phi_phi_fu_577_p4 <= data_30_phi_reg_573;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_30_phi_phi_fu_577_p4 <= layer9_out_dout(63 downto 48);
        else 
            ap_phi_mux_data_30_phi_phi_fu_577_p4 <= ap_phi_reg_pp0_iter1_data_30_phi_reg_573;
        end if; 
    end process;


    ap_phi_mux_data_31_phi_phi_fu_565_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_31_phi_reg_561, ap_phi_reg_pp0_iter1_data_31_phi_reg_561)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_31_phi_phi_fu_565_p4 <= data_31_phi_reg_561;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_31_phi_phi_fu_565_p4 <= layer9_out_dout(79 downto 64);
        else 
            ap_phi_mux_data_31_phi_phi_fu_565_p4 <= ap_phi_reg_pp0_iter1_data_31_phi_reg_561;
        end if; 
    end process;


    ap_phi_mux_data_32_phi_phi_fu_553_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_32_phi_reg_549, ap_phi_reg_pp0_iter1_data_32_phi_reg_549)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_32_phi_phi_fu_553_p4 <= data_32_phi_reg_549;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_32_phi_phi_fu_553_p4 <= layer9_out_dout(95 downto 80);
        else 
            ap_phi_mux_data_32_phi_phi_fu_553_p4 <= ap_phi_reg_pp0_iter1_data_32_phi_reg_549;
        end if; 
    end process;


    ap_phi_mux_data_33_phi_phi_fu_541_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_33_phi_reg_537, ap_phi_reg_pp0_iter1_data_33_phi_reg_537)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_33_phi_phi_fu_541_p4 <= data_33_phi_reg_537;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_33_phi_phi_fu_541_p4 <= layer9_out_dout(111 downto 96);
        else 
            ap_phi_mux_data_33_phi_phi_fu_541_p4 <= ap_phi_reg_pp0_iter1_data_33_phi_reg_537;
        end if; 
    end process;


    ap_phi_mux_data_34_phi_phi_fu_529_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_34_phi_reg_525, ap_phi_reg_pp0_iter1_data_34_phi_reg_525)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_34_phi_phi_fu_529_p4 <= data_34_phi_reg_525;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_34_phi_phi_fu_529_p4 <= layer9_out_dout(127 downto 112);
        else 
            ap_phi_mux_data_34_phi_phi_fu_529_p4 <= ap_phi_reg_pp0_iter1_data_34_phi_reg_525;
        end if; 
    end process;


    ap_phi_mux_data_35_phi_phi_fu_517_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_35_phi_reg_513, ap_phi_reg_pp0_iter1_data_35_phi_reg_513)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_35_phi_phi_fu_517_p4 <= data_35_phi_reg_513;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_35_phi_phi_fu_517_p4 <= layer9_out_dout(143 downto 128);
        else 
            ap_phi_mux_data_35_phi_phi_fu_517_p4 <= ap_phi_reg_pp0_iter1_data_35_phi_reg_513;
        end if; 
    end process;


    ap_phi_mux_data_36_phi_phi_fu_505_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_36_phi_reg_501, ap_phi_reg_pp0_iter1_data_36_phi_reg_501)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_36_phi_phi_fu_505_p4 <= data_36_phi_reg_501;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_36_phi_phi_fu_505_p4 <= layer9_out_dout(159 downto 144);
        else 
            ap_phi_mux_data_36_phi_phi_fu_505_p4 <= ap_phi_reg_pp0_iter1_data_36_phi_reg_501;
        end if; 
    end process;


    ap_phi_mux_data_37_phi_phi_fu_493_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_37_phi_reg_489, ap_phi_reg_pp0_iter1_data_37_phi_reg_489)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_37_phi_phi_fu_493_p4 <= data_37_phi_reg_489;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_37_phi_phi_fu_493_p4 <= layer9_out_dout(175 downto 160);
        else 
            ap_phi_mux_data_37_phi_phi_fu_493_p4 <= ap_phi_reg_pp0_iter1_data_37_phi_reg_489;
        end if; 
    end process;


    ap_phi_mux_data_38_phi_phi_fu_481_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_38_phi_reg_477, ap_phi_reg_pp0_iter1_data_38_phi_reg_477)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_38_phi_phi_fu_481_p4 <= data_38_phi_reg_477;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_38_phi_phi_fu_481_p4 <= layer9_out_dout(191 downto 176);
        else 
            ap_phi_mux_data_38_phi_phi_fu_481_p4 <= ap_phi_reg_pp0_iter1_data_38_phi_reg_477;
        end if; 
    end process;


    ap_phi_mux_data_39_phi_phi_fu_469_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_39_phi_reg_465, ap_phi_reg_pp0_iter1_data_39_phi_reg_465)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_39_phi_phi_fu_469_p4 <= data_39_phi_reg_465;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_39_phi_phi_fu_469_p4 <= layer9_out_dout(207 downto 192);
        else 
            ap_phi_mux_data_39_phi_phi_fu_469_p4 <= ap_phi_reg_pp0_iter1_data_39_phi_reg_465;
        end if; 
    end process;


    ap_phi_mux_data_40_phi_phi_fu_457_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_40_phi_reg_453, ap_phi_reg_pp0_iter1_data_40_phi_reg_453)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_40_phi_phi_fu_457_p4 <= data_40_phi_reg_453;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_40_phi_phi_fu_457_p4 <= layer9_out_dout(223 downto 208);
        else 
            ap_phi_mux_data_40_phi_phi_fu_457_p4 <= ap_phi_reg_pp0_iter1_data_40_phi_reg_453;
        end if; 
    end process;


    ap_phi_mux_data_41_phi_phi_fu_601_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_41_phi_reg_597, ap_phi_reg_pp0_iter1_data_41_phi_reg_597)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_41_phi_phi_fu_601_p4 <= data_41_phi_reg_597;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_41_phi_phi_fu_601_p4 <= layer9_out_dout(31 downto 16);
        else 
            ap_phi_mux_data_41_phi_phi_fu_601_p4 <= ap_phi_reg_pp0_iter1_data_41_phi_reg_597;
        end if; 
    end process;


    ap_phi_mux_data_42_phi_phi_fu_613_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_42_phi_reg_609, ap_phi_reg_pp0_iter1_data_42_phi_reg_609)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_42_phi_phi_fu_613_p4 <= data_42_phi_reg_609;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_42_phi_phi_fu_613_p4 <= layer9_out_dout(255 downto 240);
        else 
            ap_phi_mux_data_42_phi_phi_fu_613_p4 <= ap_phi_reg_pp0_iter1_data_42_phi_reg_609;
        end if; 
    end process;


    ap_phi_mux_data_43_phi_phi_fu_625_p4_assign_proc : process(layer9_out_dout, ap_phi_mux_do_init_phi_fu_189_p6, data_43_phi_reg_621, ap_phi_reg_pp0_iter1_data_43_phi_reg_621)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_data_43_phi_phi_fu_625_p4 <= data_43_phi_reg_621;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_data_43_phi_phi_fu_625_p4 <= layer9_out_dout(239 downto 224);
        else 
            ap_phi_mux_data_43_phi_phi_fu_625_p4 <= ap_phi_reg_pp0_iter1_data_43_phi_reg_621;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_189_p6_assign_proc : process(icmp_ln124_reg_1104_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, do_init_reg_185)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_189_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_189_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_189_p6 <= do_init_reg_185;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_189_p6 <= do_init_reg_185;
        end if; 
    end process;


    ap_phi_mux_in_index16_phi_fu_443_p6_assign_proc : process(icmp_ln124_reg_1104_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, in_index16_reg_439, in_index_reg_1121)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_in_index16_phi_fu_443_p6 <= ap_const_lv4_0;
            elsif ((icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_in_index16_phi_fu_443_p6 <= in_index_reg_1121;
            else 
                ap_phi_mux_in_index16_phi_fu_443_p6 <= in_index16_reg_439;
            end if;
        else 
            ap_phi_mux_in_index16_phi_fu_443_p6 <= in_index16_reg_439;
        end if; 
    end process;


    ap_phi_mux_ir15_phi_fu_205_p6_assign_proc : process(icmp_ln124_reg_1104, ir15_reg_201, ir_reg_1099, ap_condition_107)
    begin
        if ((ap_const_boolean_1 = ap_condition_107)) then
            if ((icmp_ln124_reg_1104 = ap_const_lv1_1)) then 
                ap_phi_mux_ir15_phi_fu_205_p6 <= ap_const_lv6_0;
            elsif ((icmp_ln124_reg_1104 = ap_const_lv1_0)) then 
                ap_phi_mux_ir15_phi_fu_205_p6 <= ir_reg_1099;
            else 
                ap_phi_mux_ir15_phi_fu_205_p6 <= ir15_reg_201;
            end if;
        else 
            ap_phi_mux_ir15_phi_fu_205_p6 <= ir15_reg_201;
        end if; 
    end process;


    ap_phi_mux_p_phi_phi_fu_637_p4_assign_proc : process(ap_phi_mux_do_init_phi_fu_189_p6, p_phi_reg_633, data_fu_705_p1, ap_phi_reg_pp0_iter1_p_phi_reg_633)
    begin
        if ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_p_phi_phi_fu_637_p4 <= p_phi_reg_633;
        elsif ((ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_p_phi_phi_fu_637_p4 <= data_fu_705_p1;
        else 
            ap_phi_mux_p_phi_phi_fu_637_p4 <= ap_phi_reg_pp0_iter1_p_phi_reg_633;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_data_29_phi_reg_585 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_30_phi_reg_573 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_31_phi_reg_561 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_32_phi_reg_549 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_33_phi_reg_537 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_34_phi_reg_525 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_35_phi_reg_513 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_36_phi_reg_501 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_37_phi_reg_489 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_38_phi_reg_477 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_39_phi_reg_465 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_40_phi_reg_453 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_41_phi_reg_597 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_42_phi_reg_609 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_data_43_phi_reg_621 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_p_phi_reg_633 <= "XXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    data_fu_705_p1 <= layer9_out_dout(16 - 1 downto 0);
    icmp_ln124_fu_699_p2 <= "1" when (ap_phi_mux_ir15_phi_fu_205_p6 = ap_const_lv6_2F) else "0";
    icmp_ln133_1_fu_998_p2 <= "1" when (out_index_reg_1108 = ap_const_lv2_1) else "0";
    icmp_ln133_2_fu_1003_p2 <= "0" when (sext_ln133_2_fu_984_p1 = sub_ln133_fu_987_p2) else "1";
    icmp_ln133_fu_993_p2 <= "1" when (out_index_reg_1108 = ap_const_lv2_0) else "0";
    in_index_2_fu_941_p2 <= std_logic_vector(unsigned(zext_ln124_2_fu_875_p1) + unsigned(ap_const_lv5_1));
    in_index_fu_961_p3 <= 
        ap_const_lv4_0 when (tmp_13_fu_953_p3(0) = '1') else 
        add_ln109_fu_947_p2;

    internal_ap_ready_assign_proc : process(icmp_ln124_fu_699_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln124_fu_699_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ir_fu_693_p2 <= std_logic_vector(unsigned(ap_phi_mux_ir15_phi_fu_205_p6) + unsigned(ap_const_lv6_1));

    layer10_out_blk_n_assign_proc : process(layer10_out_full_n, icmp_ln124_reg_1104_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1))) then 
            layer10_out_blk_n <= layer10_out_full_n;
        else 
            layer10_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        layer10_out_din <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1072_p4),48));


    layer10_out_write_assign_proc : process(icmp_ln124_reg_1104_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln124_reg_1104_pp0_iter1_reg = ap_const_lv1_1))) then 
            layer10_out_write <= ap_const_logic_1;
        else 
            layer10_out_write <= ap_const_logic_0;
        end if; 
    end process;


    layer9_out_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, layer9_out_empty_n, ap_phi_mux_do_init_phi_fu_189_p6, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer9_out_blk_n <= layer9_out_empty_n;
        else 
            layer9_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer9_out_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_do_init_phi_fu_189_p6, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_phi_mux_do_init_phi_fu_189_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer9_out_read <= ap_const_logic_1;
        else 
            layer9_out_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln133_1_fu_1015_p2 <= (or_ln133_fu_1009_p2 or icmp_ln133_fu_993_p2);
    or_ln133_2_fu_1034_p2 <= (icmp_ln133_fu_993_p2 or icmp_ln133_1_fu_998_p2);
    or_ln133_fu_1009_p2 <= (icmp_ln133_2_fu_1003_p2 or icmp_ln133_1_fu_998_p2);
    outidx_address0 <= zext_ln124_fu_687_p1(6 - 1 downto 0);

    outidx_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outidx_ce0 <= ap_const_logic_1;
        else 
            outidx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

        sext_ln111_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_fu_1056_p3),16));

        sext_ln133_2_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_1115),16));

        sext_ln133_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_969_p5),16));

        sext_ln77_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_52_fu_1048_p3),16));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln133_fu_987_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(sext_ln133_fu_980_p1));
    tmp_13_fu_953_p3 <= in_index_2_fu_941_p2(4 downto 4);
    tmp_fu_1072_p4 <= ((acc_53_fu_1040_p3 & sext_ln77_fu_1068_p1) & sext_ln111_fu_1064_p1);
    w10_address0 <= zext_ln124_fu_687_p1(6 - 1 downto 0);

    w10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w10_ce0 <= ap_const_logic_1;
        else 
            w10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln124_2_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_in_index16_phi_fu_443_p6),5));
    zext_ln124_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ir15_phi_fu_205_p6),64));
end behav;
