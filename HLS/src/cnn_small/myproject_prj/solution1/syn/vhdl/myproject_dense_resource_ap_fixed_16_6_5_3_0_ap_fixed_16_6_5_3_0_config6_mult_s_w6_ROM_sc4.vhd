-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity myproject_dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s_w6_ROM_sc4 is 
    generic(
             DataWidth     : integer := 9; 
             AddressWidth     : integer := 8; 
             AddressRange    : integer := 252
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of myproject_dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s_w6_ROM_sc4 is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "111001001", 1 => "000110101", 2 => "111110110", 3 => "111110000", 
    4 => "110110101", 5 => "001000011", 6 => "111101101", 7 => "001000101", 
    8 => "000010101", 9 => "000011111", 10 => "000011110", 11 => "000010111", 
    12 => "111100100", 13 => "111100110", 14 => "000100010", 15 => "111100001", 
    16 => "111011111", 17 => "000001111", 18 => "111111010", 19 => "111010000", 
    20 => "111010000", 21 => "111111001", 22 => "000101101", 23 => "111101100", 
    24 => "101111101", 25 => "111101111", 26 => "111010000", 27 => "111000010", 
    28 => "111101110", 29 => "000110101", 30 => "000000111", 31 => "110110101", 
    32 => "110000000", 33 => "000010110", 34 => "000001111", 35 => "111010110", 
    36 => "000010001", 37 => "110100110", 38 => "110000111", 39 => "101101010", 
    40 => "110100110", 41 => "000011011", 42 => "000000100", 43 => "001111101", 
    44 => "001011111", 45 => "000000010", 46 => "111110110", 47 => "000100001", 
    48 => "001001100", 49 => "000100101", 50 => "000111001", 51 => "111101011", 
    52 => "111111111", 53 => "111100010", 54 => "111100011", 55 => "000100001", 
    56 => "000100111", 57 => "111001011", 58 => "000010110", 59 => "111000011", 
    60 => "000011001", 61 => "111101010", 62 => "111111011", 63 => "000010000", 
    64 => "000111001", 65 => "111110010", 66 => "111110111", 67 => "111101110", 
    68 => "000000101", 69 => "000010100", 70 => "000001101", 71 => "000110100", 
    72 => "110010011", 73 => "000010001", 74 => "000011110", 75 => "111110111", 
    76 => "001000010", 77 => "111101111", 78 => "110111100", 79 => "001001100", 
    80 => "000100001", 81 => "000100010", 82 => "111001001", 83 => "111110110", 
    84 => "110000101", 85 => "111110100", 86 => "111110100", 87 => "111001100", 
    88 => "001000100", 89 => "110111001", 90 => "110010000", 91 => "111110110", 
    92 => "111110100", 93 => "000101100", 94 => "111110001", 95 => "000001001", 
    96 => "110110000", 97 => "000001111", 98 => "001110110", 99 => "001000000", 
    100 => "000100001", 101 => "111110100", 102 => "111010000", 103 => "000011010", 
    104 => "111100000", 105 => "000011010", 106 => "111111000", 107 => "111101010", 
    108 => "000011010", 109 => "000001100", 110 => "111100000", 111 => "001000101", 
    112 => "111101010", 113 => "111011100", 114 => "111011111", 115 => "000101011", 
    116 => "000001000", 117 => "111111110", 118 => "111111101", 119 => "111101110", 
    120 => "000111101", 121 => "000001001", 122 => "000000101", 123 => "111100000", 
    124 => "000011001", 125 => "111101001", 126 => "111111110", 127 => "000010111", 
    128 => "111110111", 129 => "111111110", 130 => "000111100", 131 => "000000011", 
    132 => "000101111", 133 => "111011101", 134 => "111111110", 135 => "110001001", 
    136 => "000101111", 137 => "111111101", 138 => "000011111", 139 => "111111001", 
    140 => "000001010", 141 => "000000000", 142 => "000010011", 143 => "000100011", 
    144 => "111001101", 145 => "111111001", 146 => "111110110", 147 => "000000100", 
    148 => "000011110", 149 => "111011010", 150 => "110011010", 151 => "111001001", 
    152 => "000101110", 153 => "000110110", 154 => "000010011", 155 => "000011110", 
    156 => "110110011", 157 => "111001011", 158 => "111111000", 159 => "000011101", 
    160 => "111001010", 161 => "001000001", 162 => "000000000", 163 => "111000110", 
    164 => "111000101", 165 => "000101100", 166 => "111110111", 167 => "110100101", 
    168 => "010110011", 169 => "000010110", 170 => "110000011", 171 => "000001101", 
    172 => "111101010", 173 => "111110010", 174 => "111001000", 175 => "000011110", 
    176 => "111110101", 177 => "000101011", 178 => "000101010", 179 => "111011101", 
    180 => "000000101", 181 => "000100000", 182 => "111010001", 183 => "111011011", 
    184 => "000110000", 185 => "000000011", 186 => "111110000", 187 => "111100111", 
    188 => "000011010", 189 => "000010100", 190 => "010010000", 191 => "111011100", 
    192 => "000101101", 193 => "000001101", 194 => "000111010", 195 => "110110110", 
    196 => "000010111", 197 => "000000010", 198 => "000010011", 199 => "001010110", 
    200 => "101100110", 201 => "001101001", 202 => "010100000", 203 => "111011001", 
    204 => "110110001", 205 => "001001011", 206 => "111010000", 207 => "111001100", 
    208 => "110010010", 209 => "111110111", 210 => "111110001", 211 => "111100000", 
    212 => "111110111", 213 => "001010110", 214 => "001000010", 215 => "010100101", 
    216 => "000010000", 217 => "000100011", 218 => "111101001", 219 => "000001100", 
    220 => "000001111", 221 => "000101111", 222 => "001101100", 223 => "000001110", 
    224 => "000111100", 225 => "000010010", 226 => "110001010", 227 => "000100000", 
    228 => "111110111", 229 => "000100001", 230 => "000000011", 231 => "111011001", 
    232 => "111000111", 233 => "000000011", 234 => "111001110", 235 => "111110110", 
    236 => "111100100", 237 => "000001000", 238 => "110100010", 239 => "000000100", 
    240 => "111101111", 241 => "111011101", 242 => "111011100", 243 => "000001110", 
    244 => "010000101", 245 => "111100101", 246 => "111001011", 247 => "110100111", 
    248 => "000110111", 249 => "111000000", 250 => "101101101", 251 => "111010111");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

