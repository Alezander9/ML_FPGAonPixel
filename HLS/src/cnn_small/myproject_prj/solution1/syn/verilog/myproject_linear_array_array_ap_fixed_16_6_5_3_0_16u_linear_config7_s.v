// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_linear_array_array_ap_fixed_16_6_5_3_0_16u_linear_config7_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer14_out_dout,
        layer14_out_num_data_valid,
        layer14_out_fifo_cap,
        layer14_out_empty_n,
        layer14_out_read,
        layer7_out_din,
        layer7_out_num_data_valid,
        layer7_out_fifo_cap,
        layer7_out_full_n,
        layer7_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [239:0] layer14_out_dout;
input  [1:0] layer14_out_num_data_valid;
input  [1:0] layer14_out_fifo_cap;
input   layer14_out_empty_n;
output   layer14_out_read;
output  [255:0] layer7_out_din;
input  [1:0] layer7_out_num_data_valid;
input  [1:0] layer7_out_fifo_cap;
input   layer7_out_full_n;
output   layer7_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer14_out_read;
reg layer7_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer14_out_blk_n;
reg    layer7_out_blk_n;
reg    ap_block_state1;
wire   [14:0] trunc_ln22_fu_117_p1;
wire   [14:0] trunc_ln22_44_fu_261_p4;
wire   [14:0] trunc_ln22_s_fu_121_p4;
wire   [14:0] trunc_ln22_32_fu_141_p4;
wire   [14:0] trunc_ln22_33_fu_151_p4;
wire  signed [15:0] sext_ln32_33_fu_283_p1;
wire   [30:0] tmp_33_fu_287_p3;
wire   [14:0] trunc_ln22_34_fu_161_p4;
wire  signed [31:0] sext_ln32_34_fu_295_p1;
wire   [46:0] tmp_34_fu_299_p3;
wire   [14:0] trunc_ln22_35_fu_171_p4;
wire  signed [47:0] sext_ln32_35_fu_307_p1;
wire   [62:0] tmp_35_fu_311_p3;
wire   [14:0] trunc_ln22_36_fu_181_p4;
wire  signed [63:0] sext_ln32_36_fu_319_p1;
wire   [78:0] tmp_36_fu_323_p3;
wire   [14:0] trunc_ln22_37_fu_191_p4;
wire  signed [79:0] sext_ln32_37_fu_331_p1;
wire   [94:0] tmp_37_fu_335_p3;
wire   [14:0] trunc_ln22_38_fu_201_p4;
wire  signed [95:0] sext_ln32_38_fu_343_p1;
wire   [110:0] tmp_38_fu_347_p3;
wire   [14:0] trunc_ln22_39_fu_211_p4;
wire  signed [111:0] sext_ln32_39_fu_355_p1;
wire   [126:0] tmp_39_fu_359_p3;
wire   [14:0] trunc_ln22_40_fu_221_p4;
wire  signed [127:0] sext_ln32_40_fu_367_p1;
wire   [142:0] tmp_40_fu_371_p3;
wire   [14:0] trunc_ln22_41_fu_231_p4;
wire  signed [143:0] sext_ln32_41_fu_379_p1;
wire   [158:0] tmp_41_fu_383_p3;
wire   [14:0] trunc_ln22_42_fu_241_p4;
wire  signed [159:0] sext_ln32_42_fu_391_p1;
wire   [174:0] tmp_42_fu_395_p3;
wire   [14:0] trunc_ln22_43_fu_251_p4;
wire  signed [175:0] sext_ln32_43_fu_403_p1;
wire   [190:0] tmp_43_fu_407_p3;
wire   [14:0] trunc_ln22_31_fu_131_p4;
wire  signed [15:0] sext_ln32_32_fu_279_p1;
wire  signed [15:0] sext_ln32_fu_275_p1;
wire  signed [191:0] sext_ln32_44_fu_415_p1;
wire  signed [15:0] sext_ln29_fu_271_p1;
wire   [254:0] tmp_44_fu_419_p6;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((real_start == 1'b0) | (layer7_out_full_n == 1'b0) | (layer14_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer7_out_full_n == 1'b0) | (layer14_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer7_out_full_n == 1'b0) | (layer14_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer7_out_full_n == 1'b0) | (layer14_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer14_out_blk_n = layer14_out_empty_n;
    end else begin
        layer14_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer7_out_full_n == 1'b0) | (layer14_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer14_out_read = 1'b1;
    end else begin
        layer14_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer7_out_blk_n = layer7_out_full_n;
    end else begin
        layer7_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer7_out_full_n == 1'b0) | (layer14_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer7_out_write = 1'b1;
    end else begin
        layer7_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer7_out_full_n == 1'b0) | (layer14_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign layer7_out_din = $signed(tmp_44_fu_419_p6);

assign sext_ln29_fu_271_p1 = $signed(trunc_ln22_fu_117_p1);

assign sext_ln32_32_fu_279_p1 = $signed(trunc_ln22_s_fu_121_p4);

assign sext_ln32_33_fu_283_p1 = $signed(trunc_ln22_32_fu_141_p4);

assign sext_ln32_34_fu_295_p1 = $signed(tmp_33_fu_287_p3);

assign sext_ln32_35_fu_307_p1 = $signed(tmp_34_fu_299_p3);

assign sext_ln32_36_fu_319_p1 = $signed(tmp_35_fu_311_p3);

assign sext_ln32_37_fu_331_p1 = $signed(tmp_36_fu_323_p3);

assign sext_ln32_38_fu_343_p1 = $signed(tmp_37_fu_335_p3);

assign sext_ln32_39_fu_355_p1 = $signed(tmp_38_fu_347_p3);

assign sext_ln32_40_fu_367_p1 = $signed(tmp_39_fu_359_p3);

assign sext_ln32_41_fu_379_p1 = $signed(tmp_40_fu_371_p3);

assign sext_ln32_42_fu_391_p1 = $signed(tmp_41_fu_383_p3);

assign sext_ln32_43_fu_403_p1 = $signed(tmp_42_fu_395_p3);

assign sext_ln32_44_fu_415_p1 = $signed(tmp_43_fu_407_p3);

assign sext_ln32_fu_275_p1 = $signed(trunc_ln22_44_fu_261_p4);

assign start_out = real_start;

assign tmp_33_fu_287_p3 = {{trunc_ln22_33_fu_151_p4}, {sext_ln32_33_fu_283_p1}};

assign tmp_34_fu_299_p3 = {{trunc_ln22_34_fu_161_p4}, {sext_ln32_34_fu_295_p1}};

assign tmp_35_fu_311_p3 = {{trunc_ln22_35_fu_171_p4}, {sext_ln32_35_fu_307_p1}};

assign tmp_36_fu_323_p3 = {{trunc_ln22_36_fu_181_p4}, {sext_ln32_36_fu_319_p1}};

assign tmp_37_fu_335_p3 = {{trunc_ln22_37_fu_191_p4}, {sext_ln32_37_fu_331_p1}};

assign tmp_38_fu_347_p3 = {{trunc_ln22_38_fu_201_p4}, {sext_ln32_38_fu_343_p1}};

assign tmp_39_fu_359_p3 = {{trunc_ln22_39_fu_211_p4}, {sext_ln32_39_fu_355_p1}};

assign tmp_40_fu_371_p3 = {{trunc_ln22_40_fu_221_p4}, {sext_ln32_40_fu_367_p1}};

assign tmp_41_fu_383_p3 = {{trunc_ln22_41_fu_231_p4}, {sext_ln32_41_fu_379_p1}};

assign tmp_42_fu_395_p3 = {{trunc_ln22_42_fu_241_p4}, {sext_ln32_42_fu_391_p1}};

assign tmp_43_fu_407_p3 = {{trunc_ln22_43_fu_251_p4}, {sext_ln32_43_fu_403_p1}};

assign tmp_44_fu_419_p6 = {{{{{trunc_ln22_31_fu_131_p4}, {sext_ln32_32_fu_279_p1}}, {sext_ln32_fu_275_p1}}, {sext_ln32_44_fu_415_p1}}, {sext_ln29_fu_271_p1}};

assign trunc_ln22_31_fu_131_p4 = {{layer14_out_dout[239:225]}};

assign trunc_ln22_32_fu_141_p4 = {{layer14_out_dout[29:15]}};

assign trunc_ln22_33_fu_151_p4 = {{layer14_out_dout[44:30]}};

assign trunc_ln22_34_fu_161_p4 = {{layer14_out_dout[59:45]}};

assign trunc_ln22_35_fu_171_p4 = {{layer14_out_dout[74:60]}};

assign trunc_ln22_36_fu_181_p4 = {{layer14_out_dout[89:75]}};

assign trunc_ln22_37_fu_191_p4 = {{layer14_out_dout[104:90]}};

assign trunc_ln22_38_fu_201_p4 = {{layer14_out_dout[119:105]}};

assign trunc_ln22_39_fu_211_p4 = {{layer14_out_dout[134:120]}};

assign trunc_ln22_40_fu_221_p4 = {{layer14_out_dout[149:135]}};

assign trunc_ln22_41_fu_231_p4 = {{layer14_out_dout[164:150]}};

assign trunc_ln22_42_fu_241_p4 = {{layer14_out_dout[179:165]}};

assign trunc_ln22_43_fu_251_p4 = {{layer14_out_dout[194:180]}};

assign trunc_ln22_44_fu_261_p4 = {{layer14_out_dout[209:195]}};

assign trunc_ln22_fu_117_p1 = layer14_out_dout[14:0];

assign trunc_ln22_s_fu_121_p4 = {{layer14_out_dout[224:210]}};

endmodule //myproject_linear_array_array_ap_fixed_16_6_5_3_0_16u_linear_config7_s
