// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_array_ap_fixed_24u_array_ap_ufixed_15_0_4_0_0_24u_relu_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer4_out_dout,
        layer4_out_num_data_valid,
        layer4_out_fifo_cap,
        layer4_out_empty_n,
        layer4_out_read,
        layer5_out_din,
        layer5_out_num_data_valid,
        layer5_out_fifo_cap,
        layer5_out_full_n,
        layer5_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [383:0] layer4_out_dout;
input  [1:0] layer4_out_num_data_valid;
input  [1:0] layer4_out_fifo_cap;
input   layer4_out_empty_n;
output   layer4_out_read;
output  [359:0] layer5_out_din;
input  [1:0] layer5_out_num_data_valid;
input  [1:0] layer5_out_fifo_cap;
input   layer5_out_full_n;
output   layer5_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer4_out_read;
reg layer5_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer4_out_blk_n;
reg    layer5_out_blk_n;
reg    ap_block_state1;
wire   [15:0] in_data_fu_239_p1;
wire   [9:0] trunc_ln52_fu_479_p1;
wire   [5:0] tmp_17_fu_491_p4;
wire   [0:0] icmp_ln52_fu_501_p2;
wire   [14:0] shl_ln_fu_483_p3;
wire   [0:0] icmp_ln51_fu_473_p2;
wire   [14:0] select_ln52_fu_507_p3;
wire   [15:0] in_data_1_fu_263_p4;
wire   [9:0] tmp_18_fu_529_p4;
wire   [5:0] tmp_19_fu_547_p4;
wire   [0:0] icmp_ln52_1_fu_557_p2;
wire   [14:0] shl_ln52_1_fu_539_p3;
wire   [0:0] icmp_ln51_1_fu_523_p2;
wire   [14:0] select_ln52_1_fu_563_p3;
wire   [15:0] in_data_2_fu_273_p4;
wire   [9:0] tmp_20_fu_585_p4;
wire   [5:0] tmp_21_fu_603_p4;
wire   [0:0] icmp_ln52_2_fu_613_p2;
wire   [14:0] shl_ln52_2_fu_595_p3;
wire   [0:0] icmp_ln51_2_fu_579_p2;
wire   [14:0] select_ln52_2_fu_619_p3;
wire   [15:0] in_data_3_fu_283_p4;
wire   [9:0] tmp_43_fu_641_p4;
wire   [5:0] tmp_22_fu_659_p4;
wire   [0:0] icmp_ln52_3_fu_669_p2;
wire   [14:0] shl_ln52_3_fu_651_p3;
wire   [0:0] icmp_ln51_3_fu_635_p2;
wire   [14:0] select_ln52_3_fu_675_p3;
wire   [15:0] tmp_fu_293_p4;
wire   [9:0] tmp_44_fu_697_p4;
wire   [5:0] tmp_23_fu_715_p4;
wire   [0:0] icmp_ln52_4_fu_725_p2;
wire   [14:0] shl_ln52_4_fu_707_p3;
wire   [0:0] icmp_ln51_4_fu_691_p2;
wire   [14:0] select_ln52_4_fu_731_p3;
wire   [15:0] tmp_1_fu_303_p4;
wire   [9:0] tmp_45_fu_753_p4;
wire   [5:0] tmp_24_fu_771_p4;
wire   [0:0] icmp_ln52_5_fu_781_p2;
wire   [14:0] shl_ln52_5_fu_763_p3;
wire   [0:0] icmp_ln51_5_fu_747_p2;
wire   [14:0] select_ln52_5_fu_787_p3;
wire   [15:0] tmp_2_fu_313_p4;
wire   [9:0] tmp_46_fu_809_p4;
wire   [5:0] tmp_25_fu_827_p4;
wire   [0:0] icmp_ln52_6_fu_837_p2;
wire   [14:0] shl_ln52_6_fu_819_p3;
wire   [0:0] icmp_ln51_6_fu_803_p2;
wire   [14:0] select_ln52_6_fu_843_p3;
wire   [15:0] tmp_3_fu_323_p4;
wire   [9:0] tmp_47_fu_865_p4;
wire   [5:0] tmp_26_fu_883_p4;
wire   [0:0] icmp_ln52_7_fu_893_p2;
wire   [14:0] shl_ln52_7_fu_875_p3;
wire   [0:0] icmp_ln51_7_fu_859_p2;
wire   [14:0] select_ln52_7_fu_899_p3;
wire   [15:0] tmp_4_fu_333_p4;
wire   [9:0] tmp_48_fu_921_p4;
wire   [5:0] tmp_27_fu_939_p4;
wire   [0:0] icmp_ln52_8_fu_949_p2;
wire   [14:0] shl_ln52_8_fu_931_p3;
wire   [0:0] icmp_ln51_8_fu_915_p2;
wire   [14:0] select_ln52_8_fu_955_p3;
wire   [15:0] tmp_5_fu_343_p4;
wire   [9:0] tmp_49_fu_977_p4;
wire   [5:0] tmp_28_fu_995_p4;
wire   [0:0] icmp_ln52_9_fu_1005_p2;
wire   [14:0] shl_ln52_9_fu_987_p3;
wire   [0:0] icmp_ln51_9_fu_971_p2;
wire   [14:0] select_ln52_9_fu_1011_p3;
wire   [15:0] tmp_6_fu_353_p4;
wire   [9:0] tmp_50_fu_1033_p4;
wire   [5:0] tmp_29_fu_1051_p4;
wire   [0:0] icmp_ln52_10_fu_1061_p2;
wire   [14:0] shl_ln52_s_fu_1043_p3;
wire   [0:0] icmp_ln51_10_fu_1027_p2;
wire   [14:0] select_ln52_10_fu_1067_p3;
wire   [15:0] tmp_7_fu_363_p4;
wire   [9:0] tmp_51_fu_1089_p4;
wire   [5:0] tmp_30_fu_1107_p4;
wire   [0:0] icmp_ln52_11_fu_1117_p2;
wire   [14:0] shl_ln52_10_fu_1099_p3;
wire   [0:0] icmp_ln51_11_fu_1083_p2;
wire   [14:0] select_ln52_11_fu_1123_p3;
wire   [15:0] tmp_8_fu_373_p4;
wire   [9:0] tmp_52_fu_1145_p4;
wire   [5:0] tmp_31_fu_1163_p4;
wire   [0:0] icmp_ln52_12_fu_1173_p2;
wire   [14:0] shl_ln52_11_fu_1155_p3;
wire   [0:0] icmp_ln51_12_fu_1139_p2;
wire   [14:0] select_ln52_12_fu_1179_p3;
wire   [15:0] tmp_9_fu_383_p4;
wire   [9:0] tmp_53_fu_1201_p4;
wire   [5:0] tmp_32_fu_1219_p4;
wire   [0:0] icmp_ln52_13_fu_1229_p2;
wire   [14:0] shl_ln52_12_fu_1211_p3;
wire   [0:0] icmp_ln51_13_fu_1195_p2;
wire   [14:0] select_ln52_13_fu_1235_p3;
wire   [15:0] tmp_s_fu_393_p4;
wire   [9:0] tmp_54_fu_1257_p4;
wire   [5:0] tmp_33_fu_1275_p4;
wire   [0:0] icmp_ln52_14_fu_1285_p2;
wire   [14:0] shl_ln52_13_fu_1267_p3;
wire   [0:0] icmp_ln51_14_fu_1251_p2;
wire   [14:0] select_ln52_14_fu_1291_p3;
wire   [15:0] tmp_10_fu_403_p4;
wire   [9:0] tmp_55_fu_1313_p4;
wire   [5:0] tmp_34_fu_1331_p4;
wire   [0:0] icmp_ln52_15_fu_1341_p2;
wire   [14:0] shl_ln52_14_fu_1323_p3;
wire   [0:0] icmp_ln51_15_fu_1307_p2;
wire   [14:0] select_ln52_15_fu_1347_p3;
wire   [15:0] tmp_11_fu_413_p4;
wire   [9:0] tmp_56_fu_1369_p4;
wire   [5:0] tmp_35_fu_1387_p4;
wire   [0:0] icmp_ln52_16_fu_1397_p2;
wire   [14:0] shl_ln52_15_fu_1379_p3;
wire   [0:0] icmp_ln51_16_fu_1363_p2;
wire   [14:0] select_ln52_16_fu_1403_p3;
wire   [15:0] tmp_12_fu_423_p4;
wire   [9:0] tmp_57_fu_1425_p4;
wire   [5:0] tmp_36_fu_1443_p4;
wire   [0:0] icmp_ln52_17_fu_1453_p2;
wire   [14:0] shl_ln52_16_fu_1435_p3;
wire   [0:0] icmp_ln51_17_fu_1419_p2;
wire   [14:0] select_ln52_17_fu_1459_p3;
wire   [15:0] tmp_13_fu_433_p4;
wire   [9:0] tmp_58_fu_1481_p4;
wire   [5:0] tmp_37_fu_1499_p4;
wire   [0:0] icmp_ln52_18_fu_1509_p2;
wire   [14:0] shl_ln52_17_fu_1491_p3;
wire   [0:0] icmp_ln51_18_fu_1475_p2;
wire   [14:0] select_ln52_18_fu_1515_p3;
wire   [15:0] tmp_14_fu_443_p4;
wire   [9:0] tmp_59_fu_1537_p4;
wire   [5:0] tmp_38_fu_1555_p4;
wire   [0:0] icmp_ln52_19_fu_1565_p2;
wire   [14:0] shl_ln52_18_fu_1547_p3;
wire   [0:0] icmp_ln51_19_fu_1531_p2;
wire   [14:0] select_ln52_19_fu_1571_p3;
wire   [15:0] tmp_15_fu_453_p4;
wire   [9:0] tmp_60_fu_1593_p4;
wire   [5:0] tmp_39_fu_1611_p4;
wire   [0:0] icmp_ln52_20_fu_1621_p2;
wire   [14:0] shl_ln52_19_fu_1603_p3;
wire   [0:0] icmp_ln51_20_fu_1587_p2;
wire   [14:0] select_ln52_20_fu_1627_p3;
wire   [15:0] tmp_16_fu_463_p4;
wire   [9:0] tmp_61_fu_1649_p4;
wire   [5:0] tmp_40_fu_1667_p4;
wire   [0:0] icmp_ln52_21_fu_1677_p2;
wire   [14:0] shl_ln52_20_fu_1659_p3;
wire   [0:0] icmp_ln51_21_fu_1643_p2;
wire   [14:0] select_ln52_21_fu_1683_p3;
wire   [15:0] trunc_ln44_s_fu_243_p4;
wire   [9:0] tmp_62_fu_1705_p4;
wire   [5:0] tmp_41_fu_1723_p4;
wire   [0:0] icmp_ln52_22_fu_1733_p2;
wire   [14:0] shl_ln52_21_fu_1715_p3;
wire   [0:0] icmp_ln51_22_fu_1699_p2;
wire   [14:0] select_ln52_22_fu_1739_p3;
wire   [15:0] trunc_ln44_1_fu_253_p4;
wire   [9:0] tmp_63_fu_1761_p4;
wire   [5:0] tmp_42_fu_1779_p4;
wire   [0:0] icmp_ln52_23_fu_1789_p2;
wire   [14:0] shl_ln52_22_fu_1771_p3;
wire   [0:0] icmp_ln51_23_fu_1755_p2;
wire   [14:0] select_ln52_23_fu_1795_p3;
wire   [14:0] select_ln51_23_fu_1803_p3;
wire   [14:0] select_ln51_22_fu_1747_p3;
wire   [14:0] select_ln51_21_fu_1691_p3;
wire   [14:0] select_ln51_20_fu_1635_p3;
wire   [14:0] select_ln51_19_fu_1579_p3;
wire   [14:0] select_ln51_18_fu_1523_p3;
wire   [14:0] select_ln51_17_fu_1467_p3;
wire   [14:0] select_ln51_16_fu_1411_p3;
wire   [14:0] select_ln51_15_fu_1355_p3;
wire   [14:0] select_ln51_14_fu_1299_p3;
wire   [14:0] select_ln51_13_fu_1243_p3;
wire   [14:0] select_ln51_12_fu_1187_p3;
wire   [14:0] select_ln51_11_fu_1131_p3;
wire   [14:0] select_ln51_10_fu_1075_p3;
wire   [14:0] select_ln51_9_fu_1019_p3;
wire   [14:0] select_ln51_8_fu_963_p3;
wire   [14:0] select_ln51_7_fu_907_p3;
wire   [14:0] select_ln51_6_fu_851_p3;
wire   [14:0] select_ln51_5_fu_795_p3;
wire   [14:0] select_ln51_4_fu_739_p3;
wire   [14:0] select_ln51_3_fu_683_p3;
wire   [14:0] select_ln51_2_fu_627_p3;
wire   [14:0] select_ln51_1_fu_571_p3;
wire   [14:0] select_ln51_fu_515_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((real_start == 1'b0) | (layer5_out_full_n == 1'b0) | (layer4_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer5_out_full_n == 1'b0) | (layer4_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer5_out_full_n == 1'b0) | (layer4_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer5_out_full_n == 1'b0) | (layer4_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer4_out_blk_n = layer4_out_empty_n;
    end else begin
        layer4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer5_out_full_n == 1'b0) | (layer4_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer4_out_read = 1'b1;
    end else begin
        layer4_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer5_out_blk_n = layer5_out_full_n;
    end else begin
        layer5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer5_out_full_n == 1'b0) | (layer4_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer5_out_write = 1'b1;
    end else begin
        layer5_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer5_out_full_n == 1'b0) | (layer4_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln51_10_fu_1027_p2 = (($signed(tmp_6_fu_353_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_11_fu_1083_p2 = (($signed(tmp_7_fu_363_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_12_fu_1139_p2 = (($signed(tmp_8_fu_373_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_13_fu_1195_p2 = (($signed(tmp_9_fu_383_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_14_fu_1251_p2 = (($signed(tmp_s_fu_393_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_15_fu_1307_p2 = (($signed(tmp_10_fu_403_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_16_fu_1363_p2 = (($signed(tmp_11_fu_413_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_17_fu_1419_p2 = (($signed(tmp_12_fu_423_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_18_fu_1475_p2 = (($signed(tmp_13_fu_433_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_19_fu_1531_p2 = (($signed(tmp_14_fu_443_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_523_p2 = (($signed(in_data_1_fu_263_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_20_fu_1587_p2 = (($signed(tmp_15_fu_453_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_21_fu_1643_p2 = (($signed(tmp_16_fu_463_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_22_fu_1699_p2 = (($signed(trunc_ln44_s_fu_243_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_23_fu_1755_p2 = (($signed(trunc_ln44_1_fu_253_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_2_fu_579_p2 = (($signed(in_data_2_fu_273_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_3_fu_635_p2 = (($signed(in_data_3_fu_283_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_4_fu_691_p2 = (($signed(tmp_fu_293_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_5_fu_747_p2 = (($signed(tmp_1_fu_303_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_6_fu_803_p2 = (($signed(tmp_2_fu_313_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_7_fu_859_p2 = (($signed(tmp_3_fu_323_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_8_fu_915_p2 = (($signed(tmp_4_fu_333_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_9_fu_971_p2 = (($signed(tmp_5_fu_343_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_473_p2 = (($signed(in_data_fu_239_p1) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_10_fu_1061_p2 = ((tmp_29_fu_1051_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_11_fu_1117_p2 = ((tmp_30_fu_1107_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_12_fu_1173_p2 = ((tmp_31_fu_1163_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_13_fu_1229_p2 = ((tmp_32_fu_1219_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_14_fu_1285_p2 = ((tmp_33_fu_1275_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_15_fu_1341_p2 = ((tmp_34_fu_1331_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_16_fu_1397_p2 = ((tmp_35_fu_1387_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_17_fu_1453_p2 = ((tmp_36_fu_1443_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_18_fu_1509_p2 = ((tmp_37_fu_1499_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_19_fu_1565_p2 = ((tmp_38_fu_1555_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_1_fu_557_p2 = ((tmp_19_fu_547_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_20_fu_1621_p2 = ((tmp_39_fu_1611_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_21_fu_1677_p2 = ((tmp_40_fu_1667_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_22_fu_1733_p2 = ((tmp_41_fu_1723_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_23_fu_1789_p2 = ((tmp_42_fu_1779_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_2_fu_613_p2 = ((tmp_21_fu_603_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_3_fu_669_p2 = ((tmp_22_fu_659_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_4_fu_725_p2 = ((tmp_23_fu_715_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_5_fu_781_p2 = ((tmp_24_fu_771_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_6_fu_837_p2 = ((tmp_25_fu_827_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_7_fu_893_p2 = ((tmp_26_fu_883_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_8_fu_949_p2 = ((tmp_27_fu_939_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_9_fu_1005_p2 = ((tmp_28_fu_995_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_501_p2 = ((tmp_17_fu_491_p4 != 6'd0) ? 1'b1 : 1'b0);

assign in_data_1_fu_263_p4 = {{layer4_out_dout[31:16]}};

assign in_data_2_fu_273_p4 = {{layer4_out_dout[47:32]}};

assign in_data_3_fu_283_p4 = {{layer4_out_dout[63:48]}};

assign in_data_fu_239_p1 = layer4_out_dout[15:0];

assign layer5_out_din = {{{{{{{{{{{{{{{{{{{{{{{{select_ln51_23_fu_1803_p3}, {select_ln51_22_fu_1747_p3}}, {select_ln51_21_fu_1691_p3}}, {select_ln51_20_fu_1635_p3}}, {select_ln51_19_fu_1579_p3}}, {select_ln51_18_fu_1523_p3}}, {select_ln51_17_fu_1467_p3}}, {select_ln51_16_fu_1411_p3}}, {select_ln51_15_fu_1355_p3}}, {select_ln51_14_fu_1299_p3}}, {select_ln51_13_fu_1243_p3}}, {select_ln51_12_fu_1187_p3}}, {select_ln51_11_fu_1131_p3}}, {select_ln51_10_fu_1075_p3}}, {select_ln51_9_fu_1019_p3}}, {select_ln51_8_fu_963_p3}}, {select_ln51_7_fu_907_p3}}, {select_ln51_6_fu_851_p3}}, {select_ln51_5_fu_795_p3}}, {select_ln51_4_fu_739_p3}}, {select_ln51_3_fu_683_p3}}, {select_ln51_2_fu_627_p3}}, {select_ln51_1_fu_571_p3}}, {select_ln51_fu_515_p3}};

assign select_ln51_10_fu_1075_p3 = ((icmp_ln51_10_fu_1027_p2[0:0] == 1'b1) ? select_ln52_10_fu_1067_p3 : 15'd0);

assign select_ln51_11_fu_1131_p3 = ((icmp_ln51_11_fu_1083_p2[0:0] == 1'b1) ? select_ln52_11_fu_1123_p3 : 15'd0);

assign select_ln51_12_fu_1187_p3 = ((icmp_ln51_12_fu_1139_p2[0:0] == 1'b1) ? select_ln52_12_fu_1179_p3 : 15'd0);

assign select_ln51_13_fu_1243_p3 = ((icmp_ln51_13_fu_1195_p2[0:0] == 1'b1) ? select_ln52_13_fu_1235_p3 : 15'd0);

assign select_ln51_14_fu_1299_p3 = ((icmp_ln51_14_fu_1251_p2[0:0] == 1'b1) ? select_ln52_14_fu_1291_p3 : 15'd0);

assign select_ln51_15_fu_1355_p3 = ((icmp_ln51_15_fu_1307_p2[0:0] == 1'b1) ? select_ln52_15_fu_1347_p3 : 15'd0);

assign select_ln51_16_fu_1411_p3 = ((icmp_ln51_16_fu_1363_p2[0:0] == 1'b1) ? select_ln52_16_fu_1403_p3 : 15'd0);

assign select_ln51_17_fu_1467_p3 = ((icmp_ln51_17_fu_1419_p2[0:0] == 1'b1) ? select_ln52_17_fu_1459_p3 : 15'd0);

assign select_ln51_18_fu_1523_p3 = ((icmp_ln51_18_fu_1475_p2[0:0] == 1'b1) ? select_ln52_18_fu_1515_p3 : 15'd0);

assign select_ln51_19_fu_1579_p3 = ((icmp_ln51_19_fu_1531_p2[0:0] == 1'b1) ? select_ln52_19_fu_1571_p3 : 15'd0);

assign select_ln51_1_fu_571_p3 = ((icmp_ln51_1_fu_523_p2[0:0] == 1'b1) ? select_ln52_1_fu_563_p3 : 15'd0);

assign select_ln51_20_fu_1635_p3 = ((icmp_ln51_20_fu_1587_p2[0:0] == 1'b1) ? select_ln52_20_fu_1627_p3 : 15'd0);

assign select_ln51_21_fu_1691_p3 = ((icmp_ln51_21_fu_1643_p2[0:0] == 1'b1) ? select_ln52_21_fu_1683_p3 : 15'd0);

assign select_ln51_22_fu_1747_p3 = ((icmp_ln51_22_fu_1699_p2[0:0] == 1'b1) ? select_ln52_22_fu_1739_p3 : 15'd0);

assign select_ln51_23_fu_1803_p3 = ((icmp_ln51_23_fu_1755_p2[0:0] == 1'b1) ? select_ln52_23_fu_1795_p3 : 15'd0);

assign select_ln51_2_fu_627_p3 = ((icmp_ln51_2_fu_579_p2[0:0] == 1'b1) ? select_ln52_2_fu_619_p3 : 15'd0);

assign select_ln51_3_fu_683_p3 = ((icmp_ln51_3_fu_635_p2[0:0] == 1'b1) ? select_ln52_3_fu_675_p3 : 15'd0);

assign select_ln51_4_fu_739_p3 = ((icmp_ln51_4_fu_691_p2[0:0] == 1'b1) ? select_ln52_4_fu_731_p3 : 15'd0);

assign select_ln51_5_fu_795_p3 = ((icmp_ln51_5_fu_747_p2[0:0] == 1'b1) ? select_ln52_5_fu_787_p3 : 15'd0);

assign select_ln51_6_fu_851_p3 = ((icmp_ln51_6_fu_803_p2[0:0] == 1'b1) ? select_ln52_6_fu_843_p3 : 15'd0);

assign select_ln51_7_fu_907_p3 = ((icmp_ln51_7_fu_859_p2[0:0] == 1'b1) ? select_ln52_7_fu_899_p3 : 15'd0);

assign select_ln51_8_fu_963_p3 = ((icmp_ln51_8_fu_915_p2[0:0] == 1'b1) ? select_ln52_8_fu_955_p3 : 15'd0);

assign select_ln51_9_fu_1019_p3 = ((icmp_ln51_9_fu_971_p2[0:0] == 1'b1) ? select_ln52_9_fu_1011_p3 : 15'd0);

assign select_ln51_fu_515_p3 = ((icmp_ln51_fu_473_p2[0:0] == 1'b1) ? select_ln52_fu_507_p3 : 15'd0);

assign select_ln52_10_fu_1067_p3 = ((icmp_ln52_10_fu_1061_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_s_fu_1043_p3);

assign select_ln52_11_fu_1123_p3 = ((icmp_ln52_11_fu_1117_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_10_fu_1099_p3);

assign select_ln52_12_fu_1179_p3 = ((icmp_ln52_12_fu_1173_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_11_fu_1155_p3);

assign select_ln52_13_fu_1235_p3 = ((icmp_ln52_13_fu_1229_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_12_fu_1211_p3);

assign select_ln52_14_fu_1291_p3 = ((icmp_ln52_14_fu_1285_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_13_fu_1267_p3);

assign select_ln52_15_fu_1347_p3 = ((icmp_ln52_15_fu_1341_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_14_fu_1323_p3);

assign select_ln52_16_fu_1403_p3 = ((icmp_ln52_16_fu_1397_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_15_fu_1379_p3);

assign select_ln52_17_fu_1459_p3 = ((icmp_ln52_17_fu_1453_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_16_fu_1435_p3);

assign select_ln52_18_fu_1515_p3 = ((icmp_ln52_18_fu_1509_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_17_fu_1491_p3);

assign select_ln52_19_fu_1571_p3 = ((icmp_ln52_19_fu_1565_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_18_fu_1547_p3);

assign select_ln52_1_fu_563_p3 = ((icmp_ln52_1_fu_557_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_1_fu_539_p3);

assign select_ln52_20_fu_1627_p3 = ((icmp_ln52_20_fu_1621_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_19_fu_1603_p3);

assign select_ln52_21_fu_1683_p3 = ((icmp_ln52_21_fu_1677_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_20_fu_1659_p3);

assign select_ln52_22_fu_1739_p3 = ((icmp_ln52_22_fu_1733_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_21_fu_1715_p3);

assign select_ln52_23_fu_1795_p3 = ((icmp_ln52_23_fu_1789_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_22_fu_1771_p3);

assign select_ln52_2_fu_619_p3 = ((icmp_ln52_2_fu_613_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_2_fu_595_p3);

assign select_ln52_3_fu_675_p3 = ((icmp_ln52_3_fu_669_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_3_fu_651_p3);

assign select_ln52_4_fu_731_p3 = ((icmp_ln52_4_fu_725_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_4_fu_707_p3);

assign select_ln52_5_fu_787_p3 = ((icmp_ln52_5_fu_781_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_5_fu_763_p3);

assign select_ln52_6_fu_843_p3 = ((icmp_ln52_6_fu_837_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_6_fu_819_p3);

assign select_ln52_7_fu_899_p3 = ((icmp_ln52_7_fu_893_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_7_fu_875_p3);

assign select_ln52_8_fu_955_p3 = ((icmp_ln52_8_fu_949_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_8_fu_931_p3);

assign select_ln52_9_fu_1011_p3 = ((icmp_ln52_9_fu_1005_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_9_fu_987_p3);

assign select_ln52_fu_507_p3 = ((icmp_ln52_fu_501_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln_fu_483_p3);

assign shl_ln52_10_fu_1099_p3 = {{tmp_51_fu_1089_p4}, {5'd0}};

assign shl_ln52_11_fu_1155_p3 = {{tmp_52_fu_1145_p4}, {5'd0}};

assign shl_ln52_12_fu_1211_p3 = {{tmp_53_fu_1201_p4}, {5'd0}};

assign shl_ln52_13_fu_1267_p3 = {{tmp_54_fu_1257_p4}, {5'd0}};

assign shl_ln52_14_fu_1323_p3 = {{tmp_55_fu_1313_p4}, {5'd0}};

assign shl_ln52_15_fu_1379_p3 = {{tmp_56_fu_1369_p4}, {5'd0}};

assign shl_ln52_16_fu_1435_p3 = {{tmp_57_fu_1425_p4}, {5'd0}};

assign shl_ln52_17_fu_1491_p3 = {{tmp_58_fu_1481_p4}, {5'd0}};

assign shl_ln52_18_fu_1547_p3 = {{tmp_59_fu_1537_p4}, {5'd0}};

assign shl_ln52_19_fu_1603_p3 = {{tmp_60_fu_1593_p4}, {5'd0}};

assign shl_ln52_1_fu_539_p3 = {{tmp_18_fu_529_p4}, {5'd0}};

assign shl_ln52_20_fu_1659_p3 = {{tmp_61_fu_1649_p4}, {5'd0}};

assign shl_ln52_21_fu_1715_p3 = {{tmp_62_fu_1705_p4}, {5'd0}};

assign shl_ln52_22_fu_1771_p3 = {{tmp_63_fu_1761_p4}, {5'd0}};

assign shl_ln52_2_fu_595_p3 = {{tmp_20_fu_585_p4}, {5'd0}};

assign shl_ln52_3_fu_651_p3 = {{tmp_43_fu_641_p4}, {5'd0}};

assign shl_ln52_4_fu_707_p3 = {{tmp_44_fu_697_p4}, {5'd0}};

assign shl_ln52_5_fu_763_p3 = {{tmp_45_fu_753_p4}, {5'd0}};

assign shl_ln52_6_fu_819_p3 = {{tmp_46_fu_809_p4}, {5'd0}};

assign shl_ln52_7_fu_875_p3 = {{tmp_47_fu_865_p4}, {5'd0}};

assign shl_ln52_8_fu_931_p3 = {{tmp_48_fu_921_p4}, {5'd0}};

assign shl_ln52_9_fu_987_p3 = {{tmp_49_fu_977_p4}, {5'd0}};

assign shl_ln52_s_fu_1043_p3 = {{tmp_50_fu_1033_p4}, {5'd0}};

assign shl_ln_fu_483_p3 = {{trunc_ln52_fu_479_p1}, {5'd0}};

assign start_out = real_start;

assign tmp_10_fu_403_p4 = {{layer4_out_dout[255:240]}};

assign tmp_11_fu_413_p4 = {{layer4_out_dout[271:256]}};

assign tmp_12_fu_423_p4 = {{layer4_out_dout[287:272]}};

assign tmp_13_fu_433_p4 = {{layer4_out_dout[303:288]}};

assign tmp_14_fu_443_p4 = {{layer4_out_dout[319:304]}};

assign tmp_15_fu_453_p4 = {{layer4_out_dout[335:320]}};

assign tmp_16_fu_463_p4 = {{layer4_out_dout[351:336]}};

assign tmp_17_fu_491_p4 = {{layer4_out_dout[15:10]}};

assign tmp_18_fu_529_p4 = {{layer4_out_dout[25:16]}};

assign tmp_19_fu_547_p4 = {{layer4_out_dout[31:26]}};

assign tmp_1_fu_303_p4 = {{layer4_out_dout[95:80]}};

assign tmp_20_fu_585_p4 = {{layer4_out_dout[41:32]}};

assign tmp_21_fu_603_p4 = {{layer4_out_dout[47:42]}};

assign tmp_22_fu_659_p4 = {{layer4_out_dout[63:58]}};

assign tmp_23_fu_715_p4 = {{layer4_out_dout[79:74]}};

assign tmp_24_fu_771_p4 = {{layer4_out_dout[95:90]}};

assign tmp_25_fu_827_p4 = {{layer4_out_dout[111:106]}};

assign tmp_26_fu_883_p4 = {{layer4_out_dout[127:122]}};

assign tmp_27_fu_939_p4 = {{layer4_out_dout[143:138]}};

assign tmp_28_fu_995_p4 = {{layer4_out_dout[159:154]}};

assign tmp_29_fu_1051_p4 = {{layer4_out_dout[175:170]}};

assign tmp_2_fu_313_p4 = {{layer4_out_dout[111:96]}};

assign tmp_30_fu_1107_p4 = {{layer4_out_dout[191:186]}};

assign tmp_31_fu_1163_p4 = {{layer4_out_dout[207:202]}};

assign tmp_32_fu_1219_p4 = {{layer4_out_dout[223:218]}};

assign tmp_33_fu_1275_p4 = {{layer4_out_dout[239:234]}};

assign tmp_34_fu_1331_p4 = {{layer4_out_dout[255:250]}};

assign tmp_35_fu_1387_p4 = {{layer4_out_dout[271:266]}};

assign tmp_36_fu_1443_p4 = {{layer4_out_dout[287:282]}};

assign tmp_37_fu_1499_p4 = {{layer4_out_dout[303:298]}};

assign tmp_38_fu_1555_p4 = {{layer4_out_dout[319:314]}};

assign tmp_39_fu_1611_p4 = {{layer4_out_dout[335:330]}};

assign tmp_3_fu_323_p4 = {{layer4_out_dout[127:112]}};

assign tmp_40_fu_1667_p4 = {{layer4_out_dout[351:346]}};

assign tmp_41_fu_1723_p4 = {{layer4_out_dout[367:362]}};

assign tmp_42_fu_1779_p4 = {{layer4_out_dout[383:378]}};

assign tmp_43_fu_641_p4 = {{layer4_out_dout[57:48]}};

assign tmp_44_fu_697_p4 = {{layer4_out_dout[73:64]}};

assign tmp_45_fu_753_p4 = {{layer4_out_dout[89:80]}};

assign tmp_46_fu_809_p4 = {{layer4_out_dout[105:96]}};

assign tmp_47_fu_865_p4 = {{layer4_out_dout[121:112]}};

assign tmp_48_fu_921_p4 = {{layer4_out_dout[137:128]}};

assign tmp_49_fu_977_p4 = {{layer4_out_dout[153:144]}};

assign tmp_4_fu_333_p4 = {{layer4_out_dout[143:128]}};

assign tmp_50_fu_1033_p4 = {{layer4_out_dout[169:160]}};

assign tmp_51_fu_1089_p4 = {{layer4_out_dout[185:176]}};

assign tmp_52_fu_1145_p4 = {{layer4_out_dout[201:192]}};

assign tmp_53_fu_1201_p4 = {{layer4_out_dout[217:208]}};

assign tmp_54_fu_1257_p4 = {{layer4_out_dout[233:224]}};

assign tmp_55_fu_1313_p4 = {{layer4_out_dout[249:240]}};

assign tmp_56_fu_1369_p4 = {{layer4_out_dout[265:256]}};

assign tmp_57_fu_1425_p4 = {{layer4_out_dout[281:272]}};

assign tmp_58_fu_1481_p4 = {{layer4_out_dout[297:288]}};

assign tmp_59_fu_1537_p4 = {{layer4_out_dout[313:304]}};

assign tmp_5_fu_343_p4 = {{layer4_out_dout[159:144]}};

assign tmp_60_fu_1593_p4 = {{layer4_out_dout[329:320]}};

assign tmp_61_fu_1649_p4 = {{layer4_out_dout[345:336]}};

assign tmp_62_fu_1705_p4 = {{layer4_out_dout[361:352]}};

assign tmp_63_fu_1761_p4 = {{layer4_out_dout[377:368]}};

assign tmp_6_fu_353_p4 = {{layer4_out_dout[175:160]}};

assign tmp_7_fu_363_p4 = {{layer4_out_dout[191:176]}};

assign tmp_8_fu_373_p4 = {{layer4_out_dout[207:192]}};

assign tmp_9_fu_383_p4 = {{layer4_out_dout[223:208]}};

assign tmp_fu_293_p4 = {{layer4_out_dout[79:64]}};

assign tmp_s_fu_393_p4 = {{layer4_out_dout[239:224]}};

assign trunc_ln44_1_fu_253_p4 = {{layer4_out_dout[383:368]}};

assign trunc_ln44_s_fu_243_p4 = {{layer4_out_dout[367:352]}};

assign trunc_ln52_fu_479_p1 = layer4_out_dout[9:0];

endmodule //myproject_relu_array_ap_fixed_24u_array_ap_ufixed_15_0_4_0_0_24u_relu_config5_s
