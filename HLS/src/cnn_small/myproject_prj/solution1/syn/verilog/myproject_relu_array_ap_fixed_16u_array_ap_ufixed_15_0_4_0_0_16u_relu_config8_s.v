// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_array_ap_fixed_16u_array_ap_ufixed_15_0_4_0_0_16u_relu_config8_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer7_out_dout,
        layer7_out_num_data_valid,
        layer7_out_fifo_cap,
        layer7_out_empty_n,
        layer7_out_read,
        layer8_out_din,
        layer8_out_num_data_valid,
        layer8_out_fifo_cap,
        layer8_out_full_n,
        layer8_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [255:0] layer7_out_dout;
input  [1:0] layer7_out_num_data_valid;
input  [1:0] layer7_out_fifo_cap;
input   layer7_out_empty_n;
output   layer7_out_read;
output  [239:0] layer8_out_din;
input  [1:0] layer8_out_num_data_valid;
input  [1:0] layer8_out_fifo_cap;
input   layer8_out_full_n;
output   layer8_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer7_out_read;
reg layer8_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer7_out_blk_n;
reg    layer8_out_blk_n;
reg    ap_block_state1;
wire   [15:0] in_data_fu_175_p1;
wire   [9:0] trunc_ln52_fu_335_p1;
wire   [5:0] tmp_67_fu_347_p4;
wire   [0:0] icmp_ln52_fu_357_p2;
wire   [14:0] shl_ln_fu_339_p3;
wire   [0:0] icmp_ln51_fu_329_p2;
wire   [14:0] select_ln52_fu_363_p3;
wire   [15:0] in_data_4_fu_199_p4;
wire   [9:0] tmp_88_fu_385_p4;
wire   [5:0] tmp_68_fu_403_p4;
wire   [0:0] icmp_ln52_32_fu_413_p2;
wire   [14:0] shl_ln52_s_fu_395_p3;
wire   [0:0] icmp_ln51_32_fu_379_p2;
wire   [14:0] select_ln52_32_fu_419_p3;
wire   [15:0] in_data_5_fu_209_p4;
wire   [9:0] tmp_89_fu_441_p4;
wire   [5:0] tmp_69_fu_459_p4;
wire   [0:0] icmp_ln52_33_fu_469_p2;
wire   [14:0] shl_ln52_31_fu_451_p3;
wire   [0:0] icmp_ln51_33_fu_435_p2;
wire   [14:0] select_ln52_33_fu_475_p3;
wire   [15:0] in_data_6_fu_219_p4;
wire   [9:0] tmp_90_fu_497_p4;
wire   [5:0] tmp_70_fu_515_p4;
wire   [0:0] icmp_ln52_34_fu_525_p2;
wire   [14:0] shl_ln52_32_fu_507_p3;
wire   [0:0] icmp_ln51_34_fu_491_p2;
wire   [14:0] select_ln52_34_fu_531_p3;
wire   [15:0] tmp_fu_229_p4;
wire   [9:0] tmp_91_fu_553_p4;
wire   [5:0] tmp_71_fu_571_p4;
wire   [0:0] icmp_ln52_35_fu_581_p2;
wire   [14:0] shl_ln52_33_fu_563_p3;
wire   [0:0] icmp_ln51_35_fu_547_p2;
wire   [14:0] select_ln52_35_fu_587_p3;
wire   [15:0] tmp_s_fu_239_p4;
wire   [9:0] tmp_92_fu_609_p4;
wire   [5:0] tmp_72_fu_627_p4;
wire   [0:0] icmp_ln52_36_fu_637_p2;
wire   [14:0] shl_ln52_34_fu_619_p3;
wire   [0:0] icmp_ln51_36_fu_603_p2;
wire   [14:0] select_ln52_36_fu_643_p3;
wire   [15:0] tmp_59_fu_249_p4;
wire   [9:0] tmp_93_fu_665_p4;
wire   [5:0] tmp_73_fu_683_p4;
wire   [0:0] icmp_ln52_37_fu_693_p2;
wire   [14:0] shl_ln52_35_fu_675_p3;
wire   [0:0] icmp_ln51_37_fu_659_p2;
wire   [14:0] select_ln52_37_fu_699_p3;
wire   [15:0] tmp_60_fu_259_p4;
wire   [9:0] tmp_94_fu_721_p4;
wire   [5:0] tmp_74_fu_739_p4;
wire   [0:0] icmp_ln52_38_fu_749_p2;
wire   [14:0] shl_ln52_36_fu_731_p3;
wire   [0:0] icmp_ln51_38_fu_715_p2;
wire   [14:0] select_ln52_38_fu_755_p3;
wire   [15:0] tmp_61_fu_269_p4;
wire   [9:0] tmp_95_fu_777_p4;
wire   [5:0] tmp_75_fu_795_p4;
wire   [0:0] icmp_ln52_39_fu_805_p2;
wire   [14:0] shl_ln52_37_fu_787_p3;
wire   [0:0] icmp_ln51_39_fu_771_p2;
wire   [14:0] select_ln52_39_fu_811_p3;
wire   [15:0] tmp_62_fu_279_p4;
wire   [9:0] tmp_96_fu_833_p4;
wire   [5:0] tmp_76_fu_851_p4;
wire   [0:0] icmp_ln52_40_fu_861_p2;
wire   [14:0] shl_ln52_38_fu_843_p3;
wire   [0:0] icmp_ln51_40_fu_827_p2;
wire   [14:0] select_ln52_40_fu_867_p3;
wire   [15:0] tmp_63_fu_289_p4;
wire   [9:0] tmp_97_fu_889_p4;
wire   [5:0] tmp_77_fu_907_p4;
wire   [0:0] icmp_ln52_41_fu_917_p2;
wire   [14:0] shl_ln52_39_fu_899_p3;
wire   [0:0] icmp_ln51_41_fu_883_p2;
wire   [14:0] select_ln52_41_fu_923_p3;
wire   [15:0] tmp_64_fu_299_p4;
wire   [9:0] tmp_98_fu_945_p4;
wire   [5:0] tmp_78_fu_963_p4;
wire   [0:0] icmp_ln52_42_fu_973_p2;
wire   [14:0] shl_ln52_40_fu_955_p3;
wire   [0:0] icmp_ln51_42_fu_939_p2;
wire   [14:0] select_ln52_42_fu_979_p3;
wire   [15:0] tmp_65_fu_309_p4;
wire   [9:0] tmp_99_fu_1001_p4;
wire   [5:0] tmp_79_fu_1019_p4;
wire   [0:0] icmp_ln52_43_fu_1029_p2;
wire   [14:0] shl_ln52_41_fu_1011_p3;
wire   [0:0] icmp_ln51_43_fu_995_p2;
wire   [14:0] select_ln52_43_fu_1035_p3;
wire   [15:0] tmp_66_fu_319_p4;
wire   [9:0] tmp_100_fu_1057_p4;
wire   [5:0] tmp_80_fu_1075_p4;
wire   [0:0] icmp_ln52_44_fu_1085_p2;
wire   [14:0] shl_ln52_42_fu_1067_p3;
wire   [0:0] icmp_ln51_44_fu_1051_p2;
wire   [14:0] select_ln52_44_fu_1091_p3;
wire   [15:0] trunc_ln44_s_fu_179_p4;
wire   [9:0] tmp_101_fu_1113_p4;
wire   [5:0] tmp_81_fu_1131_p4;
wire   [0:0] icmp_ln52_45_fu_1141_p2;
wire   [14:0] shl_ln52_43_fu_1123_p3;
wire   [0:0] icmp_ln51_45_fu_1107_p2;
wire   [14:0] select_ln52_45_fu_1147_p3;
wire   [15:0] trunc_ln44_2_fu_189_p4;
wire   [9:0] tmp_102_fu_1169_p4;
wire   [5:0] tmp_82_fu_1187_p4;
wire   [0:0] icmp_ln52_46_fu_1197_p2;
wire   [14:0] shl_ln52_44_fu_1179_p3;
wire   [0:0] icmp_ln51_46_fu_1163_p2;
wire   [14:0] select_ln52_46_fu_1203_p3;
wire   [14:0] select_ln51_46_fu_1211_p3;
wire   [14:0] select_ln51_45_fu_1155_p3;
wire   [14:0] select_ln51_44_fu_1099_p3;
wire   [14:0] select_ln51_43_fu_1043_p3;
wire   [14:0] select_ln51_42_fu_987_p3;
wire   [14:0] select_ln51_41_fu_931_p3;
wire   [14:0] select_ln51_40_fu_875_p3;
wire   [14:0] select_ln51_39_fu_819_p3;
wire   [14:0] select_ln51_38_fu_763_p3;
wire   [14:0] select_ln51_37_fu_707_p3;
wire   [14:0] select_ln51_36_fu_651_p3;
wire   [14:0] select_ln51_35_fu_595_p3;
wire   [14:0] select_ln51_34_fu_539_p3;
wire   [14:0] select_ln51_33_fu_483_p3;
wire   [14:0] select_ln51_32_fu_427_p3;
wire   [14:0] select_ln51_fu_371_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((real_start == 1'b0) | (layer8_out_full_n == 1'b0) | (layer7_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer8_out_full_n == 1'b0) | (layer7_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer8_out_full_n == 1'b0) | (layer7_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer8_out_full_n == 1'b0) | (layer7_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer7_out_blk_n = layer7_out_empty_n;
    end else begin
        layer7_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer8_out_full_n == 1'b0) | (layer7_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer7_out_read = 1'b1;
    end else begin
        layer7_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer8_out_blk_n = layer8_out_full_n;
    end else begin
        layer8_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer8_out_full_n == 1'b0) | (layer7_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer8_out_write = 1'b1;
    end else begin
        layer8_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer8_out_full_n == 1'b0) | (layer7_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln51_32_fu_379_p2 = (($signed(in_data_4_fu_199_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_33_fu_435_p2 = (($signed(in_data_5_fu_209_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_34_fu_491_p2 = (($signed(in_data_6_fu_219_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_35_fu_547_p2 = (($signed(tmp_fu_229_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_36_fu_603_p2 = (($signed(tmp_s_fu_239_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_37_fu_659_p2 = (($signed(tmp_59_fu_249_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_38_fu_715_p2 = (($signed(tmp_60_fu_259_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_39_fu_771_p2 = (($signed(tmp_61_fu_269_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_40_fu_827_p2 = (($signed(tmp_62_fu_279_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_41_fu_883_p2 = (($signed(tmp_63_fu_289_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_42_fu_939_p2 = (($signed(tmp_64_fu_299_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_43_fu_995_p2 = (($signed(tmp_65_fu_309_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_44_fu_1051_p2 = (($signed(tmp_66_fu_319_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_45_fu_1107_p2 = (($signed(trunc_ln44_s_fu_179_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_46_fu_1163_p2 = (($signed(trunc_ln44_2_fu_189_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_329_p2 = (($signed(in_data_fu_175_p1) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_32_fu_413_p2 = ((tmp_68_fu_403_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_33_fu_469_p2 = ((tmp_69_fu_459_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_34_fu_525_p2 = ((tmp_70_fu_515_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_35_fu_581_p2 = ((tmp_71_fu_571_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_36_fu_637_p2 = ((tmp_72_fu_627_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_37_fu_693_p2 = ((tmp_73_fu_683_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_38_fu_749_p2 = ((tmp_74_fu_739_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_39_fu_805_p2 = ((tmp_75_fu_795_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_40_fu_861_p2 = ((tmp_76_fu_851_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_41_fu_917_p2 = ((tmp_77_fu_907_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_42_fu_973_p2 = ((tmp_78_fu_963_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_43_fu_1029_p2 = ((tmp_79_fu_1019_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_44_fu_1085_p2 = ((tmp_80_fu_1075_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_45_fu_1141_p2 = ((tmp_81_fu_1131_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_46_fu_1197_p2 = ((tmp_82_fu_1187_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_357_p2 = ((tmp_67_fu_347_p4 != 6'd0) ? 1'b1 : 1'b0);

assign in_data_4_fu_199_p4 = {{layer7_out_dout[31:16]}};

assign in_data_5_fu_209_p4 = {{layer7_out_dout[47:32]}};

assign in_data_6_fu_219_p4 = {{layer7_out_dout[63:48]}};

assign in_data_fu_175_p1 = layer7_out_dout[15:0];

assign layer8_out_din = {{{{{{{{{{{{{{{{select_ln51_46_fu_1211_p3}, {select_ln51_45_fu_1155_p3}}, {select_ln51_44_fu_1099_p3}}, {select_ln51_43_fu_1043_p3}}, {select_ln51_42_fu_987_p3}}, {select_ln51_41_fu_931_p3}}, {select_ln51_40_fu_875_p3}}, {select_ln51_39_fu_819_p3}}, {select_ln51_38_fu_763_p3}}, {select_ln51_37_fu_707_p3}}, {select_ln51_36_fu_651_p3}}, {select_ln51_35_fu_595_p3}}, {select_ln51_34_fu_539_p3}}, {select_ln51_33_fu_483_p3}}, {select_ln51_32_fu_427_p3}}, {select_ln51_fu_371_p3}};

assign select_ln51_32_fu_427_p3 = ((icmp_ln51_32_fu_379_p2[0:0] == 1'b1) ? select_ln52_32_fu_419_p3 : 15'd0);

assign select_ln51_33_fu_483_p3 = ((icmp_ln51_33_fu_435_p2[0:0] == 1'b1) ? select_ln52_33_fu_475_p3 : 15'd0);

assign select_ln51_34_fu_539_p3 = ((icmp_ln51_34_fu_491_p2[0:0] == 1'b1) ? select_ln52_34_fu_531_p3 : 15'd0);

assign select_ln51_35_fu_595_p3 = ((icmp_ln51_35_fu_547_p2[0:0] == 1'b1) ? select_ln52_35_fu_587_p3 : 15'd0);

assign select_ln51_36_fu_651_p3 = ((icmp_ln51_36_fu_603_p2[0:0] == 1'b1) ? select_ln52_36_fu_643_p3 : 15'd0);

assign select_ln51_37_fu_707_p3 = ((icmp_ln51_37_fu_659_p2[0:0] == 1'b1) ? select_ln52_37_fu_699_p3 : 15'd0);

assign select_ln51_38_fu_763_p3 = ((icmp_ln51_38_fu_715_p2[0:0] == 1'b1) ? select_ln52_38_fu_755_p3 : 15'd0);

assign select_ln51_39_fu_819_p3 = ((icmp_ln51_39_fu_771_p2[0:0] == 1'b1) ? select_ln52_39_fu_811_p3 : 15'd0);

assign select_ln51_40_fu_875_p3 = ((icmp_ln51_40_fu_827_p2[0:0] == 1'b1) ? select_ln52_40_fu_867_p3 : 15'd0);

assign select_ln51_41_fu_931_p3 = ((icmp_ln51_41_fu_883_p2[0:0] == 1'b1) ? select_ln52_41_fu_923_p3 : 15'd0);

assign select_ln51_42_fu_987_p3 = ((icmp_ln51_42_fu_939_p2[0:0] == 1'b1) ? select_ln52_42_fu_979_p3 : 15'd0);

assign select_ln51_43_fu_1043_p3 = ((icmp_ln51_43_fu_995_p2[0:0] == 1'b1) ? select_ln52_43_fu_1035_p3 : 15'd0);

assign select_ln51_44_fu_1099_p3 = ((icmp_ln51_44_fu_1051_p2[0:0] == 1'b1) ? select_ln52_44_fu_1091_p3 : 15'd0);

assign select_ln51_45_fu_1155_p3 = ((icmp_ln51_45_fu_1107_p2[0:0] == 1'b1) ? select_ln52_45_fu_1147_p3 : 15'd0);

assign select_ln51_46_fu_1211_p3 = ((icmp_ln51_46_fu_1163_p2[0:0] == 1'b1) ? select_ln52_46_fu_1203_p3 : 15'd0);

assign select_ln51_fu_371_p3 = ((icmp_ln51_fu_329_p2[0:0] == 1'b1) ? select_ln52_fu_363_p3 : 15'd0);

assign select_ln52_32_fu_419_p3 = ((icmp_ln52_32_fu_413_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_s_fu_395_p3);

assign select_ln52_33_fu_475_p3 = ((icmp_ln52_33_fu_469_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_31_fu_451_p3);

assign select_ln52_34_fu_531_p3 = ((icmp_ln52_34_fu_525_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_32_fu_507_p3);

assign select_ln52_35_fu_587_p3 = ((icmp_ln52_35_fu_581_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_33_fu_563_p3);

assign select_ln52_36_fu_643_p3 = ((icmp_ln52_36_fu_637_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_34_fu_619_p3);

assign select_ln52_37_fu_699_p3 = ((icmp_ln52_37_fu_693_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_35_fu_675_p3);

assign select_ln52_38_fu_755_p3 = ((icmp_ln52_38_fu_749_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_36_fu_731_p3);

assign select_ln52_39_fu_811_p3 = ((icmp_ln52_39_fu_805_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_37_fu_787_p3);

assign select_ln52_40_fu_867_p3 = ((icmp_ln52_40_fu_861_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_38_fu_843_p3);

assign select_ln52_41_fu_923_p3 = ((icmp_ln52_41_fu_917_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_39_fu_899_p3);

assign select_ln52_42_fu_979_p3 = ((icmp_ln52_42_fu_973_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_40_fu_955_p3);

assign select_ln52_43_fu_1035_p3 = ((icmp_ln52_43_fu_1029_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_41_fu_1011_p3);

assign select_ln52_44_fu_1091_p3 = ((icmp_ln52_44_fu_1085_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_42_fu_1067_p3);

assign select_ln52_45_fu_1147_p3 = ((icmp_ln52_45_fu_1141_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_43_fu_1123_p3);

assign select_ln52_46_fu_1203_p3 = ((icmp_ln52_46_fu_1197_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln52_44_fu_1179_p3);

assign select_ln52_fu_363_p3 = ((icmp_ln52_fu_357_p2[0:0] == 1'b1) ? 15'd32767 : shl_ln_fu_339_p3);

assign shl_ln52_31_fu_451_p3 = {{tmp_89_fu_441_p4}, {5'd0}};

assign shl_ln52_32_fu_507_p3 = {{tmp_90_fu_497_p4}, {5'd0}};

assign shl_ln52_33_fu_563_p3 = {{tmp_91_fu_553_p4}, {5'd0}};

assign shl_ln52_34_fu_619_p3 = {{tmp_92_fu_609_p4}, {5'd0}};

assign shl_ln52_35_fu_675_p3 = {{tmp_93_fu_665_p4}, {5'd0}};

assign shl_ln52_36_fu_731_p3 = {{tmp_94_fu_721_p4}, {5'd0}};

assign shl_ln52_37_fu_787_p3 = {{tmp_95_fu_777_p4}, {5'd0}};

assign shl_ln52_38_fu_843_p3 = {{tmp_96_fu_833_p4}, {5'd0}};

assign shl_ln52_39_fu_899_p3 = {{tmp_97_fu_889_p4}, {5'd0}};

assign shl_ln52_40_fu_955_p3 = {{tmp_98_fu_945_p4}, {5'd0}};

assign shl_ln52_41_fu_1011_p3 = {{tmp_99_fu_1001_p4}, {5'd0}};

assign shl_ln52_42_fu_1067_p3 = {{tmp_100_fu_1057_p4}, {5'd0}};

assign shl_ln52_43_fu_1123_p3 = {{tmp_101_fu_1113_p4}, {5'd0}};

assign shl_ln52_44_fu_1179_p3 = {{tmp_102_fu_1169_p4}, {5'd0}};

assign shl_ln52_s_fu_395_p3 = {{tmp_88_fu_385_p4}, {5'd0}};

assign shl_ln_fu_339_p3 = {{trunc_ln52_fu_335_p1}, {5'd0}};

assign start_out = real_start;

assign tmp_100_fu_1057_p4 = {{layer7_out_dout[217:208]}};

assign tmp_101_fu_1113_p4 = {{layer7_out_dout[233:224]}};

assign tmp_102_fu_1169_p4 = {{layer7_out_dout[249:240]}};

assign tmp_59_fu_249_p4 = {{layer7_out_dout[111:96]}};

assign tmp_60_fu_259_p4 = {{layer7_out_dout[127:112]}};

assign tmp_61_fu_269_p4 = {{layer7_out_dout[143:128]}};

assign tmp_62_fu_279_p4 = {{layer7_out_dout[159:144]}};

assign tmp_63_fu_289_p4 = {{layer7_out_dout[175:160]}};

assign tmp_64_fu_299_p4 = {{layer7_out_dout[191:176]}};

assign tmp_65_fu_309_p4 = {{layer7_out_dout[207:192]}};

assign tmp_66_fu_319_p4 = {{layer7_out_dout[223:208]}};

assign tmp_67_fu_347_p4 = {{layer7_out_dout[15:10]}};

assign tmp_68_fu_403_p4 = {{layer7_out_dout[31:26]}};

assign tmp_69_fu_459_p4 = {{layer7_out_dout[47:42]}};

assign tmp_70_fu_515_p4 = {{layer7_out_dout[63:58]}};

assign tmp_71_fu_571_p4 = {{layer7_out_dout[79:74]}};

assign tmp_72_fu_627_p4 = {{layer7_out_dout[95:90]}};

assign tmp_73_fu_683_p4 = {{layer7_out_dout[111:106]}};

assign tmp_74_fu_739_p4 = {{layer7_out_dout[127:122]}};

assign tmp_75_fu_795_p4 = {{layer7_out_dout[143:138]}};

assign tmp_76_fu_851_p4 = {{layer7_out_dout[159:154]}};

assign tmp_77_fu_907_p4 = {{layer7_out_dout[175:170]}};

assign tmp_78_fu_963_p4 = {{layer7_out_dout[191:186]}};

assign tmp_79_fu_1019_p4 = {{layer7_out_dout[207:202]}};

assign tmp_80_fu_1075_p4 = {{layer7_out_dout[223:218]}};

assign tmp_81_fu_1131_p4 = {{layer7_out_dout[239:234]}};

assign tmp_82_fu_1187_p4 = {{layer7_out_dout[255:250]}};

assign tmp_88_fu_385_p4 = {{layer7_out_dout[25:16]}};

assign tmp_89_fu_441_p4 = {{layer7_out_dout[41:32]}};

assign tmp_90_fu_497_p4 = {{layer7_out_dout[57:48]}};

assign tmp_91_fu_553_p4 = {{layer7_out_dout[73:64]}};

assign tmp_92_fu_609_p4 = {{layer7_out_dout[89:80]}};

assign tmp_93_fu_665_p4 = {{layer7_out_dout[105:96]}};

assign tmp_94_fu_721_p4 = {{layer7_out_dout[121:112]}};

assign tmp_95_fu_777_p4 = {{layer7_out_dout[137:128]}};

assign tmp_96_fu_833_p4 = {{layer7_out_dout[153:144]}};

assign tmp_97_fu_889_p4 = {{layer7_out_dout[169:160]}};

assign tmp_98_fu_945_p4 = {{layer7_out_dout[185:176]}};

assign tmp_99_fu_1001_p4 = {{layer7_out_dout[201:192]}};

assign tmp_fu_229_p4 = {{layer7_out_dout[79:64]}};

assign tmp_s_fu_239_p4 = {{layer7_out_dout[95:80]}};

assign trunc_ln44_2_fu_189_p4 = {{layer7_out_dout[255:240]}};

assign trunc_ln44_s_fu_179_p4 = {{layer7_out_dout[239:224]}};

assign trunc_ln52_fu_335_p1 = layer7_out_dout[9:0];

endmodule //myproject_relu_array_ap_fixed_16u_array_ap_ufixed_15_0_4_0_0_16u_relu_config8_s
